{
	"id": "10364d3be42c49a13cb3a1ece04c8f04",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTSalesSplitter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport './interfaces/IERC20.sol';\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\n\ninterface IRoyalties{\n    function deposit(uint256 amount) external;\n}\ninterface IWBNB{\n     function deposit() external payable ;\n}\n\ninterface IStakingNFTConverter {\n    function claimFees() external;\n    function swap() external;\n}\n\n// The base pair of pools, either stable or volatile\ncontract NFTSalesSplitter is OwnableUpgradeable  {\n\n    uint256 constant public PRECISION = 1000;\n    uint256 constant public WEEK = 86400 * 7;\n    uint256 public converterFee;\n    uint256 public royaltiesFee;\n    \n\n    address public wbnb;\n    \n    address public stakingConverter;\n    address public royalties;\n\n\n    mapping(address => bool) public splitter;\n\n\n    event Split(uint256 indexed timestamp, uint256 toStake, uint256 toRoyalties);\n    \n    modifier onlyAllowed() {\n        require(msg.sender == owner() || splitter[msg.sender]);\n        _;\n    }\n\n    constructor() {}\n\n    function initialize(address _wbnb, address _stakingConverter, address _royalties) initializer  public {\n        __Ownable_init();\n        // wbnb = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;\n        // stakingConverter = address(0x14cBeee51410c4e3B8269B534933404AEE416A96);\n        // royalties = address(0xbe3B34b69b9d7a4A919A7b7da1ae34061e46c49D);\n        wbnb = _wbnb;\n        stakingConverter = _stakingConverter;\n        royalties = _royalties;\n    \n        converterFee = 333;\n        royaltiesFee = 667;\n\n    }\n\n    function swapWBNBToBNB() public onlyAllowed {\n        _swapWBNBToBNB();\n    }\n\n    function _swapWBNBToBNB() internal {\n        if(address(this).balance > 0){\n            IWBNB(wbnb).deposit{value: address(this).balance}();\n        }\n    }\n\n    function split() public onlyAllowed {\n        \n        // convert bnb to wbnb, easier to handle\n        _swapWBNBToBNB();\n\n        uint256 balance = balanceOf();\n        uint256 stakingAmount = 0;\n        uint256 royaltiesAmount = 0;\n        uint256 timestamp = block.timestamp / WEEK * WEEK;\n        if(balance > 1000){\n            if(stakingConverter != address(0)){\n                stakingAmount = balance * converterFee / PRECISION;\n                IERC20(wbnb).transfer(stakingConverter, stakingAmount);\n                IStakingNFTConverter(stakingConverter).claimFees();\n                IStakingNFTConverter(stakingConverter).swap();\n            }\n\n            if(royalties != address(0)){\n                royaltiesAmount = balance * royaltiesFee / PRECISION;\n                //check we have all, else send balanceOf\n                if(balanceOf() < royaltiesAmount){\n                    royaltiesAmount = balanceOf();\n                }\n                IERC20(wbnb).approve(royalties, 0);\n                IERC20(wbnb).approve(royalties, royaltiesAmount);\n                IRoyalties(royalties).deposit(royaltiesAmount);\n            }   \n            emit Split(timestamp, stakingAmount, royaltiesAmount);\n        } else {\n            emit Split(timestamp, 0, 0);\n        }    \n\n    }\n\n    function balanceOf() public view returns(uint){\n        return IERC20(wbnb).balanceOf(address(this));\n    }\n\n    function setConverter(address _converter) external onlyOwner {\n        require(_converter != address(0));\n        stakingConverter = _converter;\n    }\n\n    function setRoyalties(address _royal) external onlyOwner {\n        require(_royal != address(0));\n        royalties = _royal;\n    }\n\n    function setSplitter(address _splitter, bool _what) external onlyOwner {\n        splitter[_splitter] = _what;\n    }\n\n    \n    ///@notice in case token get stuck.\n    function withdrawERC20(address _token) external onlyOwner {\n        require(_token != address(0));\n        uint256 _balance = IERC20(_token).balanceOf(address(this));\n        IERC20(_token).transfer(msg.sender, _balance);\n    }\n\n    function setFees(uint256 _amountToStaking, uint256 _amountToRoyalties ) external onlyOwner {\n        require(converterFee + royaltiesFee <= PRECISION, 'too many');\n        converterFee = _amountToStaking;\n        royaltiesFee = _amountToRoyalties;\n    }\n\n    receive() external payable {}\n\n}"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function transfer(address recipient, uint amount) external returns (bool);\n    function decimals() external view returns (uint8);\n    function symbol() external view returns (string memory);\n    function balanceOf(address) external view returns (uint);\n    function transferFrom(address sender, address recipient, uint amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint);\n    function approve(address spender, uint value) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint value);\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 625,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220711aff576d8ee9710fa4d40912bb78af4201954ac3e0947eb1cbedea2c41451664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220711aff576d8ee9710fa4d40912bb78af4201954ac3e0947eb1cbedea2c41451664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x1AFF576D8EE9710FA4D40912BB78AF420195 0x4A 0xC3 0xE0 SWAP5 PUSH31 0xB1CBEDEA2C41451664736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "194:8087:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220711aff576d8ee9710fa4d40912bb78af4201954ac3e0947eb1cbedea2c41451664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x1AFF576D8EE9710FA4D40912BB78AF420195 0x4A 0xC3 0xE0 SWAP5 PUSH31 0xB1CBEDEA2C41451664736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "194:8087:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220711aff576d8ee9710fa4d40912bb78af4201954ac3e0947eb1cbedea2c41451664736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 625,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTSalesSplitter.sol": {
				"IRoyalties": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(uint256)": "b6b55f25"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTSalesSplitter.sol\":\"IRoyalties\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"contracts/NFTSalesSplitter.sol\":{\"keccak256\":\"0x34ca4a8b9cd3f81bcef4c2473ce7a0c9a8a14935f9c11b9088fd1e6b585a5db9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e181824b1e69fc076a112e2262a1b155c70dffa536a679e1f22b29272f1e78e5\",\"dweb:/ipfs/QmPErQAVPQWY5o9wumkEu3t9CwNmZe1Lzs1EZfqYYXCfTT\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xe76d25c9fba7f49068a1c2cc605620fabb41d4c56acd48065615d7388d451cd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5877ab326850eadeca2062dc27eb3f94404879ec2ad3a0187ac390164866763\",\"dweb:/ipfs/QmT4DVbEkvBdCZezE4Ynb6AXfnbnWpptJhcvxtxBBujqaE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IStakingNFTConverter": {
					"abi": [
						{
							"inputs": [],
							"name": "claimFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimFees()": "d294f093",
							"swap()": "8119c065"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTSalesSplitter.sol\":\"IStakingNFTConverter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"contracts/NFTSalesSplitter.sol\":{\"keccak256\":\"0x34ca4a8b9cd3f81bcef4c2473ce7a0c9a8a14935f9c11b9088fd1e6b585a5db9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e181824b1e69fc076a112e2262a1b155c70dffa536a679e1f22b29272f1e78e5\",\"dweb:/ipfs/QmPErQAVPQWY5o9wumkEu3t9CwNmZe1Lzs1EZfqYYXCfTT\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xe76d25c9fba7f49068a1c2cc605620fabb41d4c56acd48065615d7388d451cd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5877ab326850eadeca2062dc27eb3f94404879ec2ad3a0187ac390164866763\",\"dweb:/ipfs/QmT4DVbEkvBdCZezE4Ynb6AXfnbnWpptJhcvxtxBBujqaE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IWBNB": {
					"abi": [
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit()": "d0e30db0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTSalesSplitter.sol\":\"IWBNB\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"contracts/NFTSalesSplitter.sol\":{\"keccak256\":\"0x34ca4a8b9cd3f81bcef4c2473ce7a0c9a8a14935f9c11b9088fd1e6b585a5db9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e181824b1e69fc076a112e2262a1b155c70dffa536a679e1f22b29272f1e78e5\",\"dweb:/ipfs/QmPErQAVPQWY5o9wumkEu3t9CwNmZe1Lzs1EZfqYYXCfTT\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xe76d25c9fba7f49068a1c2cc605620fabb41d4c56acd48065615d7388d451cd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5877ab326850eadeca2062dc27eb3f94404879ec2ad3a0187ac390164866763\",\"dweb:/ipfs/QmT4DVbEkvBdCZezE4Ynb6AXfnbnWpptJhcvxtxBBujqaE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTSalesSplitter": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toStake",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toRoyalties",
									"type": "uint256"
								}
							],
							"name": "Split",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PRECISION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WEEK",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "converterFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wbnb",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stakingConverter",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_royalties",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royalties",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "royaltiesFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_converter",
									"type": "address"
								}
							],
							"name": "setConverter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountToStaking",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amountToRoyalties",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_royal",
									"type": "address"
								}
							],
							"name": "setRoyalties",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_splitter",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_what",
									"type": "bool"
								}
							],
							"name": "setSplitter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "split",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "splitter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingConverter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapWBNBToBNB",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wbnb",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTSalesSplitter.sol\":458:4203  contract NFTSalesSplitter is OwnableUpgradeable  {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTSalesSplitter.sol\":1023:1039  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/NFTSalesSplitter.sol\":458:4203  contract NFTSalesSplitter is OwnableUpgradeable  {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTSalesSplitter.sol\":458:4203  contract NFTSalesSplitter is OwnableUpgradeable  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc0c53b8b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xf053dc5c\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xf053dc5c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf4359ce5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf4f3b200\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf7654176\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0xc0c53b8b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xce08baa7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd3ce9ab3\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xde3b8b12\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xde74d499\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x8d72647e\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x8d72647e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x99093a33\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xaaf5eb68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb19337a4\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x0b78f9c0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2a9e63c6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x351ad5e8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x722713f7\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTSalesSplitter.sol\":3912:4165  function setFees(uint256 _amountToStaking, uint256 _amountToRoyalties ) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":3376:3507  function setRoyalties(address _royal) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":777:817  mapping(address => bool) public splitter */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":3107:3214  function balanceOf() public view returns(uint){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTSalesSplitter.sol\":678:697  address public wbnb */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTSalesSplitter.sol\":639:666  uint256 public royaltiesFee */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTSalesSplitter.sol\":514:554  uint256 constant public PRECISION = 1000 */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTSalesSplitter.sol\":3220:3370  function setConverter(address _converter) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":1045:1563  function initialize(address _wbnb, address _stakingConverter, address _royalties) initializer  public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":708:739  address public stakingConverter */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTSalesSplitter.sol\":3513:3628  function setSplitter(address _splitter, bool _what) external onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":1569:1646  function swapWBNBToBNB() public onlyAllowed {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":606:633  uint256 public converterFee */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTSalesSplitter.sol\":745:769  address public royalties */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":560:600  uint256 constant public WEEK = 86400 * 7 */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTSalesSplitter.sol\":3679:3906  function withdrawERC20(address _token) external onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":1814:3101  function split() public onlyAllowed {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      stop\n        /* \"contracts/NFTSalesSplitter.sol\":3912:4165  function setFees(uint256 _amountToStaking, uint256 _amountToRoyalties ) external onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/NFTSalesSplitter.sol\":550:554  1000 */\n      0x03e8\n        /* \"contracts/NFTSalesSplitter.sol\":4036:4048  royaltiesFee */\n      sload(0x66)\n        /* \"contracts/NFTSalesSplitter.sol\":4021:4033  converterFee */\n      sload(0x65)\n        /* \"contracts/NFTSalesSplitter.sol\":4021:4048  converterFee + royaltiesFee */\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"contracts/NFTSalesSplitter.sol\":4021:4061  converterFee + royaltiesFee <= PRECISION */\n      gt\n      iszero\n        /* \"contracts/NFTSalesSplitter.sol\":4013:4074  require(converterFee + royaltiesFee <= PRECISION, 'too many') */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/NFTSalesSplitter.sol\":4099:4115  _amountToStaking */\n      dup2\n        /* \"contracts/NFTSalesSplitter.sol\":4084:4096  converterFee */\n      0x65\n        /* \"contracts/NFTSalesSplitter.sol\":4084:4115  converterFee = _amountToStaking */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":4140:4158  _amountToRoyalties */\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":4125:4137  royaltiesFee */\n      0x66\n        /* \"contracts/NFTSalesSplitter.sol\":4125:4158  royaltiesFee = _amountToRoyalties */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":3912:4165  function setFees(uint256 _amountToStaking, uint256 _amountToRoyalties ) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":3376:3507  function setRoyalties(address _royal) external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/NFTSalesSplitter.sol\":3469:3470  0 */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3451:3471  _royal != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":3451:3457  _royal */\n      dup2\n        /* \"contracts/NFTSalesSplitter.sol\":3451:3471  _royal != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTSalesSplitter.sol\":3443:3472  require(_royal != address(0)) */\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n        /* \"contracts/NFTSalesSplitter.sol\":3494:3500  _royal */\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":3482:3491  royalties */\n      0x69\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3482:3500  royalties = _royal */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":3376:3507  function setRoyalties(address _royal) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":777:817  mapping(address => bool) public splitter */\n    tag_41:\n      mstore(0x20, 0x6a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":3107:3214  function balanceOf() public view returns(uint){... */\n    tag_49:\n        /* \"contracts/NFTSalesSplitter.sol\":3148:3152  uint */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3177:3181  wbnb */\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":3170:3192  IERC20(wbnb).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTSalesSplitter.sol\":3201:3205  this */\n      address\n        /* \"contracts/NFTSalesSplitter.sol\":3170:3207  IERC20(wbnb).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/NFTSalesSplitter.sol\":3163:3207  return IERC20(wbnb).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":3107:3214  function balanceOf() public view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":678:697  address public wbnb */\n    tag_54:\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1487:1494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1506:1519  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":639:666  uint256 public royaltiesFee */\n    tag_63:\n      sload(0x66)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":514:554  uint256 constant public PRECISION = 1000 */\n    tag_67:\n        /* \"contracts/NFTSalesSplitter.sol\":550:554  1000 */\n      0x03e8\n        /* \"contracts/NFTSalesSplitter.sol\":514:554  uint256 constant public PRECISION = 1000 */\n      dup2\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":3220:3370  function setConverter(address _converter) external onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/NFTSalesSplitter.sol\":3321:3322  0 */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3299:3323  _converter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":3299:3309  _converter */\n      dup2\n        /* \"contracts/NFTSalesSplitter.sol\":3299:3323  _converter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTSalesSplitter.sol\":3291:3324  require(_converter != address(0)) */\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n        /* \"contracts/NFTSalesSplitter.sol\":3353:3363  _converter */\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":3334:3350  stakingConverter */\n      0x68\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3334:3363  stakingConverter = _converter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":3220:3370  function setConverter(address _converter) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":1045:1563  function initialize(address _wbnb, address _stakingConverter, address _royalties) initializer  public {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3287  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3291:3304  _initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3290:3304  !_initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3304  bool isTopLevelCall = !_initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3350  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_143\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3369:3370  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3370  _initialized < 1 */\n      0xff\n      and\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3335:3443  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_144\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3421  AddressUpgradeable.isContract(address(this)) */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3415:3419  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3406  AddressUpgradeable.isContract */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3421  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3421  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_147\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3441:3442  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3425:3437  _initialized */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3425:3442  _initialized == 1 */\n      0xff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3335:3443  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3540:3541  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3537  _initialized */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3541  _initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3555:3569  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3616  if (isTopLevelCall) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3601:3605  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3585:3598  _initializing */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3585:3605  _initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3616  if (isTopLevelCall) {... */\n    tag_151:\n        /* \"contracts/NFTSalesSplitter.sol\":1157:1173  __Ownable_init() */\n      tag_153\n        /* \"contracts/NFTSalesSplitter.sol\":1157:1171  __Ownable_init */\n      tag_154\n        /* \"contracts/NFTSalesSplitter.sol\":1157:1173  __Ownable_init() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/NFTSalesSplitter.sol\":1411:1416  _wbnb */\n      dup4\n        /* \"contracts/NFTSalesSplitter.sol\":1404:1408  wbnb */\n      0x67\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":1404:1416  wbnb = _wbnb */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":1445:1462  _stakingConverter */\n      dup3\n        /* \"contracts/NFTSalesSplitter.sol\":1426:1442  stakingConverter */\n      0x68\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":1426:1462  stakingConverter = _stakingConverter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":1484:1494  _royalties */\n      dup2\n        /* \"contracts/NFTSalesSplitter.sol\":1472:1481  royalties */\n      0x69\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":1472:1494  royalties = _royalties */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":1524:1527  333 */\n      0x014d\n        /* \"contracts/NFTSalesSplitter.sol\":1509:1521  converterFee */\n      0x65\n        /* \"contracts/NFTSalesSplitter.sol\":1509:1527  converterFee = 333 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":1552:1555  667 */\n      0x029b\n        /* \"contracts/NFTSalesSplitter.sol\":1537:1549  royaltiesFee */\n      0x66\n        /* \"contracts/NFTSalesSplitter.sol\":1537:1555  royaltiesFee = 667 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3640:3654  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3636:3735  if (isTopLevelCall) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3686:3691  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3670:3683  _initializing */\n      dup1\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3670:3691  _initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3722:3723  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3636:3735  if (isTopLevelCall) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3741  {... */\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":1045:1563  function initialize(address _wbnb, address _stakingConverter, address _royalties) initializer  public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":708:739  address public stakingConverter */\n    tag_80:\n      0x68\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":3513:3628  function setSplitter(address _splitter, bool _what) external onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/NFTSalesSplitter.sol\":3616:3621  _what */\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":3594:3602  splitter */\n      0x6a\n        /* \"contracts/NFTSalesSplitter.sol\":3594:3613  splitter[_splitter] */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3603:3612  _splitter */\n      dup5\n        /* \"contracts/NFTSalesSplitter.sol\":3594:3613  splitter[_splitter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3594:3621  splitter[_splitter] = _what */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":3513:3628  function setSplitter(address _splitter, bool _what) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":1569:1646  function swapWBNBToBNB() public onlyAllowed {... */\n    tag_89:\n        /* \"contracts/NFTSalesSplitter.sol\":967:974  owner() */\n      tag_162\n        /* \"contracts/NFTSalesSplitter.sol\":967:972  owner */\n      tag_59\n        /* \"contracts/NFTSalesSplitter.sol\":967:974  owner() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/NFTSalesSplitter.sol\":953:974  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/NFTSalesSplitter.sol\":953:974  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTSalesSplitter.sol\":953:998  msg.sender == owner() || splitter[msg.sender] */\n      dup1\n      tag_163\n      jumpi\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":978:986  splitter */\n      0x6a\n        /* \"contracts/NFTSalesSplitter.sol\":978:998  splitter[msg.sender] */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":987:997  msg.sender */\n      caller\n        /* \"contracts/NFTSalesSplitter.sol\":978:998  splitter[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":953:998  msg.sender == owner() || splitter[msg.sender] */\n    tag_163:\n        /* \"contracts/NFTSalesSplitter.sol\":945:999  require(msg.sender == owner() || splitter[msg.sender]) */\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n        /* \"contracts/NFTSalesSplitter.sol\":1623:1639  _swapWBNBToBNB() */\n      tag_166\n        /* \"contracts/NFTSalesSplitter.sol\":1623:1637  _swapWBNBToBNB */\n      tag_167\n        /* \"contracts/NFTSalesSplitter.sol\":1623:1639  _swapWBNBToBNB() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/NFTSalesSplitter.sol\":1569:1646  function swapWBNBToBNB() public onlyAllowed {... */\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":606:633  uint256 public converterFee */\n    tag_92:\n      sload(0x65)\n      dup2\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":745:769  address public royalties */\n    tag_96:\n      0x69\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2429:2430  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2417  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":560:600  uint256 constant public WEEK = 86400 * 7 */\n    tag_104:\n        /* \"contracts/NFTSalesSplitter.sol\":591:600  86400 * 7 */\n      0x093a80\n        /* \"contracts/NFTSalesSplitter.sol\":560:600  uint256 constant public WEEK = 86400 * 7 */\n      dup2\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":3679:3906  function withdrawERC20(address _token) external onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/NFTSalesSplitter.sol\":3773:3774  0 */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3755:3775  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":3755:3761  _token */\n      dup2\n        /* \"contracts/NFTSalesSplitter.sol\":3755:3775  _token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTSalesSplitter.sol\":3747:3776  require(_token != address(0)) */\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n        /* \"contracts/NFTSalesSplitter.sol\":3786:3802  uint256 _balance */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3812:3818  _token */\n      dup2\n        /* \"contracts/NFTSalesSplitter.sol\":3805:3829  IERC20(_token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/NFTSalesSplitter.sol\":3838:3842  this */\n      address\n        /* \"contracts/NFTSalesSplitter.sol\":3805:3844  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_182:\n        /* \"contracts/NFTSalesSplitter.sol\":3786:3844  uint256 _balance = IERC20(_token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":3861:3867  _token */\n      dup2\n        /* \"contracts/NFTSalesSplitter.sol\":3854:3877  IERC20(_token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTSalesSplitter.sol\":3878:3888  msg.sender */\n      caller\n        /* \"contracts/NFTSalesSplitter.sol\":3890:3898  _balance */\n      dup4\n        /* \"contracts/NFTSalesSplitter.sol\":3854:3899  IERC20(_token).transfer(msg.sender, _balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":3737:3906  {... */\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":3679:3906  function withdrawERC20(address _token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":1814:3101  function split() public onlyAllowed {... */\n    tag_112:\n        /* \"contracts/NFTSalesSplitter.sol\":967:974  owner() */\n      tag_190\n        /* \"contracts/NFTSalesSplitter.sol\":967:972  owner */\n      tag_59\n        /* \"contracts/NFTSalesSplitter.sol\":967:974  owner() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/NFTSalesSplitter.sol\":953:974  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":953:963  msg.sender */\n      caller\n        /* \"contracts/NFTSalesSplitter.sol\":953:974  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTSalesSplitter.sol\":953:998  msg.sender == owner() || splitter[msg.sender] */\n      dup1\n      tag_191\n      jumpi\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":978:986  splitter */\n      0x6a\n        /* \"contracts/NFTSalesSplitter.sol\":978:998  splitter[msg.sender] */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":987:997  msg.sender */\n      caller\n        /* \"contracts/NFTSalesSplitter.sol\":978:998  splitter[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":953:998  msg.sender == owner() || splitter[msg.sender] */\n    tag_191:\n        /* \"contracts/NFTSalesSplitter.sol\":945:999  require(msg.sender == owner() || splitter[msg.sender]) */\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n        /* \"contracts/NFTSalesSplitter.sol\":1918:1934  _swapWBNBToBNB() */\n      tag_194\n        /* \"contracts/NFTSalesSplitter.sol\":1918:1932  _swapWBNBToBNB */\n      tag_167\n        /* \"contracts/NFTSalesSplitter.sol\":1918:1934  _swapWBNBToBNB() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/NFTSalesSplitter.sol\":1945:1960  uint256 balance */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":1963:1974  balanceOf() */\n      tag_195\n        /* \"contracts/NFTSalesSplitter.sol\":1963:1972  balanceOf */\n      tag_49\n        /* \"contracts/NFTSalesSplitter.sol\":1963:1974  balanceOf() */\n      jump\t// in\n    tag_195:\n        /* \"contracts/NFTSalesSplitter.sol\":1945:1974  uint256 balance = balanceOf() */\n      swap1\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":1984:2005  uint256 stakingAmount */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":2019:2042  uint256 royaltiesAmount */\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":2056:2073  uint256 timestamp */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":591:600  86400 * 7 */\n      0x093a80\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":2076:2091  block.timestamp */\n      timestamp\n        /* \"contracts/NFTSalesSplitter.sol\":2076:2098  block.timestamp / WEEK */\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/NFTSalesSplitter.sol\":2076:2105  block.timestamp / WEEK * WEEK */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/NFTSalesSplitter.sol\":2056:2105  uint256 timestamp = block.timestamp / WEEK * WEEK */\n      swap1\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2128:2132  1000 */\n      0x03e8\n        /* \"contracts/NFTSalesSplitter.sol\":2118:2125  balance */\n      dup5\n        /* \"contracts/NFTSalesSplitter.sol\":2118:2132  balance > 1000 */\n      gt\n        /* \"contracts/NFTSalesSplitter.sol\":2115:3090  if(balance > 1000){... */\n      iszero\n      tag_200\n      jumpi\n        /* \"contracts/NFTSalesSplitter.sol\":2178:2179  0 */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":2150:2180  stakingConverter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2150:2166  stakingConverter */\n      0x68\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2150:2180  stakingConverter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTSalesSplitter.sol\":2147:2467  if(stakingConverter != address(0)){... */\n      tag_201\n      jumpi\n        /* \"contracts/NFTSalesSplitter.sol\":550:554  1000 */\n      0x03e8\n        /* \"contracts/NFTSalesSplitter.sol\":2225:2237  converterFee */\n      sload(0x65)\n        /* \"contracts/NFTSalesSplitter.sol\":2215:2222  balance */\n      dup6\n        /* \"contracts/NFTSalesSplitter.sol\":2215:2237  balance * converterFee */\n      tag_202\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_202:\n        /* \"contracts/NFTSalesSplitter.sol\":2215:2249  balance * converterFee / PRECISION */\n      tag_203\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_203:\n        /* \"contracts/NFTSalesSplitter.sol\":2199:2249  stakingAmount = balance * converterFee / PRECISION */\n      swap3\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2274:2278  wbnb */\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2267:2288  IERC20(wbnb).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/NFTSalesSplitter.sol\":2289:2305  stakingConverter */\n      0x68\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2307:2320  stakingAmount */\n      dup6\n        /* \"contracts/NFTSalesSplitter.sol\":2267:2321  IERC20(wbnb).transfer(stakingConverter, stakingAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_207:\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2360:2376  stakingConverter */\n      0x68\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2339:2387  IStakingNFTConverter(stakingConverter).claimFees */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd294f093\n        /* \"contracts/NFTSalesSplitter.sol\":2339:2389  IStakingNFTConverter(stakingConverter).claimFees() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2428:2444  stakingConverter */\n      0x68\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2407:2450  IStakingNFTConverter(stakingConverter).swap */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8119c065\n        /* \"contracts/NFTSalesSplitter.sol\":2407:2452  IStakingNFTConverter(stakingConverter).swap() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2147:2467  if(stakingConverter != address(0)){... */\n    tag_201:\n        /* \"contracts/NFTSalesSplitter.sol\":2505:2506  0 */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":2484:2507  royalties != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2484:2493  royalties */\n      0x69\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2484:2507  royalties != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTSalesSplitter.sol\":2481:2952  if(royalties != address(0)){... */\n      tag_214\n      jumpi\n        /* \"contracts/NFTSalesSplitter.sol\":550:554  1000 */\n      0x03e8\n        /* \"contracts/NFTSalesSplitter.sol\":2554:2566  royaltiesFee */\n      sload(0x66)\n        /* \"contracts/NFTSalesSplitter.sol\":2544:2551  balance */\n      dup6\n        /* \"contracts/NFTSalesSplitter.sol\":2544:2566  balance * royaltiesFee */\n      tag_215\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_215:\n        /* \"contracts/NFTSalesSplitter.sol\":2544:2578  balance * royaltiesFee / PRECISION */\n      tag_216\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_216:\n        /* \"contracts/NFTSalesSplitter.sol\":2526:2578  royaltiesAmount = balance * royaltiesFee / PRECISION */\n      swap2\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2670:2685  royaltiesAmount */\n      dup2\n        /* \"contracts/NFTSalesSplitter.sol\":2656:2667  balanceOf() */\n      tag_217\n        /* \"contracts/NFTSalesSplitter.sol\":2656:2665  balanceOf */\n      tag_49\n        /* \"contracts/NFTSalesSplitter.sol\":2656:2667  balanceOf() */\n      jump\t// in\n    tag_217:\n        /* \"contracts/NFTSalesSplitter.sol\":2656:2685  balanceOf() < royaltiesAmount */\n      lt\n        /* \"contracts/NFTSalesSplitter.sol\":2653:2756  if(balanceOf() < royaltiesAmount){... */\n      iszero\n      tag_218\n      jumpi\n        /* \"contracts/NFTSalesSplitter.sol\":2726:2737  balanceOf() */\n      tag_219\n        /* \"contracts/NFTSalesSplitter.sol\":2726:2735  balanceOf */\n      tag_49\n        /* \"contracts/NFTSalesSplitter.sol\":2726:2737  balanceOf() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/NFTSalesSplitter.sol\":2708:2737  royaltiesAmount = balanceOf() */\n      swap2\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2653:2756  if(balanceOf() < royaltiesAmount){... */\n    tag_218:\n        /* \"contracts/NFTSalesSplitter.sol\":2780:2784  wbnb */\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2773:2793  IERC20(wbnb).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/NFTSalesSplitter.sol\":2794:2803  royalties */\n      0x69\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2805:2806  0 */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":2773:2807  IERC20(wbnb).approve(royalties, 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_224:\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2832:2836  wbnb */\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2825:2845  IERC20(wbnb).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/NFTSalesSplitter.sol\":2846:2855  royalties */\n      0x69\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2857:2872  royaltiesAmount */\n      dup5\n        /* \"contracts/NFTSalesSplitter.sol\":2825:2873  IERC20(wbnb).approve(royalties, royaltiesAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_225:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_228:\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2902:2911  royalties */\n      0x69\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":2891:2920  IRoyalties(royalties).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb6b55f25\n        /* \"contracts/NFTSalesSplitter.sol\":2921:2936  royaltiesAmount */\n      dup4\n        /* \"contracts/NFTSalesSplitter.sol\":2891:2937  IRoyalties(royalties).deposit(royaltiesAmount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_229:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":2481:2952  if(royalties != address(0)){... */\n    tag_214:\n        /* \"contracts/NFTSalesSplitter.sol\":2979:2988  timestamp */\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":2973:3021  Split(timestamp, stakingAmount, royaltiesAmount) */\n      0xcf0974dfd867840133a0d4b02f1672f24017796fb8892d1e0d587692e4da90ab\n        /* \"contracts/NFTSalesSplitter.sol\":2990:3003  stakingAmount */\n      dup5\n        /* \"contracts/NFTSalesSplitter.sol\":3005:3020  royaltiesAmount */\n      dup5\n        /* \"contracts/NFTSalesSplitter.sol\":2973:3021  Split(timestamp, stakingAmount, royaltiesAmount) */\n      mload(0x40)\n      tag_233\n      swap3\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NFTSalesSplitter.sol\":2115:3090  if(balance > 1000){... */\n      jump(tag_235)\n    tag_200:\n        /* \"contracts/NFTSalesSplitter.sol\":3063:3072  timestamp */\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":3057:3079  Split(timestamp, 0, 0) */\n      0xcf0974dfd867840133a0d4b02f1672f24017796fb8892d1e0d587692e4da90ab\n        /* \"contracts/NFTSalesSplitter.sol\":3074:3075  0 */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":3077:3078  0 */\n      dup1\n        /* \"contracts/NFTSalesSplitter.sol\":3057:3079  Split(timestamp, 0, 0) */\n      mload(0x40)\n      tag_236\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NFTSalesSplitter.sol\":2115:3090  if(balance > 1000){... */\n    tag_235:\n        /* \"contracts/NFTSalesSplitter.sol\":1850:3101  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":1814:3101  function split() public onlyAllowed {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1683  _msgSender */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1673:1685  _msgSender() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      tag_241\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1667  owner */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2771  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2798  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2787  _owner */\n      0x33\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2844:2852  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2834:2842  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1246:1250  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1498:1499  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1483  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1469:1499  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"contracts/NFTSalesSplitter.sol\":1652:1808  function _swapWBNBToBNB() internal {... */\n    tag_167:\n        /* \"contracts/NFTSalesSplitter.sol\":1724:1725  0 */\n      0x00\n        /* \"contracts/NFTSalesSplitter.sol\":1700:1721  address(this).balance */\n      selfbalance\n        /* \"contracts/NFTSalesSplitter.sol\":1700:1725  address(this).balance > 0 */\n      gt\n        /* \"contracts/NFTSalesSplitter.sol\":1697:1802  if(address(this).balance > 0){... */\n      iszero\n      tag_255\n      jumpi\n        /* \"contracts/NFTSalesSplitter.sol\":1746:1750  wbnb */\n      0x67\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTSalesSplitter.sol\":1740:1759  IWBNB(wbnb).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd0e30db0\n        /* \"contracts/NFTSalesSplitter.sol\":1767:1788  address(this).balance */\n      selfbalance\n        /* \"contracts/NFTSalesSplitter.sol\":1740:1791  IWBNB(wbnb).deposit{value: address(this).balance}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTSalesSplitter.sol\":1697:1802  if(address(this).balance > 0){... */\n    tag_255:\n        /* \"contracts/NFTSalesSplitter.sol\":1652:1808  function _swapWBNBToBNB() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":903:910  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":922:939  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":850:946  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_250\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1205  _msgSender */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1195:1207  _msgSender() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_267:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_269:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_270:\n        /* \"#utility.yul\":490:514   */\n      tag_311\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_269\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_312:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_271:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_314\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_270\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1164   */\n    tag_31:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":815:817   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      dup4\n        /* \"#utility.yul\":794:801   */\n      dup6\n        /* \"#utility.yul\":790:813   */\n      sub\n        /* \"#utility.yul\":786:818   */\n      slt\n        /* \"#utility.yul\":783:902   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":821:900   */\n      tag_317\n      tag_267\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":783:902   */\n    tag_316:\n        /* \"#utility.yul\":941:942   */\n      0x00\n        /* \"#utility.yul\":966:1019   */\n      tag_318\n        /* \"#utility.yul\":1011:1018   */\n      dup6\n        /* \"#utility.yul\":1002:1008   */\n      dup3\n        /* \"#utility.yul\":991:1000   */\n      dup7\n        /* \"#utility.yul\":987:1009   */\n      add\n        /* \"#utility.yul\":966:1019   */\n      tag_271\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":956:1019   */\n      swap3\n      pop\n        /* \"#utility.yul\":912:1029   */\n      pop\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1094:1147   */\n      tag_319\n        /* \"#utility.yul\":1139:1146   */\n      dup6\n        /* \"#utility.yul\":1130:1136   */\n      dup3\n        /* \"#utility.yul\":1119:1128   */\n      dup7\n        /* \"#utility.yul\":1115:1137   */\n      add\n        /* \"#utility.yul\":1094:1147   */\n      tag_271\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":1084:1147   */\n      swap2\n      pop\n        /* \"#utility.yul\":1039:1157   */\n      pop\n        /* \"#utility.yul\":690:1164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1170:1296   */\n    tag_272:\n        /* \"#utility.yul\":1207:1214   */\n      0x00\n        /* \"#utility.yul\":1247:1289   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1240:1245   */\n      dup3\n        /* \"#utility.yul\":1236:1290   */\n      and\n        /* \"#utility.yul\":1225:1290   */\n      swap1\n      pop\n        /* \"#utility.yul\":1170:1296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1398   */\n    tag_273:\n        /* \"#utility.yul\":1339:1346   */\n      0x00\n        /* \"#utility.yul\":1368:1392   */\n      tag_322\n        /* \"#utility.yul\":1386:1391   */\n      dup3\n        /* \"#utility.yul\":1368:1392   */\n      tag_272\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":1357:1392   */\n      swap1\n      pop\n        /* \"#utility.yul\":1302:1398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1526   */\n    tag_274:\n        /* \"#utility.yul\":1477:1501   */\n      tag_324\n        /* \"#utility.yul\":1495:1500   */\n      dup2\n        /* \"#utility.yul\":1477:1501   */\n      tag_273\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1470:1475   */\n      dup2\n        /* \"#utility.yul\":1467:1502   */\n      eq\n        /* \"#utility.yul\":1457:1520   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1516:1517   */\n      0x00\n        /* \"#utility.yul\":1513:1514   */\n      dup1\n        /* \"#utility.yul\":1506:1518   */\n      revert\n        /* \"#utility.yul\":1457:1520   */\n    tag_325:\n        /* \"#utility.yul\":1404:1526   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1671   */\n    tag_275:\n        /* \"#utility.yul\":1578:1583   */\n      0x00\n        /* \"#utility.yul\":1616:1622   */\n      dup2\n        /* \"#utility.yul\":1603:1623   */\n      calldataload\n        /* \"#utility.yul\":1594:1623   */\n      swap1\n      pop\n        /* \"#utility.yul\":1632:1665   */\n      tag_327\n        /* \"#utility.yul\":1659:1664   */\n      dup2\n        /* \"#utility.yul\":1632:1665   */\n      tag_274\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1532:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2006   */\n    tag_36:\n        /* \"#utility.yul\":1736:1742   */\n      0x00\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1773:1782   */\n      dup3\n        /* \"#utility.yul\":1764:1771   */\n      dup5\n        /* \"#utility.yul\":1760:1783   */\n      sub\n        /* \"#utility.yul\":1756:1788   */\n      slt\n        /* \"#utility.yul\":1753:1872   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":1791:1870   */\n      tag_330\n      tag_267\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1753:1872   */\n    tag_329:\n        /* \"#utility.yul\":1911:1912   */\n      0x00\n        /* \"#utility.yul\":1936:1989   */\n      tag_331\n        /* \"#utility.yul\":1981:1988   */\n      dup5\n        /* \"#utility.yul\":1972:1978   */\n      dup3\n        /* \"#utility.yul\":1961:1970   */\n      dup6\n        /* \"#utility.yul\":1957:1979   */\n      add\n        /* \"#utility.yul\":1936:1989   */\n      tag_275\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1926:1989   */\n      swap2\n      pop\n        /* \"#utility.yul\":1882:1999   */\n      pop\n        /* \"#utility.yul\":1677:2006   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2012:2102   */\n    tag_276:\n        /* \"#utility.yul\":2046:2053   */\n      0x00\n        /* \"#utility.yul\":2089:2094   */\n      dup2\n        /* \"#utility.yul\":2082:2095   */\n      iszero\n        /* \"#utility.yul\":2075:2096   */\n      iszero\n        /* \"#utility.yul\":2064:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2012:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2217   */\n    tag_277:\n        /* \"#utility.yul\":2189:2210   */\n      tag_334\n        /* \"#utility.yul\":2204:2209   */\n      dup2\n        /* \"#utility.yul\":2189:2210   */\n      tag_276\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2184:2187   */\n      dup3\n        /* \"#utility.yul\":2177:2211   */\n      mstore\n        /* \"#utility.yul\":2108:2217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2223:2433   */\n    tag_43:\n        /* \"#utility.yul\":2310:2314   */\n      0x00\n        /* \"#utility.yul\":2348:2350   */\n      0x20\n        /* \"#utility.yul\":2337:2346   */\n      dup3\n        /* \"#utility.yul\":2333:2351   */\n      add\n        /* \"#utility.yul\":2325:2351   */\n      swap1\n      pop\n        /* \"#utility.yul\":2361:2426   */\n      tag_336\n        /* \"#utility.yul\":2423:2424   */\n      0x00\n        /* \"#utility.yul\":2412:2421   */\n      dup4\n        /* \"#utility.yul\":2408:2425   */\n      add\n        /* \"#utility.yul\":2399:2405   */\n      dup5\n        /* \"#utility.yul\":2361:2426   */\n      tag_277\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2223:2433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2439:2557   */\n    tag_278:\n        /* \"#utility.yul\":2526:2550   */\n      tag_338\n        /* \"#utility.yul\":2544:2549   */\n      dup2\n        /* \"#utility.yul\":2526:2550   */\n      tag_269\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2521:2524   */\n      dup3\n        /* \"#utility.yul\":2514:2551   */\n      mstore\n        /* \"#utility.yul\":2439:2557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2563:2785   */\n    tag_51:\n        /* \"#utility.yul\":2656:2660   */\n      0x00\n        /* \"#utility.yul\":2694:2696   */\n      0x20\n        /* \"#utility.yul\":2683:2692   */\n      dup3\n        /* \"#utility.yul\":2679:2697   */\n      add\n        /* \"#utility.yul\":2671:2697   */\n      swap1\n      pop\n        /* \"#utility.yul\":2707:2778   */\n      tag_340\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2751:2757   */\n      dup5\n        /* \"#utility.yul\":2707:2778   */\n      tag_278\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2563:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2909   */\n    tag_279:\n        /* \"#utility.yul\":2878:2902   */\n      tag_342\n        /* \"#utility.yul\":2896:2901   */\n      dup2\n        /* \"#utility.yul\":2878:2902   */\n      tag_273\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2873:2876   */\n      dup3\n        /* \"#utility.yul\":2866:2903   */\n      mstore\n        /* \"#utility.yul\":2791:2909   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3137   */\n    tag_56:\n        /* \"#utility.yul\":3008:3012   */\n      0x00\n        /* \"#utility.yul\":3046:3048   */\n      0x20\n        /* \"#utility.yul\":3035:3044   */\n      dup3\n        /* \"#utility.yul\":3031:3049   */\n      add\n        /* \"#utility.yul\":3023:3049   */\n      swap1\n      pop\n        /* \"#utility.yul\":3059:3130   */\n      tag_344\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3116:3125   */\n      dup4\n        /* \"#utility.yul\":3112:3129   */\n      add\n        /* \"#utility.yul\":3103:3109   */\n      dup5\n        /* \"#utility.yul\":3059:3130   */\n      tag_279\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2915:3137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3762   */\n    tag_76:\n        /* \"#utility.yul\":3220:3226   */\n      0x00\n        /* \"#utility.yul\":3228:3234   */\n      dup1\n        /* \"#utility.yul\":3236:3242   */\n      0x00\n        /* \"#utility.yul\":3285:3287   */\n      0x60\n        /* \"#utility.yul\":3273:3282   */\n      dup5\n        /* \"#utility.yul\":3264:3271   */\n      dup7\n        /* \"#utility.yul\":3260:3283   */\n      sub\n        /* \"#utility.yul\":3256:3288   */\n      slt\n        /* \"#utility.yul\":3253:3372   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":3291:3370   */\n      tag_347\n      tag_267\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3253:3372   */\n    tag_346:\n        /* \"#utility.yul\":3411:3412   */\n      0x00\n        /* \"#utility.yul\":3436:3489   */\n      tag_348\n        /* \"#utility.yul\":3481:3488   */\n      dup7\n        /* \"#utility.yul\":3472:3478   */\n      dup3\n        /* \"#utility.yul\":3461:3470   */\n      dup8\n        /* \"#utility.yul\":3457:3479   */\n      add\n        /* \"#utility.yul\":3436:3489   */\n      tag_275\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3426:3489   */\n      swap4\n      pop\n        /* \"#utility.yul\":3382:3499   */\n      pop\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"#utility.yul\":3564:3617   */\n      tag_349\n        /* \"#utility.yul\":3609:3616   */\n      dup7\n        /* \"#utility.yul\":3600:3606   */\n      dup3\n        /* \"#utility.yul\":3589:3598   */\n      dup8\n        /* \"#utility.yul\":3585:3607   */\n      add\n        /* \"#utility.yul\":3564:3617   */\n      tag_275\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3554:3617   */\n      swap3\n      pop\n        /* \"#utility.yul\":3509:3627   */\n      pop\n        /* \"#utility.yul\":3666:3668   */\n      0x40\n        /* \"#utility.yul\":3692:3745   */\n      tag_350\n        /* \"#utility.yul\":3737:3744   */\n      dup7\n        /* \"#utility.yul\":3728:3734   */\n      dup3\n        /* \"#utility.yul\":3717:3726   */\n      dup8\n        /* \"#utility.yul\":3713:3735   */\n      add\n        /* \"#utility.yul\":3692:3745   */\n      tag_275\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3682:3745   */\n      swap2\n      pop\n        /* \"#utility.yul\":3637:3755   */\n      pop\n        /* \"#utility.yul\":3143:3762   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3768:3884   */\n    tag_280:\n        /* \"#utility.yul\":3838:3859   */\n      tag_352\n        /* \"#utility.yul\":3853:3858   */\n      dup2\n        /* \"#utility.yul\":3838:3859   */\n      tag_276\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3831:3836   */\n      dup2\n        /* \"#utility.yul\":3828:3860   */\n      eq\n        /* \"#utility.yul\":3818:3878   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":3874:3875   */\n      0x00\n        /* \"#utility.yul\":3871:3872   */\n      dup1\n        /* \"#utility.yul\":3864:3876   */\n      revert\n        /* \"#utility.yul\":3818:3878   */\n    tag_353:\n        /* \"#utility.yul\":3768:3884   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3890:4023   */\n    tag_281:\n        /* \"#utility.yul\":3933:3938   */\n      0x00\n        /* \"#utility.yul\":3971:3977   */\n      dup2\n        /* \"#utility.yul\":3958:3978   */\n      calldataload\n        /* \"#utility.yul\":3949:3978   */\n      swap1\n      pop\n        /* \"#utility.yul\":3987:4017   */\n      tag_355\n        /* \"#utility.yul\":4011:4016   */\n      dup2\n        /* \"#utility.yul\":3987:4017   */\n      tag_280\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3890:4023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4029:4497   */\n    tag_85:\n        /* \"#utility.yul\":4094:4100   */\n      0x00\n        /* \"#utility.yul\":4102:4108   */\n      dup1\n        /* \"#utility.yul\":4151:4153   */\n      0x40\n        /* \"#utility.yul\":4139:4148   */\n      dup4\n        /* \"#utility.yul\":4130:4137   */\n      dup6\n        /* \"#utility.yul\":4126:4149   */\n      sub\n        /* \"#utility.yul\":4122:4154   */\n      slt\n        /* \"#utility.yul\":4119:4238   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":4157:4236   */\n      tag_358\n      tag_267\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4119:4238   */\n    tag_357:\n        /* \"#utility.yul\":4277:4278   */\n      0x00\n        /* \"#utility.yul\":4302:4355   */\n      tag_359\n        /* \"#utility.yul\":4347:4354   */\n      dup6\n        /* \"#utility.yul\":4338:4344   */\n      dup3\n        /* \"#utility.yul\":4327:4336   */\n      dup7\n        /* \"#utility.yul\":4323:4345   */\n      add\n        /* \"#utility.yul\":4302:4355   */\n      tag_275\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4292:4355   */\n      swap3\n      pop\n        /* \"#utility.yul\":4248:4365   */\n      pop\n        /* \"#utility.yul\":4404:4406   */\n      0x20\n        /* \"#utility.yul\":4430:4480   */\n      tag_360\n        /* \"#utility.yul\":4472:4479   */\n      dup6\n        /* \"#utility.yul\":4463:4469   */\n      dup3\n        /* \"#utility.yul\":4452:4461   */\n      dup7\n        /* \"#utility.yul\":4448:4470   */\n      add\n        /* \"#utility.yul\":4430:4480   */\n      tag_281\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4420:4480   */\n      swap2\n      pop\n        /* \"#utility.yul\":4375:4490   */\n      pop\n        /* \"#utility.yul\":4029:4497   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4503:4683   */\n    tag_282:\n        /* \"#utility.yul\":4551:4628   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4548:4549   */\n      0x00\n        /* \"#utility.yul\":4541:4629   */\n      mstore\n        /* \"#utility.yul\":4648:4652   */\n      0x11\n        /* \"#utility.yul\":4645:4646   */\n      0x04\n        /* \"#utility.yul\":4638:4653   */\n      mstore\n        /* \"#utility.yul\":4672:4676   */\n      0x24\n        /* \"#utility.yul\":4669:4670   */\n      0x00\n        /* \"#utility.yul\":4662:4677   */\n      revert\n        /* \"#utility.yul\":4689:4994   */\n    tag_118:\n        /* \"#utility.yul\":4729:4732   */\n      0x00\n        /* \"#utility.yul\":4748:4768   */\n      tag_363\n        /* \"#utility.yul\":4766:4767   */\n      dup3\n        /* \"#utility.yul\":4748:4768   */\n      tag_269\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4743:4768   */\n      swap2\n      pop\n        /* \"#utility.yul\":4782:4802   */\n      tag_364\n        /* \"#utility.yul\":4800:4801   */\n      dup4\n        /* \"#utility.yul\":4782:4802   */\n      tag_269\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4777:4802   */\n      swap3\n      pop\n        /* \"#utility.yul\":4936:4937   */\n      dup3\n        /* \"#utility.yul\":4868:4934   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4864:4938   */\n      sub\n        /* \"#utility.yul\":4861:4862   */\n      dup3\n        /* \"#utility.yul\":4858:4939   */\n      gt\n        /* \"#utility.yul\":4855:4962   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":4942:4960   */\n      tag_366\n      tag_282\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4855:4962   */\n    tag_365:\n        /* \"#utility.yul\":4986:4987   */\n      dup3\n        /* \"#utility.yul\":4983:4984   */\n      dup3\n        /* \"#utility.yul\":4979:4988   */\n      add\n        /* \"#utility.yul\":4972:4988   */\n      swap1\n      pop\n        /* \"#utility.yul\":4689:4994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5000:5169   */\n    tag_283:\n        /* \"#utility.yul\":5084:5095   */\n      0x00\n        /* \"#utility.yul\":5118:5124   */\n      dup3\n        /* \"#utility.yul\":5113:5116   */\n      dup3\n        /* \"#utility.yul\":5106:5125   */\n      mstore\n        /* \"#utility.yul\":5158:5162   */\n      0x20\n        /* \"#utility.yul\":5153:5156   */\n      dup3\n        /* \"#utility.yul\":5149:5163   */\n      add\n        /* \"#utility.yul\":5134:5163   */\n      swap1\n      pop\n        /* \"#utility.yul\":5000:5169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5175:5333   */\n    tag_284:\n        /* \"#utility.yul\":5315:5325   */\n      0x746f6f206d616e79000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5311:5312   */\n      0x00\n        /* \"#utility.yul\":5303:5309   */\n      dup3\n        /* \"#utility.yul\":5299:5313   */\n      add\n        /* \"#utility.yul\":5292:5326   */\n      mstore\n        /* \"#utility.yul\":5175:5333   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5339:5704   */\n    tag_285:\n        /* \"#utility.yul\":5481:5484   */\n      0x00\n        /* \"#utility.yul\":5502:5568   */\n      tag_370\n        /* \"#utility.yul\":5566:5567   */\n      0x08\n        /* \"#utility.yul\":5561:5564   */\n      dup4\n        /* \"#utility.yul\":5502:5568   */\n      tag_283\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5495:5568   */\n      swap2\n      pop\n        /* \"#utility.yul\":5577:5670   */\n      tag_371\n        /* \"#utility.yul\":5666:5669   */\n      dup3\n        /* \"#utility.yul\":5577:5670   */\n      tag_284\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5695:5697   */\n      0x20\n        /* \"#utility.yul\":5690:5693   */\n      dup3\n        /* \"#utility.yul\":5686:5698   */\n      add\n        /* \"#utility.yul\":5679:5698   */\n      swap1\n      pop\n        /* \"#utility.yul\":5339:5704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5710:6129   */\n    tag_121:\n        /* \"#utility.yul\":5876:5880   */\n      0x00\n        /* \"#utility.yul\":5914:5916   */\n      0x20\n        /* \"#utility.yul\":5903:5912   */\n      dup3\n        /* \"#utility.yul\":5899:5917   */\n      add\n        /* \"#utility.yul\":5891:5917   */\n      swap1\n      pop\n        /* \"#utility.yul\":5963:5972   */\n      dup2\n        /* \"#utility.yul\":5957:5961   */\n      dup2\n        /* \"#utility.yul\":5953:5973   */\n      sub\n        /* \"#utility.yul\":5949:5950   */\n      0x00\n        /* \"#utility.yul\":5938:5947   */\n      dup4\n        /* \"#utility.yul\":5934:5951   */\n      add\n        /* \"#utility.yul\":5927:5974   */\n      mstore\n        /* \"#utility.yul\":5991:6122   */\n      tag_373\n        /* \"#utility.yul\":6117:6121   */\n      dup2\n        /* \"#utility.yul\":5991:6122   */\n      tag_285\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5983:6122   */\n      swap1\n      pop\n        /* \"#utility.yul\":5710:6129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6135:6278   */\n    tag_286:\n        /* \"#utility.yul\":6192:6197   */\n      0x00\n        /* \"#utility.yul\":6223:6229   */\n      dup2\n        /* \"#utility.yul\":6217:6230   */\n      mload\n        /* \"#utility.yul\":6208:6230   */\n      swap1\n      pop\n        /* \"#utility.yul\":6239:6272   */\n      tag_375\n        /* \"#utility.yul\":6266:6271   */\n      dup2\n        /* \"#utility.yul\":6239:6272   */\n      tag_270\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6135:6278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6284:6635   */\n    tag_136:\n        /* \"#utility.yul\":6354:6360   */\n      0x00\n        /* \"#utility.yul\":6403:6405   */\n      0x20\n        /* \"#utility.yul\":6391:6400   */\n      dup3\n        /* \"#utility.yul\":6382:6389   */\n      dup5\n        /* \"#utility.yul\":6378:6401   */\n      sub\n        /* \"#utility.yul\":6374:6406   */\n      slt\n        /* \"#utility.yul\":6371:6490   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":6409:6488   */\n      tag_378\n      tag_267\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6371:6490   */\n    tag_377:\n        /* \"#utility.yul\":6529:6530   */\n      0x00\n        /* \"#utility.yul\":6554:6618   */\n      tag_379\n        /* \"#utility.yul\":6610:6617   */\n      dup5\n        /* \"#utility.yul\":6601:6607   */\n      dup3\n        /* \"#utility.yul\":6590:6599   */\n      dup6\n        /* \"#utility.yul\":6586:6608   */\n      add\n        /* \"#utility.yul\":6554:6618   */\n      tag_286\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6544:6618   */\n      swap2\n      pop\n        /* \"#utility.yul\":6500:6628   */\n      pop\n        /* \"#utility.yul\":6284:6635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6641:6874   */\n    tag_287:\n        /* \"#utility.yul\":6781:6815   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":6777:6778   */\n      0x00\n        /* \"#utility.yul\":6769:6775   */\n      dup3\n        /* \"#utility.yul\":6765:6779   */\n      add\n        /* \"#utility.yul\":6758:6816   */\n      mstore\n        /* \"#utility.yul\":6850:6866   */\n      0x647920696e697469616c697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":6845:6847   */\n      0x20\n        /* \"#utility.yul\":6837:6843   */\n      dup3\n        /* \"#utility.yul\":6833:6848   */\n      add\n        /* \"#utility.yul\":6826:6867   */\n      mstore\n        /* \"#utility.yul\":6641:6874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6880:7246   */\n    tag_288:\n        /* \"#utility.yul\":7022:7025   */\n      0x00\n        /* \"#utility.yul\":7043:7110   */\n      tag_382\n        /* \"#utility.yul\":7107:7109   */\n      0x2e\n        /* \"#utility.yul\":7102:7105   */\n      dup4\n        /* \"#utility.yul\":7043:7110   */\n      tag_283\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7036:7110   */\n      swap2\n      pop\n        /* \"#utility.yul\":7119:7212   */\n      tag_383\n        /* \"#utility.yul\":7208:7211   */\n      dup3\n        /* \"#utility.yul\":7119:7212   */\n      tag_287\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7237:7239   */\n      0x40\n        /* \"#utility.yul\":7232:7235   */\n      dup3\n        /* \"#utility.yul\":7228:7240   */\n      add\n        /* \"#utility.yul\":7221:7240   */\n      swap1\n      pop\n        /* \"#utility.yul\":6880:7246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7252:7671   */\n    tag_150:\n        /* \"#utility.yul\":7418:7422   */\n      0x00\n        /* \"#utility.yul\":7456:7458   */\n      0x20\n        /* \"#utility.yul\":7445:7454   */\n      dup3\n        /* \"#utility.yul\":7441:7459   */\n      add\n        /* \"#utility.yul\":7433:7459   */\n      swap1\n      pop\n        /* \"#utility.yul\":7505:7514   */\n      dup2\n        /* \"#utility.yul\":7499:7503   */\n      dup2\n        /* \"#utility.yul\":7495:7515   */\n      sub\n        /* \"#utility.yul\":7491:7492   */\n      0x00\n        /* \"#utility.yul\":7480:7489   */\n      dup4\n        /* \"#utility.yul\":7476:7493   */\n      add\n        /* \"#utility.yul\":7469:7516   */\n      mstore\n        /* \"#utility.yul\":7533:7664   */\n      tag_385\n        /* \"#utility.yul\":7659:7663   */\n      dup2\n        /* \"#utility.yul\":7533:7664   */\n      tag_288\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7525:7664   */\n      swap1\n      pop\n        /* \"#utility.yul\":7252:7671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7677:7762   */\n    tag_289:\n        /* \"#utility.yul\":7722:7729   */\n      0x00\n        /* \"#utility.yul\":7751:7756   */\n      dup2\n        /* \"#utility.yul\":7740:7756   */\n      swap1\n      pop\n        /* \"#utility.yul\":7677:7762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7768:7854   */\n    tag_290:\n        /* \"#utility.yul\":7803:7810   */\n      0x00\n        /* \"#utility.yul\":7843:7847   */\n      0xff\n        /* \"#utility.yul\":7836:7841   */\n      dup3\n        /* \"#utility.yul\":7832:7848   */\n      and\n        /* \"#utility.yul\":7821:7848   */\n      swap1\n      pop\n        /* \"#utility.yul\":7768:7854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7860:7920   */\n    tag_291:\n        /* \"#utility.yul\":7888:7891   */\n      0x00\n        /* \"#utility.yul\":7909:7914   */\n      dup2\n        /* \"#utility.yul\":7902:7914   */\n      swap1\n      pop\n        /* \"#utility.yul\":7860:7920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7926:8080   */\n    tag_292:\n        /* \"#utility.yul\":7982:7991   */\n      0x00\n        /* \"#utility.yul\":8015:8074   */\n      tag_390\n        /* \"#utility.yul\":8031:8073   */\n      tag_391\n        /* \"#utility.yul\":8040:8072   */\n      tag_392\n        /* \"#utility.yul\":8066:8071   */\n      dup5\n        /* \"#utility.yul\":8040:8072   */\n      tag_289\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8031:8073   */\n      tag_291\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8015:8074   */\n      tag_290\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":8002:8074   */\n      swap1\n      pop\n        /* \"#utility.yul\":7926:8080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8086:8229   */\n    tag_293:\n        /* \"#utility.yul\":8179:8222   */\n      tag_394\n        /* \"#utility.yul\":8216:8221   */\n      dup2\n        /* \"#utility.yul\":8179:8222   */\n      tag_292\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8174:8177   */\n      dup3\n        /* \"#utility.yul\":8167:8223   */\n      mstore\n        /* \"#utility.yul\":8086:8229   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8235:8469   */\n    tag_157:\n        /* \"#utility.yul\":8334:8338   */\n      0x00\n        /* \"#utility.yul\":8372:8374   */\n      0x20\n        /* \"#utility.yul\":8361:8370   */\n      dup3\n        /* \"#utility.yul\":8357:8375   */\n      add\n        /* \"#utility.yul\":8349:8375   */\n      swap1\n      pop\n        /* \"#utility.yul\":8385:8462   */\n      tag_396\n        /* \"#utility.yul\":8459:8460   */\n      0x00\n        /* \"#utility.yul\":8448:8457   */\n      dup4\n        /* \"#utility.yul\":8444:8461   */\n      add\n        /* \"#utility.yul\":8435:8441   */\n      dup5\n        /* \"#utility.yul\":8385:8462   */\n      tag_293\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8235:8469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8475:8700   */\n    tag_294:\n        /* \"#utility.yul\":8615:8649   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8611:8612   */\n      0x00\n        /* \"#utility.yul\":8603:8609   */\n      dup3\n        /* \"#utility.yul\":8599:8613   */\n      add\n        /* \"#utility.yul\":8592:8650   */\n      mstore\n        /* \"#utility.yul\":8684:8692   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8679:8681   */\n      0x20\n        /* \"#utility.yul\":8671:8677   */\n      dup3\n        /* \"#utility.yul\":8667:8682   */\n      add\n        /* \"#utility.yul\":8660:8693   */\n      mstore\n        /* \"#utility.yul\":8475:8700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8706:9072   */\n    tag_295:\n        /* \"#utility.yul\":8848:8851   */\n      0x00\n        /* \"#utility.yul\":8869:8936   */\n      tag_399\n        /* \"#utility.yul\":8933:8935   */\n      0x26\n        /* \"#utility.yul\":8928:8931   */\n      dup4\n        /* \"#utility.yul\":8869:8936   */\n      tag_283\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8862:8936   */\n      swap2\n      pop\n        /* \"#utility.yul\":8945:9038   */\n      tag_400\n        /* \"#utility.yul\":9034:9037   */\n      dup3\n        /* \"#utility.yul\":8945:9038   */\n      tag_294\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9063:9065   */\n      0x40\n        /* \"#utility.yul\":9058:9061   */\n      dup3\n        /* \"#utility.yul\":9054:9066   */\n      add\n        /* \"#utility.yul\":9047:9066   */\n      swap1\n      pop\n        /* \"#utility.yul\":8706:9072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9078:9497   */\n    tag_173:\n        /* \"#utility.yul\":9244:9248   */\n      0x00\n        /* \"#utility.yul\":9282:9284   */\n      0x20\n        /* \"#utility.yul\":9271:9280   */\n      dup3\n        /* \"#utility.yul\":9267:9285   */\n      add\n        /* \"#utility.yul\":9259:9285   */\n      swap1\n      pop\n        /* \"#utility.yul\":9331:9340   */\n      dup2\n        /* \"#utility.yul\":9325:9329   */\n      dup2\n        /* \"#utility.yul\":9321:9341   */\n      sub\n        /* \"#utility.yul\":9317:9318   */\n      0x00\n        /* \"#utility.yul\":9306:9315   */\n      dup4\n        /* \"#utility.yul\":9302:9319   */\n      add\n        /* \"#utility.yul\":9295:9342   */\n      mstore\n        /* \"#utility.yul\":9359:9490   */\n      tag_402\n        /* \"#utility.yul\":9485:9489   */\n      dup2\n        /* \"#utility.yul\":9359:9490   */\n      tag_295\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9351:9490   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9503:9835   */\n    tag_184:\n        /* \"#utility.yul\":9624:9628   */\n      0x00\n        /* \"#utility.yul\":9662:9664   */\n      0x40\n        /* \"#utility.yul\":9651:9660   */\n      dup3\n        /* \"#utility.yul\":9647:9665   */\n      add\n        /* \"#utility.yul\":9639:9665   */\n      swap1\n      pop\n        /* \"#utility.yul\":9675:9746   */\n      tag_404\n        /* \"#utility.yul\":9743:9744   */\n      0x00\n        /* \"#utility.yul\":9732:9741   */\n      dup4\n        /* \"#utility.yul\":9728:9745   */\n      add\n        /* \"#utility.yul\":9719:9725   */\n      dup6\n        /* \"#utility.yul\":9675:9746   */\n      tag_279\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9756:9828   */\n      tag_405\n        /* \"#utility.yul\":9824:9826   */\n      0x20\n        /* \"#utility.yul\":9813:9822   */\n      dup4\n        /* \"#utility.yul\":9809:9827   */\n      add\n        /* \"#utility.yul\":9800:9806   */\n      dup5\n        /* \"#utility.yul\":9756:9828   */\n      tag_278\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":9503:9835   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9841:9978   */\n    tag_296:\n        /* \"#utility.yul\":9895:9900   */\n      0x00\n        /* \"#utility.yul\":9926:9932   */\n      dup2\n        /* \"#utility.yul\":9920:9933   */\n      mload\n        /* \"#utility.yul\":9911:9933   */\n      swap1\n      pop\n        /* \"#utility.yul\":9942:9972   */\n      tag_407\n        /* \"#utility.yul\":9966:9971   */\n      dup2\n        /* \"#utility.yul\":9942:9972   */\n      tag_280\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9841:9978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9984:10329   */\n    tag_188:\n        /* \"#utility.yul\":10051:10057   */\n      0x00\n        /* \"#utility.yul\":10100:10102   */\n      0x20\n        /* \"#utility.yul\":10088:10097   */\n      dup3\n        /* \"#utility.yul\":10079:10086   */\n      dup5\n        /* \"#utility.yul\":10075:10098   */\n      sub\n        /* \"#utility.yul\":10071:10103   */\n      slt\n        /* \"#utility.yul\":10068:10187   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":10106:10185   */\n      tag_410\n      tag_267\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10068:10187   */\n    tag_409:\n        /* \"#utility.yul\":10226:10227   */\n      0x00\n        /* \"#utility.yul\":10251:10312   */\n      tag_411\n        /* \"#utility.yul\":10304:10311   */\n      dup5\n        /* \"#utility.yul\":10295:10301   */\n      dup3\n        /* \"#utility.yul\":10284:10293   */\n      dup6\n        /* \"#utility.yul\":10280:10302   */\n      add\n        /* \"#utility.yul\":10251:10312   */\n      tag_296\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10241:10312   */\n      swap2\n      pop\n        /* \"#utility.yul\":10197:10322   */\n      pop\n        /* \"#utility.yul\":9984:10329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10335:10515   */\n    tag_297:\n        /* \"#utility.yul\":10383:10460   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10380:10381   */\n      0x00\n        /* \"#utility.yul\":10373:10461   */\n      mstore\n        /* \"#utility.yul\":10480:10484   */\n      0x12\n        /* \"#utility.yul\":10477:10478   */\n      0x04\n        /* \"#utility.yul\":10470:10485   */\n      mstore\n        /* \"#utility.yul\":10504:10508   */\n      0x24\n        /* \"#utility.yul\":10501:10502   */\n      0x00\n        /* \"#utility.yul\":10494:10509   */\n      revert\n        /* \"#utility.yul\":10521:10706   */\n    tag_197:\n        /* \"#utility.yul\":10561:10562   */\n      0x00\n        /* \"#utility.yul\":10578:10598   */\n      tag_414\n        /* \"#utility.yul\":10596:10597   */\n      dup3\n        /* \"#utility.yul\":10578:10598   */\n      tag_269\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":10573:10598   */\n      swap2\n      pop\n        /* \"#utility.yul\":10612:10632   */\n      tag_415\n        /* \"#utility.yul\":10630:10631   */\n      dup4\n        /* \"#utility.yul\":10612:10632   */\n      tag_269\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10607:10632   */\n      swap3\n      pop\n        /* \"#utility.yul\":10651:10652   */\n      dup3\n        /* \"#utility.yul\":10641:10676   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":10656:10674   */\n      tag_417\n      tag_297\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10641:10676   */\n    tag_416:\n        /* \"#utility.yul\":10698:10699   */\n      dup3\n        /* \"#utility.yul\":10695:10696   */\n      dup3\n        /* \"#utility.yul\":10691:10700   */\n      div\n        /* \"#utility.yul\":10686:10700   */\n      swap1\n      pop\n        /* \"#utility.yul\":10521:10706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10712:11060   */\n    tag_199:\n        /* \"#utility.yul\":10752:10759   */\n      0x00\n        /* \"#utility.yul\":10775:10795   */\n      tag_419\n        /* \"#utility.yul\":10793:10794   */\n      dup3\n        /* \"#utility.yul\":10775:10795   */\n      tag_269\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10770:10795   */\n      swap2\n      pop\n        /* \"#utility.yul\":10809:10829   */\n      tag_420\n        /* \"#utility.yul\":10827:10828   */\n      dup4\n        /* \"#utility.yul\":10809:10829   */\n      tag_269\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10804:10829   */\n      swap3\n      pop\n        /* \"#utility.yul\":10997:10998   */\n      dup2\n        /* \"#utility.yul\":10929:10995   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10925:10999   */\n      div\n        /* \"#utility.yul\":10922:10923   */\n      dup4\n        /* \"#utility.yul\":10919:11000   */\n      gt\n        /* \"#utility.yul\":10914:10915   */\n      dup3\n        /* \"#utility.yul\":10907:10916   */\n      iszero\n        /* \"#utility.yul\":10900:10917   */\n      iszero\n        /* \"#utility.yul\":10896:11001   */\n      and\n        /* \"#utility.yul\":10893:11024   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":11004:11022   */\n      tag_422\n      tag_282\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10893:11024   */\n    tag_421:\n        /* \"#utility.yul\":11052:11053   */\n      dup3\n        /* \"#utility.yul\":11049:11050   */\n      dup3\n        /* \"#utility.yul\":11045:11054   */\n      mul\n        /* \"#utility.yul\":11034:11054   */\n      swap1\n      pop\n        /* \"#utility.yul\":10712:11060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11066:11151   */\n    tag_298:\n        /* \"#utility.yul\":11111:11118   */\n      0x00\n        /* \"#utility.yul\":11140:11145   */\n      dup2\n        /* \"#utility.yul\":11129:11145   */\n      swap1\n      pop\n        /* \"#utility.yul\":11066:11151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11157:11315   */\n    tag_299:\n        /* \"#utility.yul\":11215:11224   */\n      0x00\n        /* \"#utility.yul\":11248:11309   */\n      tag_425\n        /* \"#utility.yul\":11266:11308   */\n      tag_426\n        /* \"#utility.yul\":11275:11307   */\n      tag_427\n        /* \"#utility.yul\":11301:11306   */\n      dup5\n        /* \"#utility.yul\":11275:11307   */\n      tag_298\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11266:11308   */\n      tag_291\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11248:11309   */\n      tag_269\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11235:11309   */\n      swap1\n      pop\n        /* \"#utility.yul\":11157:11315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11321:11468   */\n    tag_300:\n        /* \"#utility.yul\":11416:11461   */\n      tag_429\n        /* \"#utility.yul\":11455:11460   */\n      dup2\n        /* \"#utility.yul\":11416:11461   */\n      tag_299\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11411:11414   */\n      dup3\n        /* \"#utility.yul\":11404:11462   */\n      mstore\n        /* \"#utility.yul\":11321:11468   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11474:11822   */\n    tag_221:\n        /* \"#utility.yul\":11603:11607   */\n      0x00\n        /* \"#utility.yul\":11641:11643   */\n      0x40\n        /* \"#utility.yul\":11630:11639   */\n      dup3\n        /* \"#utility.yul\":11626:11644   */\n      add\n        /* \"#utility.yul\":11618:11644   */\n      swap1\n      pop\n        /* \"#utility.yul\":11654:11725   */\n      tag_431\n        /* \"#utility.yul\":11722:11723   */\n      0x00\n        /* \"#utility.yul\":11711:11720   */\n      dup4\n        /* \"#utility.yul\":11707:11724   */\n      add\n        /* \"#utility.yul\":11698:11704   */\n      dup6\n        /* \"#utility.yul\":11654:11725   */\n      tag_279\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11735:11815   */\n      tag_432\n        /* \"#utility.yul\":11811:11813   */\n      0x20\n        /* \"#utility.yul\":11800:11809   */\n      dup4\n        /* \"#utility.yul\":11796:11814   */\n      add\n        /* \"#utility.yul\":11787:11793   */\n      dup5\n        /* \"#utility.yul\":11735:11815   */\n      tag_300\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":11474:11822   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11828:12160   */\n    tag_234:\n        /* \"#utility.yul\":11949:11953   */\n      0x00\n        /* \"#utility.yul\":11987:11989   */\n      0x40\n        /* \"#utility.yul\":11976:11985   */\n      dup3\n        /* \"#utility.yul\":11972:11990   */\n      add\n        /* \"#utility.yul\":11964:11990   */\n      swap1\n      pop\n        /* \"#utility.yul\":12000:12071   */\n      tag_434\n        /* \"#utility.yul\":12068:12069   */\n      0x00\n        /* \"#utility.yul\":12057:12066   */\n      dup4\n        /* \"#utility.yul\":12053:12070   */\n      add\n        /* \"#utility.yul\":12044:12050   */\n      dup6\n        /* \"#utility.yul\":12000:12071   */\n      tag_278\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12081:12153   */\n      tag_435\n        /* \"#utility.yul\":12149:12151   */\n      0x20\n        /* \"#utility.yul\":12138:12147   */\n      dup4\n        /* \"#utility.yul\":12134:12152   */\n      add\n        /* \"#utility.yul\":12125:12131   */\n      dup5\n        /* \"#utility.yul\":12081:12153   */\n      tag_278\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":11828:12160   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12166:12530   */\n    tag_237:\n        /* \"#utility.yul\":12303:12307   */\n      0x00\n        /* \"#utility.yul\":12341:12343   */\n      0x40\n        /* \"#utility.yul\":12330:12339   */\n      dup3\n        /* \"#utility.yul\":12326:12344   */\n      add\n        /* \"#utility.yul\":12318:12344   */\n      swap1\n      pop\n        /* \"#utility.yul\":12354:12433   */\n      tag_437\n        /* \"#utility.yul\":12430:12431   */\n      0x00\n        /* \"#utility.yul\":12419:12428   */\n      dup4\n        /* \"#utility.yul\":12415:12432   */\n      add\n        /* \"#utility.yul\":12406:12412   */\n      dup6\n        /* \"#utility.yul\":12354:12433   */\n      tag_300\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12443:12523   */\n      tag_438\n        /* \"#utility.yul\":12519:12521   */\n      0x20\n        /* \"#utility.yul\":12508:12517   */\n      dup4\n        /* \"#utility.yul\":12504:12522   */\n      add\n        /* \"#utility.yul\":12495:12501   */\n      dup5\n        /* \"#utility.yul\":12443:12523   */\n      tag_300\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":12166:12530   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12536:12718   */\n    tag_301:\n        /* \"#utility.yul\":12676:12710   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12664:12670   */\n      dup3\n        /* \"#utility.yul\":12660:12674   */\n      add\n        /* \"#utility.yul\":12653:12711   */\n      mstore\n        /* \"#utility.yul\":12536:12718   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12724:13090   */\n    tag_302:\n        /* \"#utility.yul\":12866:12869   */\n      0x00\n        /* \"#utility.yul\":12887:12954   */\n      tag_441\n        /* \"#utility.yul\":12951:12953   */\n      0x20\n        /* \"#utility.yul\":12946:12949   */\n      dup4\n        /* \"#utility.yul\":12887:12954   */\n      tag_283\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":12880:12954   */\n      swap2\n      pop\n        /* \"#utility.yul\":12963:13056   */\n      tag_442\n        /* \"#utility.yul\":13052:13055   */\n      dup3\n        /* \"#utility.yul\":12963:13056   */\n      tag_301\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13081:13083   */\n      0x20\n        /* \"#utility.yul\":13076:13079   */\n      dup3\n        /* \"#utility.yul\":13072:13084   */\n      add\n        /* \"#utility.yul\":13065:13084   */\n      swap1\n      pop\n        /* \"#utility.yul\":12724:13090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13096:13515   */\n    tag_244:\n        /* \"#utility.yul\":13262:13266   */\n      0x00\n        /* \"#utility.yul\":13300:13302   */\n      0x20\n        /* \"#utility.yul\":13289:13298   */\n      dup3\n        /* \"#utility.yul\":13285:13303   */\n      add\n        /* \"#utility.yul\":13277:13303   */\n      swap1\n      pop\n        /* \"#utility.yul\":13349:13358   */\n      dup2\n        /* \"#utility.yul\":13343:13347   */\n      dup2\n        /* \"#utility.yul\":13339:13359   */\n      sub\n        /* \"#utility.yul\":13335:13336   */\n      0x00\n        /* \"#utility.yul\":13324:13333   */\n      dup4\n        /* \"#utility.yul\":13320:13337   */\n      add\n        /* \"#utility.yul\":13313:13360   */\n      mstore\n        /* \"#utility.yul\":13377:13508   */\n      tag_444\n        /* \"#utility.yul\":13503:13507   */\n      dup2\n        /* \"#utility.yul\":13377:13508   */\n      tag_302\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13369:13508   */\n      swap1\n      pop\n        /* \"#utility.yul\":13096:13515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13521:13751   */\n    tag_303:\n        /* \"#utility.yul\":13661:13695   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":13657:13658   */\n      0x00\n        /* \"#utility.yul\":13649:13655   */\n      dup3\n        /* \"#utility.yul\":13645:13659   */\n      add\n        /* \"#utility.yul\":13638:13696   */\n      mstore\n        /* \"#utility.yul\":13730:13743   */\n      0x6e697469616c697a696e67000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13725:13727   */\n      0x20\n        /* \"#utility.yul\":13717:13723   */\n      dup3\n        /* \"#utility.yul\":13713:13728   */\n      add\n        /* \"#utility.yul\":13706:13744   */\n      mstore\n        /* \"#utility.yul\":13521:13751   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13757:14123   */\n    tag_304:\n        /* \"#utility.yul\":13899:13902   */\n      0x00\n        /* \"#utility.yul\":13920:13987   */\n      tag_447\n        /* \"#utility.yul\":13984:13986   */\n      0x2b\n        /* \"#utility.yul\":13979:13982   */\n      dup4\n        /* \"#utility.yul\":13920:13987   */\n      tag_283\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":13913:13987   */\n      swap2\n      pop\n        /* \"#utility.yul\":13996:14089   */\n      tag_448\n        /* \"#utility.yul\":14085:14088   */\n      dup3\n        /* \"#utility.yul\":13996:14089   */\n      tag_303\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14114:14116   */\n      0x40\n        /* \"#utility.yul\":14109:14112   */\n      dup3\n        /* \"#utility.yul\":14105:14117   */\n      add\n        /* \"#utility.yul\":14098:14117   */\n      swap1\n      pop\n        /* \"#utility.yul\":13757:14123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14129:14548   */\n    tag_250:\n        /* \"#utility.yul\":14295:14299   */\n      0x00\n        /* \"#utility.yul\":14333:14335   */\n      0x20\n        /* \"#utility.yul\":14322:14331   */\n      dup3\n        /* \"#utility.yul\":14318:14336   */\n      add\n        /* \"#utility.yul\":14310:14336   */\n      swap1\n      pop\n        /* \"#utility.yul\":14382:14391   */\n      dup2\n        /* \"#utility.yul\":14376:14380   */\n      dup2\n        /* \"#utility.yul\":14372:14392   */\n      sub\n        /* \"#utility.yul\":14368:14369   */\n      0x00\n        /* \"#utility.yul\":14357:14366   */\n      dup4\n        /* \"#utility.yul\":14353:14370   */\n      add\n        /* \"#utility.yul\":14346:14393   */\n      mstore\n        /* \"#utility.yul\":14410:14541   */\n      tag_450\n        /* \"#utility.yul\":14536:14540   */\n      dup2\n        /* \"#utility.yul\":14410:14541   */\n      tag_304\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14402:14541   */\n      swap1\n      pop\n        /* \"#utility.yul\":14129:14548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220545ce4084d0594998deca282e9152f0ddc54300ca022a1a4c942ae544c917d3a64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611d4d806100206000396000f3fe6080604052600436106101235760003560e01c8063c0c53b8b116100a0578063f053dc5c11610064578063f053dc5c14610394578063f2fde38b146103bf578063f4359ce5146103e8578063f4f3b20014610413578063f76541761461043c5761012a565b8063c0c53b8b146102d5578063ce08baa7146102fe578063d3ce9ab314610329578063de3b8b1214610352578063de74d499146103695761012a565b80638d72647e116100e75780638d72647e146102005780638da5cb5b1461022b57806399093a3314610256578063aaf5eb6814610281578063b19337a4146102ac5761012a565b80630b78f9c01461012f5780632a9e63c614610158578063351ad5e814610181578063715018a6146101be578063722713f7146101d55761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190611555565b610453565b005b34801561016457600080fd5b5061017f600480360381019061017a91906115f3565b6104c1565b005b34801561018d57600080fd5b506101a860048036038101906101a391906115f3565b610546565b6040516101b5919061163b565b60405180910390f35b3480156101ca57600080fd5b506101d3610566565b005b3480156101e157600080fd5b506101ea61057a565b6040516101f79190611665565b60405180910390f35b34801561020c57600080fd5b5061021561061d565b604051610222919061168f565b60405180910390f35b34801561023757600080fd5b50610240610643565b60405161024d919061168f565b60405180910390f35b34801561026257600080fd5b5061026b61066d565b6040516102789190611665565b60405180910390f35b34801561028d57600080fd5b50610296610673565b6040516102a39190611665565b60405180910390f35b3480156102b857600080fd5b506102d360048036038101906102ce91906115f3565b610679565b005b3480156102e157600080fd5b506102fc60048036038101906102f791906116aa565b6106fe565b005b34801561030a57600080fd5b50610313610914565b604051610320919061168f565b60405180910390f35b34801561033557600080fd5b50610350600480360381019061034b9190611729565b61093a565b005b34801561035e57600080fd5b5061036761099d565b005b34801561037557600080fd5b5061037e610a3a565b60405161038b9190611665565b60405180910390f35b3480156103a057600080fd5b506103a9610a40565b6040516103b6919061168f565b60405180910390f35b3480156103cb57600080fd5b506103e660048036038101906103e191906115f3565b610a66565b005b3480156103f457600080fd5b506103fd610ae9565b60405161040a9190611665565b60405180910390f35b34801561041f57600080fd5b5061043a600480360381019061043591906115f3565b610af0565b005b34801561044857600080fd5b50610451610c32565b005b61045b611262565b6103e860665460655461046e9190611798565b11156104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a69061184b565b60405180910390fd5b81606581905550806066819055505050565b6104c9611262565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361050257600080fd5b80606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606a6020528060005260406000206000915054906101000a900460ff1681565b61056e611262565b61057860006112e0565b565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105d7919061168f565b602060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190611880565b905090565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60665481565b6103e881565b610681611262565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ba57600080fd5b80606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060019054906101000a900460ff1615905080801561072f5750600160008054906101000a900460ff1660ff16105b8061075c575061073e306113a6565b15801561075b5750600160008054906101000a900460ff1660ff16145b5b61079b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107929061191f565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156107d8576001600060016101000a81548160ff0219169083151502179055505b6107e06113c9565b83606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014d60658190555061029b606681905550801561090e5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516109059190611991565b60405180910390a15b50505050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610942611262565b80606a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6109a5610643565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a275750606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610a3057600080fd5b610a38611422565b565b60655481565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a6e611262565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490611a1e565b60405180910390fd5b610ae6816112e0565b50565b62093a8081565b610af8611262565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3157600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b6c919061168f565b602060405180830381865afa158015610b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bad9190611880565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610bea929190611a3e565b6020604051808303816000875af1158015610c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d9190611a7c565b505050565b610c3a610643565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cbc5750606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610cc557600080fd5b610ccd611422565b6000610cd761057a565b9050600080600062093a808042610cee9190611ad8565b610cf89190611b09565b90506103e884111561122057600073ffffffffffffffffffffffffffffffffffffffff16606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f3f576103e860655485610d6b9190611b09565b610d759190611ad8565b9250606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610df6929190611a3e565b6020604051808303816000875af1158015610e15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e399190611a7c565b50606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d294f0936040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ea457600080fd5b505af1158015610eb8573d6000803e3d6000fd5b50505050606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638119c0656040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f2657600080fd5b505af1158015610f3a573d6000803e3d6000fd5b505050505b600073ffffffffffffffffffffffffffffffffffffffff16606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111e1576103e860665485610fa69190611b09565b610fb09190611ad8565b915081610fbb61057a565b1015610fcc57610fc961057a565b91505b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660006040518363ffffffff1660e01b815260040161104c929190611b9e565b6020604051808303816000875af115801561106b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108f9190611a7c565b50606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161110f929190611a3e565b6020604051808303816000875af115801561112e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111529190611a7c565b50606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25836040518263ffffffff1660e01b81526004016111ae9190611665565b600060405180830381600087803b1580156111c857600080fd5b505af11580156111dc573d6000803e3d6000fd5b505050505b807fcf0974dfd867840133a0d4b02f1672f24017796fb8892d1e0d587692e4da90ab8484604051611213929190611bc7565b60405180910390a261125c565b807fcf0974dfd867840133a0d4b02f1672f24017796fb8892d1e0d587692e4da90ab600080604051611253929190611bf0565b60405180910390a25b50505050565b61126a6114b1565b73ffffffffffffffffffffffffffffffffffffffff16611288610643565b73ffffffffffffffffffffffffffffffffffffffff16146112de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d590611c65565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f90611cf7565b60405180910390fd5b6114206114b9565b565b60004711156114af57606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561149557600080fd5b505af11580156114a9573d6000803e3d6000fd5b50505050505b565b600033905090565b600060019054906101000a900460ff16611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ff90611cf7565b60405180910390fd5b6115186115136114b1565b6112e0565b565b600080fd5b6000819050919050565b6115328161151f565b811461153d57600080fd5b50565b60008135905061154f81611529565b92915050565b6000806040838503121561156c5761156b61151a565b5b600061157a85828601611540565b925050602061158b85828601611540565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115c082611595565b9050919050565b6115d0816115b5565b81146115db57600080fd5b50565b6000813590506115ed816115c7565b92915050565b6000602082840312156116095761160861151a565b5b6000611617848285016115de565b91505092915050565b60008115159050919050565b61163581611620565b82525050565b6000602082019050611650600083018461162c565b92915050565b61165f8161151f565b82525050565b600060208201905061167a6000830184611656565b92915050565b611689816115b5565b82525050565b60006020820190506116a46000830184611680565b92915050565b6000806000606084860312156116c3576116c261151a565b5b60006116d1868287016115de565b93505060206116e2868287016115de565b92505060406116f3868287016115de565b9150509250925092565b61170681611620565b811461171157600080fd5b50565b600081359050611723816116fd565b92915050565b600080604083850312156117405761173f61151a565b5b600061174e858286016115de565b925050602061175f85828601611714565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117a38261151f565b91506117ae8361151f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117e3576117e2611769565b5b828201905092915050565b600082825260208201905092915050565b7f746f6f206d616e79000000000000000000000000000000000000000000000000600082015250565b60006118356008836117ee565b9150611840826117ff565b602082019050919050565b6000602082019050818103600083015261186481611828565b9050919050565b60008151905061187a81611529565b92915050565b6000602082840312156118965761189561151a565b5b60006118a48482850161186b565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611909602e836117ee565b9150611914826118ad565b604082019050919050565b60006020820190508181036000830152611938816118fc565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061197b6119766119718461193f565b611956565b611949565b9050919050565b61198b81611960565b82525050565b60006020820190506119a66000830184611982565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a086026836117ee565b9150611a13826119ac565b604082019050919050565b60006020820190508181036000830152611a37816119fb565b9050919050565b6000604082019050611a536000830185611680565b611a606020830184611656565b9392505050565b600081519050611a76816116fd565b92915050565b600060208284031215611a9257611a9161151a565b5b6000611aa084828501611a67565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ae38261151f565b9150611aee8361151f565b925082611afe57611afd611aa9565b5b828204905092915050565b6000611b148261151f565b9150611b1f8361151f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b5857611b57611769565b5b828202905092915050565b6000819050919050565b6000611b88611b83611b7e84611b63565b611956565b61151f565b9050919050565b611b9881611b6d565b82525050565b6000604082019050611bb36000830185611680565b611bc06020830184611b8f565b9392505050565b6000604082019050611bdc6000830185611656565b611be96020830184611656565b9392505050565b6000604082019050611c056000830185611b8f565b611c126020830184611b8f565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c4f6020836117ee565b9150611c5a82611c19565b602082019050919050565b60006020820190508181036000830152611c7e81611c42565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611ce1602b836117ee565b9150611cec82611c85565b604082019050919050565b60006020820190508181036000830152611d1081611cd4565b905091905056fea2646970667358221220545ce4084d0594998deca282e9152f0ddc54300ca022a1a4c942ae544c917d3a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x123 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0C53B8B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF053DC5C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF053DC5C EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xF4359CE5 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF7654176 EQ PUSH2 0x43C JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xCE08BAA7 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD3CE9AB3 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xDE3B8B12 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xDE74D499 EQ PUSH2 0x369 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x8D72647E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8D72647E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x99093A33 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xB19337A4 EQ PUSH2 0x2AC JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0xB78F9C0 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x2A9E63C6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x351AD5E8 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x1D5 JUMPI PUSH2 0x12A JUMP JUMPDEST CALLDATASIZE PUSH2 0x12A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x99D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37E PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x451 PUSH2 0xC32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x66 SLOAD PUSH1 0x65 SLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1798 JUMP JUMPDEST GT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A6 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x65 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x66 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x69 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6A PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x56E PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x578 PUSH1 0x0 PUSH2 0x12E0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x66 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x681 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x68 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x72F JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x75C JUMPI POP PUSH2 0x73E ADDRESS PUSH2 0x13A6 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x7E0 PUSH2 0x13C9 JUMP JUMPDEST DUP4 PUSH1 0x67 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x68 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x69 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x14D PUSH1 0x65 DUP2 SWAP1 SSTORE POP PUSH2 0x29B PUSH1 0x66 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x90E JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x942 PUSH2 0x1262 JUMP JUMPDEST DUP1 PUSH1 0x6A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0x643 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA27 JUMPI POP PUSH1 0x6A PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA38 PUSH2 0x1422 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA6E PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0x12E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP3 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC3A PUSH2 0x643 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xCBC JUMPI POP PUSH1 0x6A PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xCC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCD PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD7 PUSH2 0x57A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x93A80 DUP1 TIMESTAMP PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP5 GT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3F JUMPI PUSH2 0x3E8 PUSH1 0x65 SLOAD DUP6 PUSH2 0xD6B SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF6 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST POP PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD294F093 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8119C065 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E1 JUMPI PUSH2 0x3E8 PUSH1 0x66 SLOAD DUP6 PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP DUP2 PUSH2 0xFBB PUSH2 0x57A JUMP JUMPDEST LT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFC9 PUSH2 0x57A JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104C SWAP3 SWAP2 SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST POP PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP3 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x112E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1152 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST POP PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6B55F25 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 PUSH32 0xCF0974DFD867840133A0D4B02F1672F24017796FB8892D1E0D587692E4DA90AB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1213 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x125C JUMP JUMPDEST DUP1 PUSH32 0xCF0974DFD867840133A0D4B02F1672F24017796FB8892D1E0D587692E4DA90AB PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0x1253 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x126A PUSH2 0x14B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1288 PUSH2 0x643 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D5 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1418 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140F SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1420 PUSH2 0x14B9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT ISZERO PUSH2 0x14AF JUMPI PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 SELFBALANCE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1518 PUSH2 0x1513 PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x12E0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1532 DUP2 PUSH2 0x151F JUMP JUMPDEST DUP2 EQ PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x154F DUP2 PUSH2 0x1529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x156C JUMPI PUSH2 0x156B PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x157A DUP6 DUP3 DUP7 ADD PUSH2 0x1540 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x158B DUP6 DUP3 DUP7 ADD PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C0 DUP3 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D0 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x15DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15ED DUP2 PUSH2 0x15C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1609 JUMPI PUSH2 0x1608 PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1617 DUP5 DUP3 DUP6 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1635 DUP2 PUSH2 0x1620 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1650 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x162C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x165F DUP2 PUSH2 0x151F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1656 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1689 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1680 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16D1 DUP7 DUP3 DUP8 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16E2 DUP7 DUP3 DUP8 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16F3 DUP7 DUP3 DUP8 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1706 DUP2 PUSH2 0x1620 JUMP JUMPDEST DUP2 EQ PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1723 DUP2 PUSH2 0x16FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1740 JUMPI PUSH2 0x173F PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174E DUP6 DUP3 DUP7 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x175F DUP6 DUP3 DUP7 ADD PUSH2 0x1714 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP3 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP PUSH2 0x17AE DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x17E3 JUMPI PUSH2 0x17E2 PUSH2 0x1769 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6F206D616E79000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1835 PUSH1 0x8 DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1840 DUP3 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1864 DUP2 PUSH2 0x1828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x187A DUP2 PUSH2 0x1529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1896 JUMPI PUSH2 0x1895 PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A4 DUP5 DUP3 DUP6 ADD PUSH2 0x186B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1909 PUSH1 0x2E DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1914 DUP3 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1938 DUP2 PUSH2 0x18FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197B PUSH2 0x1976 PUSH2 0x1971 DUP5 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x1949 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198B DUP2 PUSH2 0x1960 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1982 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A08 PUSH1 0x26 DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1A13 DUP3 PUSH2 0x19AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A37 DUP2 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A53 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x1A60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1656 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A76 DUP2 PUSH2 0x16FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A92 JUMPI PUSH2 0x1A91 PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AA0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AE3 DUP3 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEE DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1AFE JUMPI PUSH2 0x1AFD PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B14 DUP3 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1769 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B88 PUSH2 0x1B83 PUSH2 0x1B7E DUP5 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x151F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B98 DUP2 PUSH2 0x1B6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BB3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x1BC0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BDC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0x1BE9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1656 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C05 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x1C12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4F PUSH1 0x20 DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5A DUP3 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7E DUP2 PUSH2 0x1C42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE1 PUSH1 0x2B DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEC DUP3 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D10 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0x5C 0xE4 ADDMOD 0x4D SDIV SWAP5 SWAP10 DUP14 0xEC LOG2 DUP3 0xE9 ISZERO 0x2F 0xD 0xDC SLOAD ADDRESS 0xC LOG0 0x22 LOG1 LOG4 0xC9 TIMESTAMP 0xAE SLOAD 0x4C SWAP2 PUSH30 0x3A64736F6C634300080D0033000000000000000000000000000000000000 ",
							"sourceMap": "458:3745:4:-:0;;;1023:16;;;;;;;;;;458:3745;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PRECISION_652": {
									"entryPoint": 1651,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WEEK_657": {
									"entryPoint": 2793,
									"id": 657,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1048": {
									"entryPoint": null,
									"id": 1048,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_26": {
									"entryPoint": 5065,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 5305,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_68": {
									"entryPoint": 4706,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_611": {
									"entryPoint": 5297,
									"id": 611,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_swapWBNBToBNB_769": {
									"entryPoint": 5154,
									"id": 769,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 4832,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_920": {
									"entryPoint": 1402,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@converterFee_659": {
									"entryPoint": 2618,
									"id": 659,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_735": {
									"entryPoint": 1790,
									"id": 735,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_318": {
									"entryPoint": 5030,
									"id": 318,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_54": {
									"entryPoint": 1603,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_82": {
									"entryPoint": 1382,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royaltiesFee_661": {
									"entryPoint": 1645,
									"id": 661,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@royalties_667": {
									"entryPoint": 2624,
									"id": 667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setConverter_941": {
									"entryPoint": 1657,
									"id": 941,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFees_1044": {
									"entryPoint": 1107,
									"id": 1044,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setRoyalties_962": {
									"entryPoint": 1217,
									"id": 962,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSplitter_978": {
									"entryPoint": 2362,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@split_904": {
									"entryPoint": 3122,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@splitter_671": {
									"entryPoint": 1350,
									"id": 671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingConverter_665": {
									"entryPoint": 2324,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapWBNBToBNB_744": {
									"entryPoint": 2461,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_105": {
									"entryPoint": 2662,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@wbnb_663": {
									"entryPoint": 1565,
									"id": 663,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawERC20_1017": {
									"entryPoint": 2800,
									"id": 1017,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint8_fromStack": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7070,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6718,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 7011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5407,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint8": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 7193,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619": {
									"entryPoint": 6143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b": {
									"entryPoint": 7301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14551:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "819:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "821:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "821:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "821:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "815:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:32:6"
															},
															"nodeType": "YulIf",
															"src": "783:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "912:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "927:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "941:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "931:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "956:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "991:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1002:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "987:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "966:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "966:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "956:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1039:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1054:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1058:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1084:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1119:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1130:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1115:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1115:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1139:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1094:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1094:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1084:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "766:6:6",
														"type": ""
													}
												],
												"src": "690:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1215:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1225:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1240:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1247:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1236:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1225:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1197:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1207:7:6",
														"type": ""
													}
												],
												"src": "1170:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1347:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1357:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1386:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1368:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1357:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1329:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1339:7:6",
														"type": ""
													}
												],
												"src": "1302:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1447:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1504:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1513:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1516:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1506:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1506:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1506:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1470:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1495:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1477:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1477:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1467:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1467:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:43:6"
															},
															"nodeType": "YulIf",
															"src": "1457:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1440:5:6",
														"type": ""
													}
												],
												"src": "1404:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1584:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1594:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1616:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1603:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1594:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1659:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1632:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1632:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1562:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1570:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1578:5:6",
														"type": ""
													}
												],
												"src": "1532:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1789:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1791:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1791:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1791:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1764:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1760:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1756:32:6"
															},
															"nodeType": "YulIf",
															"src": "1753:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1882:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1897:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1911:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1901:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1926:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1961:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1972:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1957:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1957:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1981:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1936:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1936:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1926:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1713:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1724:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1736:6:6",
														"type": ""
													}
												],
												"src": "1677:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2054:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2064:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2089:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2082:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2082:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2075:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2064:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2036:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2046:7:6",
														"type": ""
													}
												],
												"src": "2012:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2167:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2184:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2204:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2189:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2189:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2177:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2177:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2177:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2155:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2162:3:6",
														"type": ""
													}
												],
												"src": "2108:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2315:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2325:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2337:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2348:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2333:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2333:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2325:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2399:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2412:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2423:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2361:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2361:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2361:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2287:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2299:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2310:4:6",
														"type": ""
													}
												],
												"src": "2223:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2521:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2544:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2526:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2526:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2514:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2514:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2514:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2492:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2499:3:6",
														"type": ""
													}
												],
												"src": "2439:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2661:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2671:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2683:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2679:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2671:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2707:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2707:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2633:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2645:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2656:4:6",
														"type": ""
													}
												],
												"src": "2563:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2873:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2878:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2878:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2866:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2866:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2844:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2851:3:6",
														"type": ""
													}
												],
												"src": "2791:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3013:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3023:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3035:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3046:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3031:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3023:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3103:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3116:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3127:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3112:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3059:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3059:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2985:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2997:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3008:4:6",
														"type": ""
													}
												],
												"src": "2915:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3243:519:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3289:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3291:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3291:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3291:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3264:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3273:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3285:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:32:6"
															},
															"nodeType": "YulIf",
															"src": "3253:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "3382:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3397:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3401:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3426:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3461:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3472:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3457:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3457:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3481:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3436:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3436:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3426:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3509:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3524:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3528:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3554:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3589:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3600:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3585:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3585:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3609:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3564:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3564:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3554:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3637:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3652:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3656:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3682:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3717:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3728:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3713:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3737:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3692:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3682:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3197:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3208:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3220:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3228:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3236:6:6",
														"type": ""
													}
												],
												"src": "3143:619:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3808:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3862:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3871:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3874:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3864:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3864:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3864:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3831:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3853:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "3838:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3838:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3828:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3828:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3821:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3821:40:6"
															},
															"nodeType": "YulIf",
															"src": "3818:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3801:5:6",
														"type": ""
													}
												],
												"src": "3768:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3939:84:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3949:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3971:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3958:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3958:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3949:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4011:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3987:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3987:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3987:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3917:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3925:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3933:5:6",
														"type": ""
													}
												],
												"src": "3890:133:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4109:388:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4155:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4157:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4157:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4157:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4130:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4139:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:32:6"
															},
															"nodeType": "YulIf",
															"src": "4119:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4248:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4263:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4277:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4267:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4292:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4327:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4338:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4323:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4323:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4347:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4302:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4302:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4292:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4375:115:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4390:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4404:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4394:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4420:60:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4452:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4463:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4448:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4448:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4472:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4430:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4430:50:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4071:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4082:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4094:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4102:6:6",
														"type": ""
													}
												],
												"src": "4029:468:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4531:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4548:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4551:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4541:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4541:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4645:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4648:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4638:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4638:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4638:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4669:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4672:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4662:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4662:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4662:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4503:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4733:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4743:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4766:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4748:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4748:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "4743:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4777:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4800:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4782:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4782:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "4777:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4940:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4942:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4942:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4942:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4861:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4868:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4936:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4864:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4858:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4858:81:6"
															},
															"nodeType": "YulIf",
															"src": "4855:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4972:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4983:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4986:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4972:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4720:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4723:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4729:3:6",
														"type": ""
													}
												],
												"src": "4689:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5096:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5113:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5118:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5106:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5106:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5106:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5134:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5153:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5149:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5149:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5134:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5073:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5084:11:6",
														"type": ""
													}
												],
												"src": "5000:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5281:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5303:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5311:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5299:14:6"
																	},
																	{
																		"hexValue": "746f6f206d616e79",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5315:10:6",
																		"type": "",
																		"value": "too many"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5292:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5292:34:6"
														}
													]
												},
												"name": "store_literal_in_memory_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5273:6:6",
														"type": ""
													}
												],
												"src": "5175:158:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5485:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5495:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5561:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5502:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5495:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5666:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619",
																	"nodeType": "YulIdentifier",
																	"src": "5577:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5577:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5679:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5690:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5695:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5686:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5679:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5473:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5481:3:6",
														"type": ""
													}
												],
												"src": "5339:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5881:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5891:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5903:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5914:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5899:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5899:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5891:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5938:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5949:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5934:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5957:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5953:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5953:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5927:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5927:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5983:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6117:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5991:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5983:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5861:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5876:4:6",
														"type": ""
													}
												],
												"src": "5710:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6198:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6208:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6223:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6217:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6208:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6266:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6239:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6239:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6176:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6184:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6192:5:6",
														"type": ""
													}
												],
												"src": "6135:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:274:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6407:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6409:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6409:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6409:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6382:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6391:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6378:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6378:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6403:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6374:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:32:6"
															},
															"nodeType": "YulIf",
															"src": "6371:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "6500:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6515:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6529:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6519:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6544:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6590:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6601:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6586:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6586:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6610:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6554:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6554:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6544:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6331:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6342:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6354:6:6",
														"type": ""
													}
												],
												"src": "6284:351:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6747:127:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6769:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6777:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6765:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6765:14:6"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6781:34:6",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6758:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6837:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6845:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6833:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6833:15:6"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6850:16:6",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6826:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6826:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6826:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6739:6:6",
														"type": ""
													}
												],
												"src": "6641:233:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7036:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7102:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7107:2:6",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7043:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7036:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7208:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																	"nodeType": "YulIdentifier",
																	"src": "7119:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7119:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7119:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7221:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7232:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7237:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7228:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7228:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7221:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7014:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7022:3:6",
														"type": ""
													}
												],
												"src": "6880:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7423:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7433:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7445:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7456:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7441:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7441:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7433:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7480:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7491:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7476:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7476:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7499:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7505:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7495:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7495:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7469:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7469:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7469:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7525:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7659:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7533:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7533:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7525:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7403:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7418:4:6",
														"type": ""
													}
												],
												"src": "7252:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7730:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7740:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7751:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7740:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7712:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7722:7:6",
														"type": ""
													}
												],
												"src": "7677:85:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7811:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7821:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7836:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7843:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7832:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7832:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7821:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7793:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7803:7:6",
														"type": ""
													}
												],
												"src": "7768:86:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7892:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7902:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7909:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7902:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7878:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7888:3:6",
														"type": ""
													}
												],
												"src": "7860:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7992:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8002:72:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8066:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "8040:25:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8040:32:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "8031:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8031:42:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "8015:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8015:59:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8002:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7972:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7982:9:6",
														"type": ""
													}
												],
												"src": "7926:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8157:72:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8174:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8216:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "8179:36:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8179:43:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:56:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8167:56:6"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8145:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8152:3:6",
														"type": ""
													}
												],
												"src": "8086:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:130:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8361:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8372:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8357:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8357:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8349:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8435:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8448:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8459:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8444:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8385:49:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8385:77:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8385:77:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8311:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8323:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8334:4:6",
														"type": ""
													}
												],
												"src": "8235:234:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8581:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8603:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8611:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8599:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8599:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8615:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8592:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8592:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8592:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8671:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8679:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8667:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8667:15:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8684:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8660:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8660:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8660:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8573:6:6",
														"type": ""
													}
												],
												"src": "8475:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8852:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8862:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8928:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8933:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8869:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8869:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8862:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9034:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "8945:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8945:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8945:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9047:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9058:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9063:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9054:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9054:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9047:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8840:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8848:3:6",
														"type": ""
													}
												],
												"src": "8706:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9249:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9259:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9271:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9282:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9267:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9267:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9259:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9306:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9317:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9302:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9302:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9325:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9331:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9321:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9321:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9295:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9351:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9485:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9359:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9359:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9351:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9229:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9244:4:6",
														"type": ""
													}
												],
												"src": "9078:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9629:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9639:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9651:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9662:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9647:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9647:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9639:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9719:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9732:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9743:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9728:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9728:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9675:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9675:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9675:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9800:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9813:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9824:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9809:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9809:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9756:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9756:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9756:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9593:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9605:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9613:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9624:4:6",
														"type": ""
													}
												],
												"src": "9503:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9901:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9911:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9926:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9920:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9920:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9911:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9966:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9942:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9942:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9942:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9879:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9887:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9895:5:6",
														"type": ""
													}
												],
												"src": "9841:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10058:271:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10104:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10106:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10106:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10106:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10079:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10088:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10075:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10075:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10100:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10071:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10071:32:6"
															},
															"nodeType": "YulIf",
															"src": "10068:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "10197:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10212:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10226:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10216:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10241:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10284:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10295:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10280:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10280:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10304:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10251:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10251:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10241:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10028:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10039:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10051:6:6",
														"type": ""
													}
												],
												"src": "9984:345:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10363:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10380:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10383:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10373:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10373:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10373:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10477:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10480:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10470:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10470:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10470:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10501:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10504:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10494:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10494:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10494:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10335:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10563:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10573:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10596:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10578:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10578:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10573:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10607:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10630:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10612:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10612:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10607:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10654:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10656:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10656:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10656:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10651:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10644:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10644:9:6"
															},
															"nodeType": "YulIf",
															"src": "10641:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10686:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10695:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10698:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10691:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10691:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10686:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10552:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10555:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10561:1:6",
														"type": ""
													}
												],
												"src": "10521:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10760:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10770:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10793:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10775:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10770:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10804:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10827:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10809:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10809:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10804:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11002:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11004:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11004:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11004:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10914:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10907:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10907:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10900:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10900:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10922:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10929:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10997:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10925:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10925:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10919:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10919:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10896:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10896:105:6"
															},
															"nodeType": "YulIf",
															"src": "10893:131:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11034:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11049:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11052:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11045:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11045:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11034:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10743:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10746:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10752:7:6",
														"type": ""
													}
												],
												"src": "10712:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11119:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11129:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11140:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11129:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11101:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11111:7:6",
														"type": ""
													}
												],
												"src": "11066:85:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11225:90:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11235:74:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11301:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "11275:25:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11275:32:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "11266:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11266:42:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11248:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11248:61:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11235:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11205:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11215:9:6",
														"type": ""
													}
												],
												"src": "11157:158:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11394:74:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11411:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11455:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11416:38:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11416:45:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11404:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11404:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11404:58:6"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11382:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11389:3:6",
														"type": ""
													}
												],
												"src": "11321:147:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11608:214:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11618:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11630:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11641:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11626:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11626:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11618:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11698:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11711:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11722:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11707:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11707:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11654:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11654:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11654:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11787:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11800:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11811:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11796:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11796:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11735:51:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11735:80:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11735:80:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11572:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11584:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11592:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11603:4:6",
														"type": ""
													}
												],
												"src": "11474:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11954:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11964:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11976:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11987:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11972:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11964:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12044:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12057:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12068:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12053:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12053:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12000:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12000:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12000:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12125:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12138:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12149:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12134:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12134:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12081:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12081:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12081:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11918:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11930:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11938:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11949:4:6",
														"type": ""
													}
												],
												"src": "11828:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12308:222:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12318:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12330:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12341:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12326:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12326:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12318:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12419:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12354:51:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12354:79:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12354:79:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12495:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12508:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12519:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12504:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12504:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12443:51:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12443:80:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12443:80:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12272:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12284:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12292:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12303:4:6",
														"type": ""
													}
												],
												"src": "12166:364:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12642:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12664:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12672:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12660:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12660:14:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12676:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12653:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12653:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12653:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12634:6:6",
														"type": ""
													}
												],
												"src": "12536:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12870:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12880:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12946:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12951:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12887:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12887:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12880:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13052:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "12963:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12963:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12963:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13065:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13076:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13081:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13072:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13072:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13065:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12858:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12866:3:6",
														"type": ""
													}
												],
												"src": "12724:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13267:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13277:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13289:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13300:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13285:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13285:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13277:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13324:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13335:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13320:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13320:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13343:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13349:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13339:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13339:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13313:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13313:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13313:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13369:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13503:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13377:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13377:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13369:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13247:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13262:4:6",
														"type": ""
													}
												],
												"src": "13096:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13627:124:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13649:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13657:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13645:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13645:14:6"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13661:34:6",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13638:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13638:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13638:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13717:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13725:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13713:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13713:15:6"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13730:13:6",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13706:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13706:38:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13706:38:6"
														}
													]
												},
												"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13619:6:6",
														"type": ""
													}
												],
												"src": "13521:230:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13903:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13913:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13979:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13984:2:6",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13920:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13920:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13913:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14085:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																	"nodeType": "YulIdentifier",
																	"src": "13996:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13996:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13996:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14098:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14109:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14114:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14105:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14098:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13891:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13899:3:6",
														"type": ""
													}
												],
												"src": "13757:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14300:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14310:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14322:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14333:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14318:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14318:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14310:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14357:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14368:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14353:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14353:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14376:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14382:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14372:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14372:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14346:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14346:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14402:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14536:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14410:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14410:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14402:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14280:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14295:4:6",
														"type": ""
													}
												],
												"src": "14129:419:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619(memPtr) {\n\n        mstore(add(memPtr, 0), \"too many\")\n\n    }\n\n    function abi_encode_t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is alrea\")\n\n        mstore(add(memPtr, 32), \"dy initialized\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1_t_rational_0_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initializable: contract is not i\")\n\n        mstore(add(memPtr, 32), \"nitializing\")\n\n    }\n\n    function abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101235760003560e01c8063c0c53b8b116100a0578063f053dc5c11610064578063f053dc5c14610394578063f2fde38b146103bf578063f4359ce5146103e8578063f4f3b20014610413578063f76541761461043c5761012a565b8063c0c53b8b146102d5578063ce08baa7146102fe578063d3ce9ab314610329578063de3b8b1214610352578063de74d499146103695761012a565b80638d72647e116100e75780638d72647e146102005780638da5cb5b1461022b57806399093a3314610256578063aaf5eb6814610281578063b19337a4146102ac5761012a565b80630b78f9c01461012f5780632a9e63c614610158578063351ad5e814610181578063715018a6146101be578063722713f7146101d55761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190611555565b610453565b005b34801561016457600080fd5b5061017f600480360381019061017a91906115f3565b6104c1565b005b34801561018d57600080fd5b506101a860048036038101906101a391906115f3565b610546565b6040516101b5919061163b565b60405180910390f35b3480156101ca57600080fd5b506101d3610566565b005b3480156101e157600080fd5b506101ea61057a565b6040516101f79190611665565b60405180910390f35b34801561020c57600080fd5b5061021561061d565b604051610222919061168f565b60405180910390f35b34801561023757600080fd5b50610240610643565b60405161024d919061168f565b60405180910390f35b34801561026257600080fd5b5061026b61066d565b6040516102789190611665565b60405180910390f35b34801561028d57600080fd5b50610296610673565b6040516102a39190611665565b60405180910390f35b3480156102b857600080fd5b506102d360048036038101906102ce91906115f3565b610679565b005b3480156102e157600080fd5b506102fc60048036038101906102f791906116aa565b6106fe565b005b34801561030a57600080fd5b50610313610914565b604051610320919061168f565b60405180910390f35b34801561033557600080fd5b50610350600480360381019061034b9190611729565b61093a565b005b34801561035e57600080fd5b5061036761099d565b005b34801561037557600080fd5b5061037e610a3a565b60405161038b9190611665565b60405180910390f35b3480156103a057600080fd5b506103a9610a40565b6040516103b6919061168f565b60405180910390f35b3480156103cb57600080fd5b506103e660048036038101906103e191906115f3565b610a66565b005b3480156103f457600080fd5b506103fd610ae9565b60405161040a9190611665565b60405180910390f35b34801561041f57600080fd5b5061043a600480360381019061043591906115f3565b610af0565b005b34801561044857600080fd5b50610451610c32565b005b61045b611262565b6103e860665460655461046e9190611798565b11156104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a69061184b565b60405180910390fd5b81606581905550806066819055505050565b6104c9611262565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361050257600080fd5b80606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606a6020528060005260406000206000915054906101000a900460ff1681565b61056e611262565b61057860006112e0565b565b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105d7919061168f565b602060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190611880565b905090565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60665481565b6103e881565b610681611262565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ba57600080fd5b80606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060019054906101000a900460ff1615905080801561072f5750600160008054906101000a900460ff1660ff16105b8061075c575061073e306113a6565b15801561075b5750600160008054906101000a900460ff1660ff16145b5b61079b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107929061191f565b60405180910390fd5b60016000806101000a81548160ff021916908360ff16021790555080156107d8576001600060016101000a81548160ff0219169083151502179055505b6107e06113c9565b83606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081606960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061014d60658190555061029b606681905550801561090e5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516109059190611991565b60405180910390a15b50505050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610942611262565b80606a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6109a5610643565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610a275750606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610a3057600080fd5b610a38611422565b565b60655481565b606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a6e611262565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad490611a1e565b60405180910390fd5b610ae6816112e0565b50565b62093a8081565b610af8611262565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b3157600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b6c919061168f565b602060405180830381865afa158015610b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bad9190611880565b90508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610bea929190611a3e565b6020604051808303816000875af1158015610c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2d9190611a7c565b505050565b610c3a610643565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610cbc5750606a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610cc557600080fd5b610ccd611422565b6000610cd761057a565b9050600080600062093a808042610cee9190611ad8565b610cf89190611b09565b90506103e884111561122057600073ffffffffffffffffffffffffffffffffffffffff16606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f3f576103e860655485610d6b9190611b09565b610d759190611ad8565b9250606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b8152600401610df6929190611a3e565b6020604051808303816000875af1158015610e15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e399190611a7c565b50606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d294f0936040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610ea457600080fd5b505af1158015610eb8573d6000803e3d6000fd5b50505050606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638119c0656040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f2657600080fd5b505af1158015610f3a573d6000803e3d6000fd5b505050505b600073ffffffffffffffffffffffffffffffffffffffff16606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111e1576103e860665485610fa69190611b09565b610fb09190611ad8565b915081610fbb61057a565b1015610fcc57610fc961057a565b91505b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660006040518363ffffffff1660e01b815260040161104c929190611b9e565b6020604051808303816000875af115801561106b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108f9190611a7c565b50606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b815260040161110f929190611a3e565b6020604051808303816000875af115801561112e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111529190611a7c565b50606960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25836040518263ffffffff1660e01b81526004016111ae9190611665565b600060405180830381600087803b1580156111c857600080fd5b505af11580156111dc573d6000803e3d6000fd5b505050505b807fcf0974dfd867840133a0d4b02f1672f24017796fb8892d1e0d587692e4da90ab8484604051611213929190611bc7565b60405180910390a261125c565b807fcf0974dfd867840133a0d4b02f1672f24017796fb8892d1e0d587692e4da90ab600080604051611253929190611bf0565b60405180910390a25b50505050565b61126a6114b1565b73ffffffffffffffffffffffffffffffffffffffff16611288610643565b73ffffffffffffffffffffffffffffffffffffffff16146112de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d590611c65565b60405180910390fd5b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16611418576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161140f90611cf7565b60405180910390fd5b6114206114b9565b565b60004711156114af57606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0476040518263ffffffff1660e01b81526004016000604051808303818588803b15801561149557600080fd5b505af11580156114a9573d6000803e3d6000fd5b50505050505b565b600033905090565b600060019054906101000a900460ff16611508576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ff90611cf7565b60405180910390fd5b6115186115136114b1565b6112e0565b565b600080fd5b6000819050919050565b6115328161151f565b811461153d57600080fd5b50565b60008135905061154f81611529565b92915050565b6000806040838503121561156c5761156b61151a565b5b600061157a85828601611540565b925050602061158b85828601611540565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115c082611595565b9050919050565b6115d0816115b5565b81146115db57600080fd5b50565b6000813590506115ed816115c7565b92915050565b6000602082840312156116095761160861151a565b5b6000611617848285016115de565b91505092915050565b60008115159050919050565b61163581611620565b82525050565b6000602082019050611650600083018461162c565b92915050565b61165f8161151f565b82525050565b600060208201905061167a6000830184611656565b92915050565b611689816115b5565b82525050565b60006020820190506116a46000830184611680565b92915050565b6000806000606084860312156116c3576116c261151a565b5b60006116d1868287016115de565b93505060206116e2868287016115de565b92505060406116f3868287016115de565b9150509250925092565b61170681611620565b811461171157600080fd5b50565b600081359050611723816116fd565b92915050565b600080604083850312156117405761173f61151a565b5b600061174e858286016115de565b925050602061175f85828601611714565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117a38261151f565b91506117ae8361151f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117e3576117e2611769565b5b828201905092915050565b600082825260208201905092915050565b7f746f6f206d616e79000000000000000000000000000000000000000000000000600082015250565b60006118356008836117ee565b9150611840826117ff565b602082019050919050565b6000602082019050818103600083015261186481611828565b9050919050565b60008151905061187a81611529565b92915050565b6000602082840312156118965761189561151a565b5b60006118a48482850161186b565b91505092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611909602e836117ee565b9150611914826118ad565b604082019050919050565b60006020820190508181036000830152611938816118fc565b9050919050565b6000819050919050565b600060ff82169050919050565b6000819050919050565b600061197b6119766119718461193f565b611956565b611949565b9050919050565b61198b81611960565b82525050565b60006020820190506119a66000830184611982565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a086026836117ee565b9150611a13826119ac565b604082019050919050565b60006020820190508181036000830152611a37816119fb565b9050919050565b6000604082019050611a536000830185611680565b611a606020830184611656565b9392505050565b600081519050611a76816116fd565b92915050565b600060208284031215611a9257611a9161151a565b5b6000611aa084828501611a67565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ae38261151f565b9150611aee8361151f565b925082611afe57611afd611aa9565b5b828204905092915050565b6000611b148261151f565b9150611b1f8361151f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b5857611b57611769565b5b828202905092915050565b6000819050919050565b6000611b88611b83611b7e84611b63565b611956565b61151f565b9050919050565b611b9881611b6d565b82525050565b6000604082019050611bb36000830185611680565b611bc06020830184611b8f565b9392505050565b6000604082019050611bdc6000830185611656565b611be96020830184611656565b9392505050565b6000604082019050611c056000830185611b8f565b611c126020830184611b8f565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611c4f6020836117ee565b9150611c5a82611c19565b602082019050919050565b60006020820190508181036000830152611c7e81611c42565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b6000611ce1602b836117ee565b9150611cec82611c85565b604082019050919050565b60006020820190508181036000830152611d1081611cd4565b905091905056fea2646970667358221220545ce4084d0594998deca282e9152f0ddc54300ca022a1a4c942ae544c917d3a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x123 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0C53B8B GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF053DC5C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF053DC5C EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xF4359CE5 EQ PUSH2 0x3E8 JUMPI DUP1 PUSH4 0xF4F3B200 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF7654176 EQ PUSH2 0x43C JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xCE08BAA7 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xD3CE9AB3 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xDE3B8B12 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xDE74D499 EQ PUSH2 0x369 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x8D72647E GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x8D72647E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x99093A33 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xAAF5EB68 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xB19337A4 EQ PUSH2 0x2AC JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0xB78F9C0 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x2A9E63C6 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x351AD5E8 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x1D5 JUMPI PUSH2 0x12A JUMP JUMPDEST CALLDATASIZE PUSH2 0x12A JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1555 JUMP JUMPDEST PUSH2 0x453 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x4C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x566 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26B PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x296 PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x335 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1729 JUMP JUMPDEST PUSH2 0x93A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0x99D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37E PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B6 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E1 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0xA66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x15F3 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x451 PUSH2 0xC32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45B PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x66 SLOAD PUSH1 0x65 SLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1798 JUMP JUMPDEST GT ISZERO PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A6 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x65 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x66 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x69 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6A PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x56E PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x578 PUSH1 0x0 PUSH2 0x12E0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x618 SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x66 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x681 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x68 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 DUP1 ISZERO PUSH2 0x72F JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND LT JUMPDEST DUP1 PUSH2 0x75C JUMPI POP PUSH2 0x73E ADDRESS PUSH2 0x13A6 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ JUMPDEST JUMPDEST PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x191F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x7E0 PUSH2 0x13C9 JUMP JUMPDEST DUP4 PUSH1 0x67 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x68 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x69 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x14D PUSH1 0x65 DUP2 SWAP1 SSTORE POP PUSH2 0x29B PUSH1 0x66 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x90E JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x905 SWAP2 SWAP1 PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x942 PUSH2 0x1262 JUMP JUMPDEST DUP1 PUSH1 0x6A PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0x643 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xA27 JUMPI POP PUSH1 0x6A PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA38 PUSH2 0x1422 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA6E PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0x12E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST SWAP1 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEA SWAP3 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC3A PUSH2 0x643 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xCBC JUMPI POP PUSH1 0x6A PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xCC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCCD PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD7 PUSH2 0x57A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x93A80 DUP1 TIMESTAMP PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 DUP5 GT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3F JUMPI PUSH2 0x3E8 PUSH1 0x65 SLOAD DUP6 PUSH2 0xD6B SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH2 0xD75 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST SWAP3 POP PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF6 SWAP3 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE15 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE39 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST POP PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD294F093 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x68 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8119C065 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E1 JUMPI PUSH2 0x3E8 PUSH1 0x66 SLOAD DUP6 PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH2 0xFB0 SWAP2 SWAP1 PUSH2 0x1AD8 JUMP JUMPDEST SWAP2 POP DUP2 PUSH2 0xFBB PUSH2 0x57A JUMP JUMPDEST LT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFC9 PUSH2 0x57A JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104C SWAP3 SWAP2 SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108F SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST POP PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110F SWAP3 SWAP2 SWAP1 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x112E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1152 SWAP2 SWAP1 PUSH2 0x1A7C JUMP JUMPDEST POP PUSH1 0x69 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6B55F25 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 PUSH32 0xCF0974DFD867840133A0D4B02F1672F24017796FB8892D1E0D587692E4DA90AB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1213 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x125C JUMP JUMPDEST DUP1 PUSH32 0xCF0974DFD867840133A0D4B02F1672F24017796FB8892D1E0D587692E4DA90AB PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD PUSH2 0x1253 SWAP3 SWAP2 SWAP1 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x126A PUSH2 0x14B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1288 PUSH2 0x643 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D5 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1418 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x140F SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1420 PUSH2 0x14B9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT ISZERO PUSH2 0x14AF JUMPI PUSH1 0x67 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD0E30DB0 SELFBALANCE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1508 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FF SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1518 PUSH2 0x1513 PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0x12E0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1532 DUP2 PUSH2 0x151F JUMP JUMPDEST DUP2 EQ PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x154F DUP2 PUSH2 0x1529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x156C JUMPI PUSH2 0x156B PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x157A DUP6 DUP3 DUP7 ADD PUSH2 0x1540 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x158B DUP6 DUP3 DUP7 ADD PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C0 DUP3 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D0 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x15DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15ED DUP2 PUSH2 0x15C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1609 JUMPI PUSH2 0x1608 PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1617 DUP5 DUP3 DUP6 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1635 DUP2 PUSH2 0x1620 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1650 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x162C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x165F DUP2 PUSH2 0x151F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1656 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1689 DUP2 PUSH2 0x15B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1680 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16C3 JUMPI PUSH2 0x16C2 PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16D1 DUP7 DUP3 DUP8 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16E2 DUP7 DUP3 DUP8 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16F3 DUP7 DUP3 DUP8 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1706 DUP2 PUSH2 0x1620 JUMP JUMPDEST DUP2 EQ PUSH2 0x1711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1723 DUP2 PUSH2 0x16FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1740 JUMPI PUSH2 0x173F PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x174E DUP6 DUP3 DUP7 ADD PUSH2 0x15DE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x175F DUP6 DUP3 DUP7 ADD PUSH2 0x1714 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP3 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP PUSH2 0x17AE DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x17E3 JUMPI PUSH2 0x17E2 PUSH2 0x1769 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6F206D616E79000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1835 PUSH1 0x8 DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1840 DUP3 PUSH2 0x17FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1864 DUP2 PUSH2 0x1828 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x187A DUP2 PUSH2 0x1529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1896 JUMPI PUSH2 0x1895 PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18A4 DUP5 DUP3 DUP6 ADD PUSH2 0x186B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1909 PUSH1 0x2E DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1914 DUP3 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1938 DUP2 PUSH2 0x18FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197B PUSH2 0x1976 PUSH2 0x1971 DUP5 PUSH2 0x193F JUMP JUMPDEST PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x1949 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x198B DUP2 PUSH2 0x1960 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1982 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A08 PUSH1 0x26 DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1A13 DUP3 PUSH2 0x19AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A37 DUP2 PUSH2 0x19FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A53 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x1A60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1656 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A76 DUP2 PUSH2 0x16FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A92 JUMPI PUSH2 0x1A91 PUSH2 0x151A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AA0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1AE3 DUP3 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP PUSH2 0x1AEE DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1AFE JUMPI PUSH2 0x1AFD PUSH2 0x1AA9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B14 DUP3 PUSH2 0x151F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP4 PUSH2 0x151F JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B58 JUMPI PUSH2 0x1B57 PUSH2 0x1769 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B88 PUSH2 0x1B83 PUSH2 0x1B7E DUP5 PUSH2 0x1B63 JUMP JUMPDEST PUSH2 0x1956 JUMP JUMPDEST PUSH2 0x151F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B98 DUP2 PUSH2 0x1B6D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BB3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x1BC0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BDC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1656 JUMP JUMPDEST PUSH2 0x1BE9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1656 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C05 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x1C12 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B8F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4F PUSH1 0x20 DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5A DUP3 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7E DUP2 PUSH2 0x1C42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E697469616C697A696E67000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE1 PUSH1 0x2B DUP4 PUSH2 0x17EE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEC DUP3 PUSH2 0x1C85 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D10 DUP2 PUSH2 0x1CD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0x5C 0xE4 ADDMOD 0x4D SDIV SWAP5 SWAP10 DUP14 0xEC LOG2 DUP3 0xE9 ISZERO 0x2F 0xD 0xDC SLOAD ADDRESS 0xC LOG0 0x22 LOG1 LOG4 0xC9 TIMESTAMP 0xAE SLOAD 0x4C SWAP2 PUSH30 0x3A64736F6C634300080D0033000000000000000000000000000000000000 ",
							"sourceMap": "458:3745:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3912:253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3376:131;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;777:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2071:101:0;;;;;;;;;;;;;:::i;:::-;;3107:107:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:19;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1441:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;639:27:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3220:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1045:518;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;708:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3513:115;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1569:77;;;;;;;;;;;;;:::i;:::-;;606:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;745:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2321:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;560:40:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3679:227;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1814:1287;;;;;;;;;;;;;:::i;:::-;;3912:253;1334:13:0;:11;:13::i;:::-;550:4:4::1;4036:12;;4021;;:27;;;;:::i;:::-;:40;;4013:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4099:16;4084:12;:31;;;;4140:18;4125:12;:33;;;;3912:253:::0;;:::o;3376:131::-;1334:13:0;:11;:13::i;:::-;3469:1:4::1;3451:20;;:6;:20;;::::0;3443:29:::1;;;::::0;::::1;;3494:6;3482:9;;:18;;;;;;;;;;;;;;;;;;3376:131:::0;:::o;777:40::-;;;;;;;;;;;;;;;;;;;;;;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;3107:107:4:-;3148:4;3177;;;;;;;;;;;3170:22;;;3201:4;3170:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3163:44;;3107:107;:::o;678:19::-;;;;;;;;;;;;;:::o;1441:85:0:-;1487:7;1513:6;;;;;;;;;;;1506:13;;1441:85;:::o;639:27:4:-;;;;:::o;514:40::-;550:4;514:40;:::o;3220:150::-;1334:13:0;:11;:13::i;:::-;3321:1:4::1;3299:24;;:10;:24;;::::0;3291:33:::1;;;::::0;::::1;;3353:10;3334:16;;:29;;;;;;;;;;;;;;;;;;3220:150:::0;:::o;1045:518::-;3268:19:1;3291:13;;;;;;;;;;;3290:14;3268:36;;3336:14;:34;;;;;3369:1;3354:12;;;;;;;;;;:16;;;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;;3441:1;3425:12;;;;;;;;;;:17;;;3376:66;3335:108;3314:201;;;;;;;;;;;;:::i;:::-;;;;;;;;;3540:1;3525:12;;:16;;;;;;;;;;;;;;;;;;3555:14;3551:65;;;3601:4;3585:13;;:20;;;;;;;;;;;;;;;;;;3551:65;1157:16:4::1;:14;:16::i;:::-;1411:5;1404:4;;:12;;;;;;;;;;;;;;;;;;1445:17;1426:16;;:36;;;;;;;;;;;;;;;;;;1484:10;1472:9;;:22;;;;;;;;;;;;;;;;;;1524:3;1509:12;:18;;;;1552:3;1537:12;:18;;;;3640:14:1::0;3636:99;;;3686:5;3670:13;;:21;;;;;;;;;;;;;;;;;;3710:14;3722:1;3710:14;;;;;;:::i;:::-;;;;;;;;3636:99;3258:483;1045:518:4;;;:::o;708:31::-;;;;;;;;;;;;;:::o;3513:115::-;1334:13:0;:11;:13::i;:::-;3616:5:4::1;3594:8;:19;3603:9;3594:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3513:115:::0;;:::o;1569:77::-;967:7;:5;:7::i;:::-;953:21;;:10;:21;;;:45;;;;978:8;:20;987:10;978:20;;;;;;;;;;;;;;;;;;;;;;;;;953:45;945:54;;;;;;1623:16:::1;:14;:16::i;:::-;1569:77::o:0;606:27::-;;;;:::o;745:24::-;;;;;;;;;;;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;2429:1:::1;2409:22;;:8;:22;;::::0;2401:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2484:28;2503:8;2484:18;:28::i;:::-;2321:198:::0;:::o;560:40:4:-;591:9;560:40;:::o;3679:227::-;1334:13:0;:11;:13::i;:::-;3773:1:4::1;3755:20;;:6;:20;;::::0;3747:29:::1;;;::::0;::::1;;3786:16;3812:6;3805:24;;;3838:4;3805:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3786:58;;3861:6;3854:23;;;3878:10;3890:8;3854:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3737:169;3679:227:::0;:::o;1814:1287::-;967:7;:5;:7::i;:::-;953:21;;:10;:21;;;:45;;;;978:8;:20;987:10;978:20;;;;;;;;;;;;;;;;;;;;;;;;;953:45;945:54;;;;;;1918:16:::1;:14;:16::i;:::-;1945:15;1963:11;:9;:11::i;:::-;1945:29;;1984:21;2019:23:::0;2056:17:::1;591:9;::::0;2076:15:::1;:22;;;;:::i;:::-;:29;;;;:::i;:::-;2056:49;;2128:4;2118:7;:14;2115:975;;;2178:1;2150:30;;:16;;;;;;;;;;;:30;;;2147:320;;550:4;2225:12;;2215:7;:22;;;;:::i;:::-;:34;;;;:::i;:::-;2199:50;;2274:4;;;;;;;;;;;2267:21;;;2289:16;;;;;;;;;;;2307:13;2267:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2360:16;;;;;;;;;;;2339:48;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2428:16;;;;;;;;;;;2407:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2147:320;2505:1;2484:23;;:9;;;;;;;;;;;:23;;;2481:471;;550:4;2554:12;;2544:7;:22;;;;:::i;:::-;:34;;;;:::i;:::-;2526:52;;2670:15;2656:11;:9;:11::i;:::-;:29;2653:103;;;2726:11;:9;:11::i;:::-;2708:29;;2653:103;2780:4;;;;;;;;;;;2773:20;;;2794:9;;;;;;;;;;;2805:1;2773:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2832:4;;;;;;;;;;;2825:20;;;2846:9;;;;;;;;;;;2857:15;2825:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2902:9;;;;;;;;;;;2891:29;;;2921:15;2891:46;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2481:471;2979:9;2973:48;2990:13;3005:15;2973:48;;;;;;;:::i;:::-;;;;;;;;2115:975;;;3063:9;3057:22;3074:1;3077::::0;3057:22:::1;;;;;;;:::i;:::-;;;;;;;;2115:975;1850:1251;;;;1814:1287::o:0;1599:130:0:-;1673:12;:10;:12::i;:::-;1662:23;;:7;:5;:7::i;:::-;:23;;;1654:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1599:130::o;2673:187::-;2746:16;2765:6;;;;;;;;;;;2746:25;;2790:8;2781:6;;:17;;;;;;;;;;;;;;;;;;2844:8;2813:40;;2834:8;2813:40;;;;;;;;;;;;2736:124;2673:187;:::o;1186:320:2:-;1246:4;1498:1;1476:7;:19;;;:23;1469:30;;1186:320;;;:::o;1003:95:0:-;5363:13:1;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1065:26:0::1;:24;:26::i;:::-;1003:95::o:0;1652:156:4:-;1724:1;1700:21;:25;1697:105;;;1746:4;;;;;;;;;;;1740:19;;;1767:21;1740:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:105;1652:156::o;850:96:3:-;903:7;929:10;922:17;;850:96;:::o;1104:111:0:-;5363:13:1;;;;;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1176:32:0::1;1195:12;:10;:12::i;:::-;1176:18;:32::i;:::-;1104:111::o:0;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:474::-;758:6;766;815:2;803:9;794:7;790:23;786:32;783:119;;;821:79;;:::i;:::-;783:119;941:1;966:53;1011:7;1002:6;991:9;987:22;966:53;:::i;:::-;956:63;;912:117;1068:2;1094:53;1139:7;1130:6;1119:9;1115:22;1094:53;:::i;:::-;1084:63;;1039:118;690:474;;;;;:::o;1170:126::-;1207:7;1247:42;1240:5;1236:54;1225:65;;1170:126;;;:::o;1302:96::-;1339:7;1368:24;1386:5;1368:24;:::i;:::-;1357:35;;1302:96;;;:::o;1404:122::-;1477:24;1495:5;1477:24;:::i;:::-;1470:5;1467:35;1457:63;;1516:1;1513;1506:12;1457:63;1404:122;:::o;1532:139::-;1578:5;1616:6;1603:20;1594:29;;1632:33;1659:5;1632:33;:::i;:::-;1532:139;;;;:::o;1677:329::-;1736:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:119;;;1791:79;;:::i;:::-;1753:119;1911:1;1936:53;1981:7;1972:6;1961:9;1957:22;1936:53;:::i;:::-;1926:63;;1882:117;1677:329;;;;:::o;2012:90::-;2046:7;2089:5;2082:13;2075:21;2064:32;;2012:90;;;:::o;2108:109::-;2189:21;2204:5;2189:21;:::i;:::-;2184:3;2177:34;2108:109;;:::o;2223:210::-;2310:4;2348:2;2337:9;2333:18;2325:26;;2361:65;2423:1;2412:9;2408:17;2399:6;2361:65;:::i;:::-;2223:210;;;;:::o;2439:118::-;2526:24;2544:5;2526:24;:::i;:::-;2521:3;2514:37;2439:118;;:::o;2563:222::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2707:71;2775:1;2764:9;2760:17;2751:6;2707:71;:::i;:::-;2563:222;;;;:::o;2791:118::-;2878:24;2896:5;2878:24;:::i;:::-;2873:3;2866:37;2791:118;;:::o;2915:222::-;3008:4;3046:2;3035:9;3031:18;3023:26;;3059:71;3127:1;3116:9;3112:17;3103:6;3059:71;:::i;:::-;2915:222;;;;:::o;3143:619::-;3220:6;3228;3236;3285:2;3273:9;3264:7;3260:23;3256:32;3253:119;;;3291:79;;:::i;:::-;3253:119;3411:1;3436:53;3481:7;3472:6;3461:9;3457:22;3436:53;:::i;:::-;3426:63;;3382:117;3538:2;3564:53;3609:7;3600:6;3589:9;3585:22;3564:53;:::i;:::-;3554:63;;3509:118;3666:2;3692:53;3737:7;3728:6;3717:9;3713:22;3692:53;:::i;:::-;3682:63;;3637:118;3143:619;;;;;:::o;3768:116::-;3838:21;3853:5;3838:21;:::i;:::-;3831:5;3828:32;3818:60;;3874:1;3871;3864:12;3818:60;3768:116;:::o;3890:133::-;3933:5;3971:6;3958:20;3949:29;;3987:30;4011:5;3987:30;:::i;:::-;3890:133;;;;:::o;4029:468::-;4094:6;4102;4151:2;4139:9;4130:7;4126:23;4122:32;4119:119;;;4157:79;;:::i;:::-;4119:119;4277:1;4302:53;4347:7;4338:6;4327:9;4323:22;4302:53;:::i;:::-;4292:63;;4248:117;4404:2;4430:50;4472:7;4463:6;4452:9;4448:22;4430:50;:::i;:::-;4420:60;;4375:115;4029:468;;;;;:::o;4503:180::-;4551:77;4548:1;4541:88;4648:4;4645:1;4638:15;4672:4;4669:1;4662:15;4689:305;4729:3;4748:20;4766:1;4748:20;:::i;:::-;4743:25;;4782:20;4800:1;4782:20;:::i;:::-;4777:25;;4936:1;4868:66;4864:74;4861:1;4858:81;4855:107;;;4942:18;;:::i;:::-;4855:107;4986:1;4983;4979:9;4972:16;;4689:305;;;;:::o;5000:169::-;5084:11;5118:6;5113:3;5106:19;5158:4;5153:3;5149:14;5134:29;;5000:169;;;;:::o;5175:158::-;5315:10;5311:1;5303:6;5299:14;5292:34;5175:158;:::o;5339:365::-;5481:3;5502:66;5566:1;5561:3;5502:66;:::i;:::-;5495:73;;5577:93;5666:3;5577:93;:::i;:::-;5695:2;5690:3;5686:12;5679:19;;5339:365;;;:::o;5710:419::-;5876:4;5914:2;5903:9;5899:18;5891:26;;5963:9;5957:4;5953:20;5949:1;5938:9;5934:17;5927:47;5991:131;6117:4;5991:131;:::i;:::-;5983:139;;5710:419;;;:::o;6135:143::-;6192:5;6223:6;6217:13;6208:22;;6239:33;6266:5;6239:33;:::i;:::-;6135:143;;;;:::o;6284:351::-;6354:6;6403:2;6391:9;6382:7;6378:23;6374:32;6371:119;;;6409:79;;:::i;:::-;6371:119;6529:1;6554:64;6610:7;6601:6;6590:9;6586:22;6554:64;:::i;:::-;6544:74;;6500:128;6284:351;;;;:::o;6641:233::-;6781:34;6777:1;6769:6;6765:14;6758:58;6850:16;6845:2;6837:6;6833:15;6826:41;6641:233;:::o;6880:366::-;7022:3;7043:67;7107:2;7102:3;7043:67;:::i;:::-;7036:74;;7119:93;7208:3;7119:93;:::i;:::-;7237:2;7232:3;7228:12;7221:19;;6880:366;;;:::o;7252:419::-;7418:4;7456:2;7445:9;7441:18;7433:26;;7505:9;7499:4;7495:20;7491:1;7480:9;7476:17;7469:47;7533:131;7659:4;7533:131;:::i;:::-;7525:139;;7252:419;;;:::o;7677:85::-;7722:7;7751:5;7740:16;;7677:85;;;:::o;7768:86::-;7803:7;7843:4;7836:5;7832:16;7821:27;;7768:86;;;:::o;7860:60::-;7888:3;7909:5;7902:12;;7860:60;;;:::o;7926:154::-;7982:9;8015:59;8031:42;8040:32;8066:5;8040:32;:::i;:::-;8031:42;:::i;:::-;8015:59;:::i;:::-;8002:72;;7926:154;;;:::o;8086:143::-;8179:43;8216:5;8179:43;:::i;:::-;8174:3;8167:56;8086:143;;:::o;8235:234::-;8334:4;8372:2;8361:9;8357:18;8349:26;;8385:77;8459:1;8448:9;8444:17;8435:6;8385:77;:::i;:::-;8235:234;;;;:::o;8475:225::-;8615:34;8611:1;8603:6;8599:14;8592:58;8684:8;8679:2;8671:6;8667:15;8660:33;8475:225;:::o;8706:366::-;8848:3;8869:67;8933:2;8928:3;8869:67;:::i;:::-;8862:74;;8945:93;9034:3;8945:93;:::i;:::-;9063:2;9058:3;9054:12;9047:19;;8706:366;;;:::o;9078:419::-;9244:4;9282:2;9271:9;9267:18;9259:26;;9331:9;9325:4;9321:20;9317:1;9306:9;9302:17;9295:47;9359:131;9485:4;9359:131;:::i;:::-;9351:139;;9078:419;;;:::o;9503:332::-;9624:4;9662:2;9651:9;9647:18;9639:26;;9675:71;9743:1;9732:9;9728:17;9719:6;9675:71;:::i;:::-;9756:72;9824:2;9813:9;9809:18;9800:6;9756:72;:::i;:::-;9503:332;;;;;:::o;9841:137::-;9895:5;9926:6;9920:13;9911:22;;9942:30;9966:5;9942:30;:::i;:::-;9841:137;;;;:::o;9984:345::-;10051:6;10100:2;10088:9;10079:7;10075:23;10071:32;10068:119;;;10106:79;;:::i;:::-;10068:119;10226:1;10251:61;10304:7;10295:6;10284:9;10280:22;10251:61;:::i;:::-;10241:71;;10197:125;9984:345;;;;:::o;10335:180::-;10383:77;10380:1;10373:88;10480:4;10477:1;10470:15;10504:4;10501:1;10494:15;10521:185;10561:1;10578:20;10596:1;10578:20;:::i;:::-;10573:25;;10612:20;10630:1;10612:20;:::i;:::-;10607:25;;10651:1;10641:35;;10656:18;;:::i;:::-;10641:35;10698:1;10695;10691:9;10686:14;;10521:185;;;;:::o;10712:348::-;10752:7;10775:20;10793:1;10775:20;:::i;:::-;10770:25;;10809:20;10827:1;10809:20;:::i;:::-;10804:25;;10997:1;10929:66;10925:74;10922:1;10919:81;10914:1;10907:9;10900:17;10896:105;10893:131;;;11004:18;;:::i;:::-;10893:131;11052:1;11049;11045:9;11034:20;;10712:348;;;;:::o;11066:85::-;11111:7;11140:5;11129:16;;11066:85;;;:::o;11157:158::-;11215:9;11248:61;11266:42;11275:32;11301:5;11275:32;:::i;:::-;11266:42;:::i;:::-;11248:61;:::i;:::-;11235:74;;11157:158;;;:::o;11321:147::-;11416:45;11455:5;11416:45;:::i;:::-;11411:3;11404:58;11321:147;;:::o;11474:348::-;11603:4;11641:2;11630:9;11626:18;11618:26;;11654:71;11722:1;11711:9;11707:17;11698:6;11654:71;:::i;:::-;11735:80;11811:2;11800:9;11796:18;11787:6;11735:80;:::i;:::-;11474:348;;;;;:::o;11828:332::-;11949:4;11987:2;11976:9;11972:18;11964:26;;12000:71;12068:1;12057:9;12053:17;12044:6;12000:71;:::i;:::-;12081:72;12149:2;12138:9;12134:18;12125:6;12081:72;:::i;:::-;11828:332;;;;;:::o;12166:364::-;12303:4;12341:2;12330:9;12326:18;12318:26;;12354:79;12430:1;12419:9;12415:17;12406:6;12354:79;:::i;:::-;12443:80;12519:2;12508:9;12504:18;12495:6;12443:80;:::i;:::-;12166:364;;;;;:::o;12536:182::-;12676:34;12672:1;12664:6;12660:14;12653:58;12536:182;:::o;12724:366::-;12866:3;12887:67;12951:2;12946:3;12887:67;:::i;:::-;12880:74;;12963:93;13052:3;12963:93;:::i;:::-;13081:2;13076:3;13072:12;13065:19;;12724:366;;;:::o;13096:419::-;13262:4;13300:2;13289:9;13285:18;13277:26;;13349:9;13343:4;13339:20;13335:1;13324:9;13320:17;13313:47;13377:131;13503:4;13377:131;:::i;:::-;13369:139;;13096:419;;;:::o;13521:230::-;13661:34;13657:1;13649:6;13645:14;13638:58;13730:13;13725:2;13717:6;13713:15;13706:38;13521:230;:::o;13757:366::-;13899:3;13920:67;13984:2;13979:3;13920:67;:::i;:::-;13913:74;;13996:93;14085:3;13996:93;:::i;:::-;14114:2;14109:3;14105:12;14098:19;;13757:366;;;:::o;14129:419::-;14295:4;14333:2;14322:9;14318:18;14310:26;;14382:9;14376:4;14372:20;14368:1;14357:9;14353:17;14346:47;14410:131;14536:4;14410:131;:::i;:::-;14402:139;;14129:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1500200",
								"executionCost": "1568",
								"totalCost": "1501768"
							},
							"external": {
								"PRECISION()": "418",
								"WEEK()": "395",
								"balanceOf()": "infinite",
								"converterFee()": "2540",
								"initialize(address,address,address)": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "30488",
								"royalties()": "2536",
								"royaltiesFee()": "2496",
								"setConverter(address)": "27132",
								"setFees(uint256,uint256)": "infinite",
								"setRoyalties(address)": "27067",
								"setSplitter(address,bool)": "27322",
								"split()": "infinite",
								"splitter(address)": "2913",
								"stakingConverter()": "2559",
								"swapWBNBToBNB()": "infinite",
								"transferOwnership(address)": "30788",
								"wbnb()": "2537",
								"withdrawERC20(address)": "infinite"
							},
							"internal": {
								"_swapWBNBToBNB()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 458,
									"end": 4203,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1039,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 4203,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220545ce4084d0594998deca282e9152f0ddc54300ca022a1a4c942ae544c917d3a64736f6c634300080d0033",
									".code": [
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "C0C53B8B"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "F053DC5C"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "F053DC5C"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "F4359CE5"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "F4F3B200"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "F7654176"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "C0C53B8B"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "CE08BAA7"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "D3CE9AB3"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "DE3B8B12"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "DE74D499"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "8D72647E"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "8D72647E"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "99093A33"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "AAF5EB68"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "B19337A4"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "B78F9C0"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "2A9E63C6"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "351AD5E8"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "722713F7"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 4203,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 639,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 4036,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4036,
											"end": 4048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4021,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4061,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4021,
											"end": 4061,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4013,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4099,
											"end": 4115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4084,
											"end": 4115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4084,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4084,
											"end": 4115,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4084,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4140,
											"end": 4158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4137,
											"name": "PUSH",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4125,
											"end": 4158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4158,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3912,
											"end": 4165,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3451,
											"end": 3471,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3443,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3376,
											"end": 3507,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "6A"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 777,
											"end": 817,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 777,
											"end": 817,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3148,
											"end": 3152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3177,
											"end": 3181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3192,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3192,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3192,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3201,
											"end": 3205,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3170,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3207,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3214,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 678,
											"end": 697,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 678,
											"end": 697,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1487,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "PUSH",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 639,
											"end": 666,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 639,
											"end": 666,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 514,
											"end": 554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 514,
											"end": 554,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3323,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3291,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3291,
											"end": 3324,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3291,
											"end": 3324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3291,
											"end": 3324,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3291,
											"end": 3324,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3291,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3353,
											"end": 3363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3350,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3334,
											"end": 3350,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3220,
											"end": 3370,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3268,
											"end": 3287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3370,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3354,
											"end": 3370,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3370,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3377,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3441,
											"end": 3442,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3569,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3585,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1157,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 1157,
											"end": 1173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1157,
											"end": 1173,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1157,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1411,
											"end": 1416,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1408,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1404,
											"end": 1408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1445,
											"end": 1462,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1426,
											"end": 1442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1472,
											"end": 1481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "14D"
										},
										{
											"begin": 1509,
											"end": 1521,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1527,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1552,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "29B"
										},
										{
											"begin": 1537,
											"end": 1549,
											"name": "PUSH",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1537,
											"end": 1555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1555,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1555,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3640,
											"end": 3654,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3722,
											"end": 3723,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1045,
											"end": 1563,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 739,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3616,
											"end": 3621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3602,
											"name": "PUSH",
											"source": 4,
											"value": "6A"
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3603,
											"end": 3612,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3628,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 967,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 953,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 953,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 953,
											"end": 974,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 953,
											"end": 998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 953,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 953,
											"end": 998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 953,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 978,
											"end": 986,
											"name": "PUSH",
											"source": 4,
											"value": "6A"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 997,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 953,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 953,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 945,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 945,
											"end": 999,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 945,
											"end": 999,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 999,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 945,
											"end": 999,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 945,
											"end": 999,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 945,
											"end": 999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1623,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1623,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1646,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 606,
											"end": 633,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 606,
											"end": 633,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 769,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 745,
											"end": 769,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "93A80"
										},
										{
											"begin": 560,
											"end": 600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 560,
											"end": 600,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3755,
											"end": 3775,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3747,
											"end": 3776,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3776,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 3776,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3747,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3802,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3818,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3829,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 3838,
											"end": 3842,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3805,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3786,
											"end": 3844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3877,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3854,
											"end": 3877,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3877,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3878,
											"end": 3888,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3906,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 967,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 953,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 953,
											"end": 963,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 953,
											"end": 974,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 974,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 953,
											"end": 974,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 953,
											"end": 998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 953,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 953,
											"end": 998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 953,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 978,
											"end": 986,
											"name": "PUSH",
											"source": 4,
											"value": "6A"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 997,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 978,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 978,
											"end": 998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 953,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 953,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 945,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 945,
											"end": 999,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 945,
											"end": 999,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 999,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 945,
											"end": 999,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 945,
											"end": 999,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 945,
											"end": 999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1918,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1918,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1963,
											"end": 1974,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1963,
											"end": 1974,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1963,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1945,
											"end": 1974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2042,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2073,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "93A80"
										},
										{
											"begin": 591,
											"end": 600,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2091,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2076,
											"end": 2098,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2076,
											"end": 2098,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2076,
											"end": 2098,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2076,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2076,
											"end": 2105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2076,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2076,
											"end": 2105,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2076,
											"end": 2105,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2076,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2056,
											"end": 2105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2128,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 2118,
											"end": 2125,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2132,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2166,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2150,
											"end": 2180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2150,
											"end": 2180,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2147,
											"end": 2467,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 2225,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2225,
											"end": 2237,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2222,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2215,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2215,
											"end": 2249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2215,
											"end": 2249,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2249,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2215,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2199,
											"end": 2249,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2199,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2288,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2288,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2289,
											"end": 2305,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2307,
											"end": 2320,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2376,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2387,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2387,
											"name": "PUSH",
											"source": 4,
											"value": "D294F093"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "PUSH",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2428,
											"end": 2444,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2450,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2450,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2450,
											"name": "PUSH",
											"source": 4,
											"value": "8119C065"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2147,
											"end": 2467,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2147,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2507,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2507,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2484,
											"end": 2507,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2481,
											"end": 2952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 4,
											"value": "3E8"
										},
										{
											"begin": 2554,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2554,
											"end": 2566,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2551,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2544,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2544,
											"end": 2578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2544,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2544,
											"end": 2578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2544,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2526,
											"end": 2578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2656,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2685,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 2726,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2726,
											"end": 2737,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2726,
											"end": 2737,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 2726,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2708,
											"end": 2737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2653,
											"end": 2756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2803,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2805,
											"end": 2806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2832,
											"end": 2836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2845,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2872,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "PUSH",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2902,
											"end": 2911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2891,
											"end": 2920,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "B6B55F25"
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2481,
											"end": 2952,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2481,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "PUSH",
											"source": 4,
											"value": "CF0974DFD867840133A0D4B02F1672F24017796FB8892D1E0D587692E4DA90AB"
										},
										{
											"begin": 2990,
											"end": 3003,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3005,
											"end": 3020,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2973,
											"end": 3021,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "PUSH",
											"source": 4,
											"value": "CF0974DFD867840133A0D4B02F1672F24017796FB8892D1E0D587692E4DA90AB"
										},
										{
											"begin": 3074,
											"end": 3075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3079,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 2115,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 3101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1814,
											"end": 3101,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1673,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1673,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2781,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2834,
											"end": 2842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1246,
											"end": 1250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1483,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1469,
											"end": 1499,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1652,
											"end": 1808,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1652,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1700,
											"end": 1721,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1725,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1802,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 1697,
											"end": 1802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1750,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1759,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1740,
											"end": 1759,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1759,
											"name": "PUSH",
											"source": 4,
											"value": "D0E30DB0"
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 1697,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1652,
											"end": 1808,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 903,
											"end": 910,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 922,
											"end": 939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 850,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 850,
											"end": 946,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1195,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 815,
											"end": 817,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 794,
											"end": 801,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 790,
											"end": 813,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 786,
											"end": 818,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 783,
											"end": 902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 783,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 821,
											"end": 900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 783,
											"end": 902,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 783,
											"end": 902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 941,
											"end": 942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1011,
											"end": 1018,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 991,
											"end": 1000,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 966,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 912,
											"end": 1029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1139,
											"end": 1146,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1094,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1039,
											"end": 1157,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1164,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1289,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1290,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1170,
											"end": 1296,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1339,
											"end": 1346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1386,
											"end": 1391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 1368,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1357,
											"end": 1392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1398,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 1526,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 1404,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 1495,
											"end": 1500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 1477,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1502,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 1457,
											"end": 1520,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1516,
											"end": 1517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1506,
											"end": 1518,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1457,
											"end": 1520,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 1457,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1404,
											"end": 1526,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1578,
											"end": 1583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1622,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1623,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1594,
											"end": 1623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 1659,
											"end": 1664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 1632,
											"end": 1665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1671,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1783,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 1791,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1753,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 1981,
											"end": 1988,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1970,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1926,
											"end": 1989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1882,
											"end": 1999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 2006,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2012,
											"end": 2102,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2012,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2095,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2102,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2102,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2108,
											"end": 2217,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2108,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 2189,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2184,
											"end": 2187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2177,
											"end": 2211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2217,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2223,
											"end": 2433,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2223,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2310,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2350,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2361,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2361,
											"end": 2426,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 2361,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2433,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2433,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2223,
											"end": 2433,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2696,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2903,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3125,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3143,
											"end": 3762,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3143,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3234,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3236,
											"end": 3242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3287,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3260,
											"end": 3283,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3288,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 3291,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 3253,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3411,
											"end": 3412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 3436,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3489,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 3609,
											"end": 3616,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3564,
											"end": 3617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3564,
											"end": 3617,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 3564,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3617,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3617,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3666,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3737,
											"end": 3744,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3728,
											"end": 3734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3726,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3692,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3682,
											"end": 3745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3762,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3143,
											"end": 3762,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3768,
											"end": 3884,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3768,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3853,
											"end": 3858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3838,
											"end": 3859,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3838,
											"end": 3859,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3838,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 3818,
											"end": 3878,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3872,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3876,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3878,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 3818,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3884,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3933,
											"end": 3938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 3978,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3949,
											"end": 3978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 4011,
											"end": 4016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3987,
											"end": 4017,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4017,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 3987,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 4023,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4029,
											"end": 4497,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 4029,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4151,
											"end": 4153,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4154,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4238,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 4119,
											"end": 4238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4238,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 4119,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4277,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4347,
											"end": 4354,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4327,
											"end": 4336,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4323,
											"end": 4345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4302,
											"end": 4355,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4302,
											"end": 4355,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4302,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4355,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4365,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4430,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4472,
											"end": 4479,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4470,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4430,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 4430,
											"end": 4480,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4430,
											"end": 4480,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4430,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4480,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4480,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4497,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4497,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4497,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4503,
											"end": 4683,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4503,
											"end": 4683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4628,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4548,
											"end": 4549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4629,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4676,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4669,
											"end": 4670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4662,
											"end": 4677,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4994,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4689,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4729,
											"end": 4732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 4766,
											"end": 4767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 4748,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 4800,
											"end": 4801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4782,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4782,
											"end": 4802,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4782,
											"end": 4802,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 4782,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4802,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4936,
											"end": 4937,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4868,
											"end": 4934,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4864,
											"end": 4938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4861,
											"end": 4862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4939,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4855,
											"end": 4962,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4855,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 4855,
											"end": 4962,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4855,
											"end": 4962,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 4855,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 4987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 4984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4979,
											"end": 4988,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4972,
											"end": 4988,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4994,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4994,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4994,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5000,
											"end": 5169,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5000,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5116,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5106,
											"end": 5125,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5163,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5169,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5169,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5000,
											"end": 5169,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5175,
											"end": 5333,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5175,
											"end": 5333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH",
											"source": 6,
											"value": "746F6F206D616E79000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5333,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5339,
											"end": 5704,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5339,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5561,
											"end": 5564,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5502,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5502,
											"end": 5568,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5502,
											"end": 5568,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 5502,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5495,
											"end": 5568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 5666,
											"end": 5669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 5577,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5695,
											"end": 5697,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5693,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5686,
											"end": 5698,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5339,
											"end": 5704,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5876,
											"end": 5880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5916,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5903,
											"end": 5912,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5917,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5891,
											"end": 5917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5957,
											"end": 5961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5953,
											"end": 5973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 5950,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5947,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5934,
											"end": 5951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5927,
											"end": 5974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6117,
											"end": 6121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 5991,
											"end": 6122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 6129,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6135,
											"end": 6278,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6135,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6230,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6239,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 6266,
											"end": 6271,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6239,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6239,
											"end": 6272,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6272,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 6239,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6278,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6278,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6278,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6284,
											"end": 6635,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6284,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6354,
											"end": 6360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6391,
											"end": 6400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6389,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 6401,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6374,
											"end": 6406,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6371,
											"end": 6490,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6371,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 6371,
											"end": 6490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 6409,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6409,
											"end": 6488,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6488,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 6409,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6371,
											"end": 6490,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 6371,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6554,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 6610,
											"end": 6617,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6599,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6554,
											"end": 6618,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6554,
											"end": 6618,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 6554,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6544,
											"end": 6618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6544,
											"end": 6618,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6635,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6635,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6635,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6641,
											"end": 6874,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6641,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6781,
											"end": 6815,
											"name": "PUSH",
											"source": 6,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 6777,
											"end": 6778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6765,
											"end": 6779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6758,
											"end": 6816,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6850,
											"end": 6866,
											"name": "PUSH",
											"source": 6,
											"value": "647920696E697469616C697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 6845,
											"end": 6847,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6837,
											"end": 6843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6833,
											"end": 6848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 6867,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6874,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6880,
											"end": 7246,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6880,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7025,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 7107,
											"end": 7109,
											"name": "PUSH",
											"source": 6,
											"value": "2E"
										},
										{
											"begin": 7102,
											"end": 7105,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7043,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 7043,
											"end": 7110,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7043,
											"end": 7110,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 7043,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7036,
											"end": 7110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7119,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 7208,
											"end": 7211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7119,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7119,
											"end": 7212,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7119,
											"end": 7212,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 7119,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7237,
											"end": 7239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7232,
											"end": 7235,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7221,
											"end": 7240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 7246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 7246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 7246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6880,
											"end": 7246,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7418,
											"end": 7422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7456,
											"end": 7458,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7445,
											"end": 7454,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7441,
											"end": 7459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7495,
											"end": 7515,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7492,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7469,
											"end": 7516,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 7659,
											"end": 7663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 7533,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7671,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7677,
											"end": 7762,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7677,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7722,
											"end": 7729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7751,
											"end": 7756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7677,
											"end": 7762,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7768,
											"end": 7854,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 7768,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 7810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7843,
											"end": 7847,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7836,
											"end": 7841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7848,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7768,
											"end": 7854,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7860,
											"end": 7920,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7860,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 7891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7909,
											"end": 7914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 7914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7860,
											"end": 7920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7860,
											"end": 7920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7860,
											"end": 7920,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7860,
											"end": 7920,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7926,
											"end": 8080,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 7926,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8015,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 8031,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 8040,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 8066,
											"end": 8071,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8040,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8040,
											"end": 8072,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8040,
											"end": 8072,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 8040,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8031,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 8031,
											"end": 8073,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8031,
											"end": 8073,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 8031,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 8015,
											"end": 8074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8074,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 8015,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8002,
											"end": 8074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 8080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 8080,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 8080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7926,
											"end": 8080,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8086,
											"end": 8229,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8086,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 8216,
											"end": 8221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 8179,
											"end": 8222,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8179,
											"end": 8222,
											"name": "tag",
											"source": 6,
											"value": "394"
										},
										{
											"begin": 8179,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8174,
											"end": 8177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8167,
											"end": 8223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8086,
											"end": 8229,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8235,
											"end": 8469,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 8235,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8334,
											"end": 8338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8372,
											"end": 8374,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8361,
											"end": 8370,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8385,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 8459,
											"end": 8460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8457,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8435,
											"end": 8441,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8385,
											"end": 8462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8385,
											"end": 8462,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8385,
											"end": 8462,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 8385,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8469,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8235,
											"end": 8469,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8475,
											"end": 8700,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8475,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8615,
											"end": 8649,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8611,
											"end": 8612,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8609,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8599,
											"end": 8613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8592,
											"end": 8650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8684,
											"end": 8692,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8679,
											"end": 8681,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8667,
											"end": 8682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8660,
											"end": 8693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8700,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8706,
											"end": 9072,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8706,
											"end": 9072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 8851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 8933,
											"end": 8935,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 8928,
											"end": 8931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 8869,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8862,
											"end": 8936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 9034,
											"end": 9037,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8945,
											"end": 9038,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8945,
											"end": 9038,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 8945,
											"end": 9038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9063,
											"end": 9065,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9058,
											"end": 9061,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9054,
											"end": 9066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9047,
											"end": 9066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 9072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 9072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 9072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 9072,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9078,
											"end": 9497,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 9078,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9244,
											"end": 9248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9282,
											"end": 9284,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9271,
											"end": 9280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9267,
											"end": 9285,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9259,
											"end": 9285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9259,
											"end": 9285,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9325,
											"end": 9329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9321,
											"end": 9341,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9317,
											"end": 9318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9315,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9295,
											"end": 9342,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9359,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 9485,
											"end": 9489,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9359,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 9359,
											"end": 9490,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9359,
											"end": 9490,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 9359,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9351,
											"end": 9490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9351,
											"end": 9490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9497,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9503,
											"end": 9835,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 9503,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9624,
											"end": 9628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9662,
											"end": 9664,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9651,
											"end": 9660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9647,
											"end": 9665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9639,
											"end": 9665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9675,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 9743,
											"end": 9744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9732,
											"end": 9741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9728,
											"end": 9745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9719,
											"end": 9725,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9675,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9675,
											"end": 9746,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9675,
											"end": 9746,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 9675,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9756,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 9824,
											"end": 9826,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9813,
											"end": 9822,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9827,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9800,
											"end": 9806,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9756,
											"end": 9828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 9756,
											"end": 9828,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9756,
											"end": 9828,
											"name": "tag",
											"source": 6,
											"value": "405"
										},
										{
											"begin": 9756,
											"end": 9828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9835,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9835,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9841,
											"end": 9978,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 9841,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9895,
											"end": 9900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9932,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9920,
											"end": 9933,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9942,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 9966,
											"end": 9971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9942,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 9942,
											"end": 9972,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9942,
											"end": 9972,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 9942,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9978,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9841,
											"end": 9978,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9984,
											"end": 10329,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 9984,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10100,
											"end": 10102,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10088,
											"end": 10097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10086,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10098,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10071,
											"end": 10103,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 10068,
											"end": 10187,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10068,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 10068,
											"end": 10187,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10106,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 10106,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 10106,
											"end": 10185,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10106,
											"end": 10185,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 10106,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10068,
											"end": 10187,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 10068,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10226,
											"end": 10227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 10304,
											"end": 10311,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10295,
											"end": 10301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10284,
											"end": 10293,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10280,
											"end": 10302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10251,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10251,
											"end": 10312,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10251,
											"end": 10312,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 10251,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10329,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10329,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10329,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10329,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10335,
											"end": 10515,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 10335,
											"end": 10515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10383,
											"end": 10460,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10380,
											"end": 10381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10373,
											"end": 10461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10480,
											"end": 10484,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10477,
											"end": 10478,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10470,
											"end": 10485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10508,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10501,
											"end": 10502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10494,
											"end": 10509,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10521,
											"end": 10706,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10521,
											"end": 10706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10561,
											"end": 10562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10578,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 10596,
											"end": 10597,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10578,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10578,
											"end": 10598,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10578,
											"end": 10598,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 10578,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10612,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 10630,
											"end": 10631,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10612,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10612,
											"end": 10632,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10612,
											"end": 10632,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 10612,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10632,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 10641,
											"end": 10676,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10676,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 10641,
											"end": 10676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10698,
											"end": 10699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10691,
											"end": 10700,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10686,
											"end": 10700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10521,
											"end": 10706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10521,
											"end": 10706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10521,
											"end": 10706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10521,
											"end": 10706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10521,
											"end": 10706,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10712,
											"end": 11060,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 10712,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10752,
											"end": 10759,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10775,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 10793,
											"end": 10794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10775,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10775,
											"end": 10795,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10775,
											"end": 10795,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 10775,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10770,
											"end": 10795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10770,
											"end": 10795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 10827,
											"end": 10828,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10809,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10809,
											"end": 10829,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10809,
											"end": 10829,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 10809,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10829,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10997,
											"end": 10998,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10929,
											"end": 10995,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10925,
											"end": 10999,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10919,
											"end": 11000,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10914,
											"end": 10915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10900,
											"end": 10917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10896,
											"end": 11001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10893,
											"end": 11024,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10893,
											"end": 11024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 10893,
											"end": 11024,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11004,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 11004,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 11004,
											"end": 11022,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11004,
											"end": 11022,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 11004,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10893,
											"end": 11024,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 10893,
											"end": 11024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11052,
											"end": 11053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11049,
											"end": 11050,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11045,
											"end": 11054,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11034,
											"end": 11054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11034,
											"end": 11054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10712,
											"end": 11060,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10712,
											"end": 11060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10712,
											"end": 11060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10712,
											"end": 11060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10712,
											"end": 11060,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11111,
											"end": 11118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11129,
											"end": 11145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11129,
											"end": 11145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11066,
											"end": 11151,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11157,
											"end": 11315,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11157,
											"end": 11315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11215,
											"end": 11224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11248,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 11266,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 11275,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 11301,
											"end": 11306,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11275,
											"end": 11307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 11275,
											"end": 11307,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11275,
											"end": 11307,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 11275,
											"end": 11307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11266,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 11266,
											"end": 11308,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11266,
											"end": 11308,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 11266,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 11248,
											"end": 11309,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11248,
											"end": 11309,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 11248,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11235,
											"end": 11309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11235,
											"end": 11309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11157,
											"end": 11315,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11157,
											"end": 11315,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11157,
											"end": 11315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11157,
											"end": 11315,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11321,
											"end": 11468,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 11321,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 11455,
											"end": 11460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11416,
											"end": 11461,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11461,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 11416,
											"end": 11461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11411,
											"end": 11414,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11462,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11321,
											"end": 11468,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11474,
											"end": 11822,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11474,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11603,
											"end": 11607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11641,
											"end": 11643,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11630,
											"end": 11639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11618,
											"end": 11644,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11618,
											"end": 11644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11654,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 11722,
											"end": 11723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11711,
											"end": 11720,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11707,
											"end": 11724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11698,
											"end": 11704,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11654,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 11654,
											"end": 11725,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11654,
											"end": 11725,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 11654,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11735,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 11811,
											"end": 11813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11800,
											"end": 11809,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11796,
											"end": 11814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11787,
											"end": 11793,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11735,
											"end": 11815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 11735,
											"end": 11815,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11735,
											"end": 11815,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 11735,
											"end": 11815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11822,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11822,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11474,
											"end": 11822,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11828,
											"end": 12160,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 11828,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11949,
											"end": 11953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11987,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11976,
											"end": 11985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11972,
											"end": 11990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11964,
											"end": 11990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 12068,
											"end": 12069,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12057,
											"end": 12066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12053,
											"end": 12070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12044,
											"end": 12050,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 12000,
											"end": 12071,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12000,
											"end": 12071,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 12000,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12081,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 12149,
											"end": 12151,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12138,
											"end": 12147,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12134,
											"end": 12152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12125,
											"end": 12131,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12081,
											"end": 12153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 12081,
											"end": 12153,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12081,
											"end": 12153,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 12081,
											"end": 12153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 12160,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 12160,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 12160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 12160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 12160,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 12160,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12166,
											"end": 12530,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 12166,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12303,
											"end": 12307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12341,
											"end": 12343,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12330,
											"end": 12339,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12326,
											"end": 12344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12318,
											"end": 12344,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12354,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 12430,
											"end": 12431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12419,
											"end": 12428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12406,
											"end": 12412,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12354,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 12354,
											"end": 12433,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12354,
											"end": 12433,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 12354,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12443,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 12519,
											"end": 12521,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12504,
											"end": 12522,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12495,
											"end": 12501,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12443,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 12443,
											"end": 12523,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12443,
											"end": 12523,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 12443,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12166,
											"end": 12530,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12166,
											"end": 12530,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12166,
											"end": 12530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12166,
											"end": 12530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12166,
											"end": 12530,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12166,
											"end": 12530,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12536,
											"end": 12718,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 12536,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12676,
											"end": 12710,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12664,
											"end": 12670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12660,
											"end": 12674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12653,
											"end": 12711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12536,
											"end": 12718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12536,
											"end": 12718,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12866,
											"end": 12869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 12951,
											"end": 12953,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12946,
											"end": 12949,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 12887,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12880,
											"end": 12954,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12880,
											"end": 12954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 13052,
											"end": 13055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 12963,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13081,
											"end": 13083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13076,
											"end": 13079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13072,
											"end": 13084,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13084,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13065,
											"end": 13084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12724,
											"end": 13090,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13262,
											"end": 13266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13302,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13289,
											"end": 13298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13285,
											"end": 13303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13349,
											"end": 13358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13343,
											"end": 13347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13339,
											"end": 13359,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13335,
											"end": 13336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13324,
											"end": 13333,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13320,
											"end": 13337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13313,
											"end": 13360,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 13503,
											"end": 13507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 13377,
											"end": 13508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13369,
											"end": 13508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13369,
											"end": 13508,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13515,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13521,
											"end": 13751,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 13521,
											"end": 13751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13661,
											"end": 13695,
											"name": "PUSH",
											"source": 6,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 13657,
											"end": 13658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13645,
											"end": 13659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13638,
											"end": 13696,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13730,
											"end": 13743,
											"name": "PUSH",
											"source": 6,
											"value": "6E697469616C697A696E67000000000000000000000000000000000000000000"
										},
										{
											"begin": 13725,
											"end": 13727,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13717,
											"end": 13723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13713,
											"end": 13728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13706,
											"end": 13744,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13521,
											"end": 13751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13521,
											"end": 13751,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13899,
											"end": 13902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 13984,
											"end": 13986,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 13979,
											"end": 13982,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 13920,
											"end": 13987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13913,
											"end": 13987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13913,
											"end": 13987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 14085,
											"end": 14088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 13996,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14114,
											"end": 14116,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14109,
											"end": 14112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14105,
											"end": 14117,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14098,
											"end": 14117,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14098,
											"end": 14117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13757,
											"end": 14123,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14295,
											"end": 14299,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14322,
											"end": 14331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14310,
											"end": 14336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14310,
											"end": 14336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14382,
											"end": 14391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14376,
											"end": 14380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14372,
											"end": 14392,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14368,
											"end": 14369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14357,
											"end": 14366,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14353,
											"end": 14370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14346,
											"end": 14393,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 14536,
											"end": 14540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 14410,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14402,
											"end": 14541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14402,
											"end": 14541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14129,
											"end": 14548,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"PRECISION()": "aaf5eb68",
							"WEEK()": "f4359ce5",
							"balanceOf()": "722713f7",
							"converterFee()": "de74d499",
							"initialize(address,address,address)": "c0c53b8b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"royalties()": "f053dc5c",
							"royaltiesFee()": "99093a33",
							"setConverter(address)": "b19337a4",
							"setFees(uint256,uint256)": "0b78f9c0",
							"setRoyalties(address)": "2a9e63c6",
							"setSplitter(address,bool)": "d3ce9ab3",
							"split()": "f7654176",
							"splitter(address)": "351ad5e8",
							"stakingConverter()": "ce08baa7",
							"swapWBNBToBNB()": "de3b8b12",
							"transferOwnership(address)": "f2fde38b",
							"wbnb()": "8d72647e",
							"withdrawERC20(address)": "f4f3b200"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toStake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toRoyalties\",\"type\":\"uint256\"}],\"name\":\"Split\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"converterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wbnb\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingConverter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royalties\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royalties\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"royaltiesFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_converter\",\"type\":\"address\"}],\"name\":\"setConverter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountToStaking\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountToRoyalties\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royal\",\"type\":\"address\"}],\"name\":\"setRoyalties\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_splitter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_what\",\"type\":\"bool\"}],\"name\":\"setSplitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"split\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"splitter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingConverter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapWBNBToBNB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wbnb\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdrawERC20(address)\":{\"notice\":\"in case token get stuck.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTSalesSplitter.sol\":\"NFTSalesSplitter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"contracts/NFTSalesSplitter.sol\":{\"keccak256\":\"0x34ca4a8b9cd3f81bcef4c2473ce7a0c9a8a14935f9c11b9088fd1e6b585a5db9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e181824b1e69fc076a112e2262a1b155c70dffa536a679e1f22b29272f1e78e5\",\"dweb:/ipfs/QmPErQAVPQWY5o9wumkEu3t9CwNmZe1Lzs1EZfqYYXCfTT\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xe76d25c9fba7f49068a1c2cc605620fabb41d4c56acd48065615d7388d451cd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5877ab326850eadeca2062dc27eb3f94404879ec2ad3a0187ac390164866763\",\"dweb:/ipfs/QmT4DVbEkvBdCZezE4Ynb6AXfnbnWpptJhcvxtxBBujqaE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 625,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 659,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "converterFee",
								"offset": 0,
								"slot": "101",
								"type": "t_uint256"
							},
							{
								"astId": 661,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "royaltiesFee",
								"offset": 0,
								"slot": "102",
								"type": "t_uint256"
							},
							{
								"astId": 663,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "wbnb",
								"offset": 0,
								"slot": "103",
								"type": "t_address"
							},
							{
								"astId": 665,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "stakingConverter",
								"offset": 0,
								"slot": "104",
								"type": "t_address"
							},
							{
								"astId": 667,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "royalties",
								"offset": 0,
								"slot": "105",
								"type": "t_address"
							},
							{
								"astId": 671,
								"contract": "contracts/NFTSalesSplitter.sol:NFTSalesSplitter",
								"label": "splitter",
								"offset": 0,
								"slot": "106",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"withdrawERC20(address)": {
								"notice": "in case token get stuck."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xe76d25c9fba7f49068a1c2cc605620fabb41d4c56acd48065615d7388d451cd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5877ab326850eadeca2062dc27eb3f94404879ec2ad3a0187ac390164866763\",\"dweb:/ipfs/QmT4DVbEkvBdCZezE4Ynb6AXfnbnWpptJhcvxtxBBujqaE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							584
						],
						"ContextUpgradeable": [
							626
						],
						"Initializable": [
							300
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 627,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 301,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 626,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								626,
								300
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							584
						],
						"Initializable": [
							300
						]
					},
					"id": 301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 301,
							"sourceUnit": 585,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 300,
							"linearizedBaseContracts": [
								300
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 300,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 300,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3258:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3273:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3268:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3268:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3290:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3291:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3336:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3354:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3369:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3354:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3336:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3335:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3376:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3415:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$300",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$300",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3407:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3407:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3407:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 584,
																						"src": "3377:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$584_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 318,
																					"src": "3377:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3377:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3425:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3441:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3425:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3376:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3375:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3335:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3457:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3314:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3525:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3540:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3525:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3525:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3555:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3551:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3571:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3585:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3601:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3585:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3585:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3625:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3640:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3636:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3656:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3670:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3686:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3670:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3670:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3722:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3710:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3710:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3705:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:399:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3244:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:1"
									},
									"src": "3235:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4852:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4870:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4871:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4888:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4903:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4888:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4870:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4862:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4862:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4971:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4986:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4971:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4971:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "5003:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5019:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5003:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "5003:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "5033:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "5044:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5060:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5044:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "5044:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "5092:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5080:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5080:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "5075:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3747:1062:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4823:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4837:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:15:1"
									},
									"src": "4814:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "5345:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5363:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5378:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5355:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "5355:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "5434:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "5113:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "5326:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5342:2:1"
									},
									"src": "5317:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5977:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5995:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5996:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6011:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5987:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5987:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "6067:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6087:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6087:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6082:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6082:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6082:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6067:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "6063:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "6099:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "6113:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6133:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6133:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6128:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6128:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6128:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6113:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "6113:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6179:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6179:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6174:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6174:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6174:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "6162:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6162:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "6157:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "5448:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5937:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5957:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:1"
									},
									"scope": 300,
									"src": "5928:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "6381:36:1",
										"statements": [
											{
												"expression": {
													"id": 287,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "6398:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 286,
												"id": 288,
												"nodeType": "Return",
												"src": "6391:19:1"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "6213:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6326:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6348:2:1"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "6374:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 284,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6374:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6373:7:1"
									},
									"scope": 300,
									"src": "6317:100:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "6589:37:1",
										"statements": [
											{
												"expression": {
													"id": 296,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 141,
													"src": "6606:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 297,
												"nodeType": "Return",
												"src": "6599:20:1"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "6423:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6542:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6557:2:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "6583:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6583:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:6:1"
									},
									"scope": 300,
									"src": "6533:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 301,
							"src": "2383:4245:1",
							"usedErrors": []
						}
					],
					"src": "113:6516:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							584
						]
					},
					"id": 585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 303,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 584,
							"linearizedBaseContracts": [
								584
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "1252:254:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 311,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1476:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 310,
												"id": 316,
												"nodeType": "Return",
												"src": "1469:30:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1206:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1246:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:2"
									},
									"scope": 584,
									"src": "1186:320:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "2494:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 329,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$584",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$584",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 327,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 332,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "2537:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:2"
											},
											{
												"assignments": [
													338,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 351,
														"src": "2589:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 337,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 345,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 339,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "2607:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 341,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "2629:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 347,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2658:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:2"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2442:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2469:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:2"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:2"
									},
									"scope": 584,
									"src": "2423:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3566:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 363,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 355,
															"src": "3605:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3613:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3622:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 362,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "3583:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 361,
												"id": 368,
												"nodeType": "Return",
												"src": "3576:79:2"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3499:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3515:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:2"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3552:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 359,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:2"
									},
									"scope": 584,
									"src": "3477:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "4031:76:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 383,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4070:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "4078:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4084:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 386,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4087:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 382,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "4048:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 381,
												"id": 388,
												"nodeType": "Return",
												"src": "4041:59:2"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "3668:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3893:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3923:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3915:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3952:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3939:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3939:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3980:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3966:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3966:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:93:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "4017:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4017:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:14:2"
									},
									"scope": 584,
									"src": "3884:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "4612:111:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4651:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4659:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 405,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4665:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4672:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 402,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															410,
															454
														],
														"referencedDeclaration": 454,
														"src": "4629:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4629:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 401,
												"id": 408,
												"nodeType": "Return",
												"src": "4622:94:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "4113:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4478:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4517:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4509:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4546:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4533:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4533:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:80:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "4598:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4598:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:14:2"
									},
									"scope": 584,
									"src": "4469:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "5150:267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 427,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5176:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$584",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$584",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5168:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 425,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5168:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5168:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5168:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 430,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5193:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5200:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5160:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "5160:81:2"
											},
											{
												"assignments": [
													436,
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5257:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5252:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 435,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5252:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5279:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "5266:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 437,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [
														{
															"id": 443,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5319:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 439,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 413,
																"src": "5293:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5293:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 441,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5312:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5293:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5293:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5251:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "5368:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "5376:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 449,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "5385:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 450,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5397:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 446,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "5341:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 423,
												"id": 452,
												"nodeType": "Return",
												"src": "5334:76:2"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "4729:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4980:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5019:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5011:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5048:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5035:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5035:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5070:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5062:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5099:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5085:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5085:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:116:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "5136:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5136:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:14:2"
									},
									"scope": 584,
									"src": "4971:446:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "5694:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5730:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "5738:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5744:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 464,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															500
														],
														"referencedDeclaration": 500,
														"src": "5711:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5711:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 469,
												"nodeType": "Return",
												"src": "5704:80:2"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "5423:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5603:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5630:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5622:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5651:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5638:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5638:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5621:35:2"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5680:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5680:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:14:2"
									},
									"scope": 584,
									"src": "5594:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "6133:168:2",
										"statements": [
											{
												"assignments": [
													484,
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6149:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "6144:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 483,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6144:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6171:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "6158:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 485,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"arguments": [
														{
															"id": 489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "6203:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 487,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6185:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6185:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6185:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 493,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6252:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "6260:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 495,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "6269:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 496,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6281:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 492,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "6225:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6225:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 498,
												"nodeType": "Return",
												"src": "6218:76:2"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "5797:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5984:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6020:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6012:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6049:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6036:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6036:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6077:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6063:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6063:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6002:93:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "6119:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6118:14:2"
									},
									"scope": 584,
									"src": "5975:326:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "6783:434:2",
										"statements": [
											{
												"condition": {
													"id": 514,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "6797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 536,
													"nodeType": "Block",
													"src": "7153:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 532,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "7175:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 533,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "7187:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 531,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "7167:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7167:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 535,
															"nodeType": "ExpressionStatement",
															"src": "7167:33:2"
														}
													]
												},
												"id": 537,
												"nodeType": "IfStatement",
												"src": "6793:418:2",
												"trueBody": {
													"id": 530,
													"nodeType": "Block",
													"src": "6806:341:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 515,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "6824:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6824:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6845:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6824:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 527,
															"nodeType": "IfStatement",
															"src": "6820:286:2",
															"trueBody": {
																"id": 526,
																"nodeType": "Block",
																"src": "6848:258:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 521,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 503,
																							"src": "7050:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 520,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "7039:10:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 522,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7039:18:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 523,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7059:31:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 519,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7031:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7031:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 525,
																		"nodeType": "ExpressionStatement",
																		"src": "7031:60:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 528,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "7126:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 513,
															"id": 529,
															"nodeType": "Return",
															"src": "7119:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "6307:277:2",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "6598:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6642:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6634:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6663:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6658:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6658:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6693:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6680:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6680:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6727:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6713:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6713:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6624:121:2"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6769:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6769:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:14:2"
									},
									"scope": 584,
									"src": "6589:628:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "7598:135:2",
										"statements": [
											{
												"condition": {
													"id": 551,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "7612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "7669:58:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "7691:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 557,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "7703:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 555,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "7683:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "7683:33:2"
														}
													]
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "7608:119:2",
												"trueBody": {
													"id": 554,
													"nodeType": "Block",
													"src": "7621:42:2",
													"statements": [
														{
															"expression": {
																"id": 552,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "7642:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 550,
															"id": 553,
															"nodeType": "Return",
															"src": "7635:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "7223:210:2",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7447:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7478:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "7473:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7473:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7508:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "7495:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7495:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7542:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "7528:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7528:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:97:2"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "7584:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7584:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:14:2"
									},
									"scope": 584,
									"src": "7438:295:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "7822:457:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 570,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "7898:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7898:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7918:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7898:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "8228:45:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 577,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "8249:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 576,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8242:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8242:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 579,
															"nodeType": "ExpressionStatement",
															"src": "8242:20:2"
														}
													]
												},
												"id": 581,
												"nodeType": "IfStatement",
												"src": "7894:379:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "7921:301:2",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8079:133:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8097:40:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "8126:10:2"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8120:5:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8120:17:2"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8101:15:2",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8165:2:2",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "8169:10:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8161:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8161:19:2"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "8182:15:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8154:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8154:44:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8154:44:2"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 565,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8126:10:2",
																	"valueSize": 1
																},
																{
																	"declaration": 565,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8169:10:2",
																	"valueSize": 1
																}
															],
															"id": 574,
															"nodeType": "InlineAssembly",
															"src": "8070:142:2"
														}
													]
												}
											}
										]
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "7748:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7769:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "7756:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7795:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "7781:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 566,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7781:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:53:2"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7822:0:2"
									},
									"scope": 584,
									"src": "7739:540:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 585,
							"src": "194:8087:2",
							"usedErrors": []
						}
					],
					"src": "101:8181:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							584
						],
						"ContextUpgradeable": [
							626
						],
						"Initializable": [
							300
						]
					},
					"id": 627,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 587,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 627,
							"sourceUnit": 301,
							"src": "110:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 589,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "691:13:3"
									},
									"id": 590,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 626,
							"linearizedBaseContracts": [
								626,
								300
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "763:7:3",
										"statements": []
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 593,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 592,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:3"
									},
									"scope": 626,
									"src": "711:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "838:7:3",
										"statements": []
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 599,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 598,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:3"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:3"
									},
									"scope": 626,
									"src": "776:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "912:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 607,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 606,
												"id": 609,
												"nodeType": "Return",
												"src": "922:17:3"
											}
										]
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:3"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "903:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:3"
									},
									"scope": 626,
									"src": "850:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "1019:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 616,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 615,
												"id": 618,
												"nodeType": "Return",
												"src": "1029:15:3"
											}
										]
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:3"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "1003:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:3"
									},
									"scope": 626,
									"src": "952:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 625,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 626,
									"src": "1316:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 622,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 624,
										"length": {
											"hexValue": "3530",
											"id": 623,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 627,
							"src": "651:693:3",
							"usedErrors": []
						}
					],
					"src": "86:1259:3"
				},
				"id": 3
			},
			"contracts/NFTSalesSplitter.sol": {
				"ast": {
					"absolutePath": "contracts/NFTSalesSplitter.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							584
						],
						"ContextUpgradeable": [
							626
						],
						"IERC20": [
							1128
						],
						"IRoyalties": [
							636
						],
						"IStakingNFTConverter": [
							647
						],
						"IWBNB": [
							640
						],
						"Initializable": [
							300
						],
						"NFTSalesSplitter": [
							1049
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 1050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 628,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 629,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1050,
							"sourceUnit": 1129,
							"src": "57:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 630,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1050,
							"sourceUnit": 132,
							"src": "92:75:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoyalties",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 636,
							"linearizedBaseContracts": [
								636
							],
							"name": "IRoyalties",
							"nameLocation": "180:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b6b55f25",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "205:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "221:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "213:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "213:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "212:16:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:0:4"
									},
									"scope": 636,
									"src": "196:42:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1050,
							"src": "170:70:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWBNB",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 640,
							"linearizedBaseContracts": [
								640
							],
							"name": "IWBNB",
							"nameLocation": "251:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "272:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "279:2:4"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:0:4"
									},
									"scope": 640,
									"src": "263:37:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1050,
							"src": "241:61:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IStakingNFTConverter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 647,
							"linearizedBaseContracts": [
								647
							],
							"name": "IStakingNFTConverter",
							"nameLocation": "314:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d294f093",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimFees",
									"nameLocation": "350:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "359:2:4"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "370:0:4"
									},
									"scope": 647,
									"src": "341:30:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8119c065",
									"id": 646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "385:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "389:2:4"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:0:4"
									},
									"scope": 647,
									"src": "376:25:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1050,
							"src": "304:99:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 648,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "487:18:4"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "487:18:4"
								}
							],
							"canonicalName": "NFTSalesSplitter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1049,
							"linearizedBaseContracts": [
								1049,
								131,
								626,
								300
							],
							"name": "NFTSalesSplitter",
							"nameLocation": "467:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "aaf5eb68",
									"id": 652,
									"mutability": "constant",
									"name": "PRECISION",
									"nameLocation": "538:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1049,
									"src": "514:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 650,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "514:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 651,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "550:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f4359ce5",
									"id": 657,
									"mutability": "constant",
									"name": "WEEK",
									"nameLocation": "584:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1049,
									"src": "560:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 653,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "560:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"id": 656,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3836343030",
											"id": 654,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "591:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_86400_by_1",
												"typeString": "int_const 86400"
											},
											"value": "86400"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "37",
											"id": 655,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "599:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_7_by_1",
												"typeString": "int_const 7"
											},
											"value": "7"
										},
										"src": "591:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "de74d499",
									"id": 659,
									"mutability": "mutable",
									"name": "converterFee",
									"nameLocation": "621:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1049,
									"src": "606:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 658,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "606:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "99093a33",
									"id": 661,
									"mutability": "mutable",
									"name": "royaltiesFee",
									"nameLocation": "654:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1049,
									"src": "639:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 660,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "639:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8d72647e",
									"id": 663,
									"mutability": "mutable",
									"name": "wbnb",
									"nameLocation": "693:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1049,
									"src": "678:19:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 662,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "678:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce08baa7",
									"id": 665,
									"mutability": "mutable",
									"name": "stakingConverter",
									"nameLocation": "723:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1049,
									"src": "708:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 664,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "708:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f053dc5c",
									"id": 667,
									"mutability": "mutable",
									"name": "royalties",
									"nameLocation": "760:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1049,
									"src": "745:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 666,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "745:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "351ad5e8",
									"id": 671,
									"mutability": "mutable",
									"name": "splitter",
									"nameLocation": "809:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1049,
									"src": "777:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 670,
										"keyType": {
											"id": 668,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "785:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "777:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 669,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "796:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cf0974dfd867840133a0d4b02f1672f24017796fb8892d1e0d587692e4da90ab",
									"id": 679,
									"name": "Split",
									"nameLocation": "831:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"indexed": true,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "853:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "837:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"indexed": false,
												"mutability": "mutable",
												"name": "toStake",
												"nameLocation": "872:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "864:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "toRoyalties",
												"nameLocation": "889:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "881:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:65:4"
									},
									"src": "825:77:4"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "935:82:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 682,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "953:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "953:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 684,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 54,
																		"src": "967:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "967:7:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "953:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 687,
																	"name": "splitter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "978:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 690,
																"indexExpression": {
																	"expression": {
																		"id": 688,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "987:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "987:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "978:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "953:45:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "945:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "945:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "945:54:4"
											},
											{
												"id": 694,
												"nodeType": "PlaceholderStatement",
												"src": "1009:1:4"
											}
										]
									},
									"id": 696,
									"name": "onlyAllowed",
									"nameLocation": "921:11:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:4"
									},
									"src": "912:105:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "1037:2:4",
										"statements": []
									},
									"id": 700,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1034:2:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1037:0:4"
									},
									"scope": 1049,
									"src": "1023:16:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "1147:416:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 711,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1157:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1157:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1157:16:4"
											},
											{
												"expression": {
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 714,
														"name": "wbnb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "1404:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 715,
														"name": "_wbnb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "1411:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1404:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 717,
												"nodeType": "ExpressionStatement",
												"src": "1404:12:4"
											},
											{
												"expression": {
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 718,
														"name": "stakingConverter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "1426:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 719,
														"name": "_stakingConverter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1445:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1426:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "1426:36:4"
											},
											{
												"expression": {
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 722,
														"name": "royalties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "1472:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 723,
														"name": "_royalties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "1484:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1472:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "1472:22:4"
											},
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "converterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "1509:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333333",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1524:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_333_by_1",
															"typeString": "int_const 333"
														},
														"value": "333"
													},
													"src": "1509:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "1509:18:4"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 730,
														"name": "royaltiesFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1537:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363637",
														"id": 731,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1552:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_667_by_1",
															"typeString": "int_const 667"
														},
														"value": "667"
													},
													"src": "1537:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "1537:18:4"
											}
										]
									},
									"functionSelector": "c0c53b8b",
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 708,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "1127:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1127:11:4"
										}
									],
									"name": "initialize",
									"nameLocation": "1054:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "_wbnb",
												"nameLocation": "1073:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1065:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "_stakingConverter",
												"nameLocation": "1088:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1080:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "_royalties",
												"nameLocation": "1115:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1107:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:62:4"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:0:4"
									},
									"scope": 1049,
									"src": "1045:518:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "1613:33:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 740,
														"name": "_swapWBNBToBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "1623:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "1623:16:4"
											}
										]
									},
									"functionSelector": "de3b8b12",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 738,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 737,
												"name": "onlyAllowed",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "1601:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1601:11:4"
										}
									],
									"name": "swapWBNBToBNB",
									"nameLocation": "1578:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1591:2:4"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1613:0:4"
									},
									"scope": 1049,
									"src": "1569:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "1687:121:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 749,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1708:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTSalesSplitter_$1049",
																		"typeString": "contract NFTSalesSplitter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTSalesSplitter_$1049",
																		"typeString": "contract NFTSalesSplitter"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1700:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1700:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1700:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1700:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1700:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 767,
												"nodeType": "IfStatement",
												"src": "1697:105:4",
												"trueBody": {
													"id": 766,
													"nodeType": "Block",
													"src": "1726:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 755,
																					"name": "wbnb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 663,
																					"src": "1746:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 754,
																				"name": "IWBNB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 640,
																				"src": "1740:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IWBNB_$640_$",
																					"typeString": "type(contract IWBNB)"
																				}
																			},
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1740:11:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IWBNB_$640",
																				"typeString": "contract IWBNB"
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "deposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 639,
																		"src": "1740:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_payable$__$returns$__$",
																			"typeString": "function () payable external"
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"id": 760,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "1775:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_NFTSalesSplitter_$1049",
																							"typeString": "contract NFTSalesSplitter"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_NFTSalesSplitter_$1049",
																							"typeString": "contract NFTSalesSplitter"
																						}
																					],
																					"id": 759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1767:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 758,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1767:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1767:13:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance",
																			"nodeType": "MemberAccess",
																			"src": "1767:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "1740:49:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$__$returns$__$value",
																		"typeString": "function () payable external"
																	}
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1740:51:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 765,
															"nodeType": "ExpressionStatement",
															"src": "1740:51:4"
														}
													]
												}
											}
										]
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_swapWBNBToBNB",
									"nameLocation": "1661:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1675:2:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:0:4"
									},
									"scope": 1049,
									"src": "1652:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "1850:1251:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 774,
														"name": "_swapWBNBToBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "1918:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1918:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "ExpressionStatement",
												"src": "1918:16:4"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1953:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "1945:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1945:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 781,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 779,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "1963:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:11:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1945:29:4"
											},
											{
												"assignments": [
													783
												],
												"declarations": [
													{
														"constant": false,
														"id": 783,
														"mutability": "mutable",
														"name": "stakingAmount",
														"nameLocation": "1992:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "1984:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 782,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1984:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"hexValue": "30",
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2008:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1984:25:4"
											},
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "royaltiesAmount",
														"nameLocation": "2027:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "2019:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2019:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 789,
												"initialValue": {
													"hexValue": "30",
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2045:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2019:27:4"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "timestamp",
														"nameLocation": "2064:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "2056:17:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2056:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 792,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2076:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2076:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 794,
															"name": "WEEK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "2094:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 796,
														"name": "WEEK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "2101:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2076:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2056:49:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2118:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2118:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 901,
													"nodeType": "Block",
													"src": "3038:52:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 896,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "3063:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3074:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3077:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 895,
																	"name": "Split",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "3057:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3057:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 900,
															"nodeType": "EmitStatement",
															"src": "3052:27:4"
														}
													]
												},
												"id": 902,
												"nodeType": "IfStatement",
												"src": "2115:975:4",
												"trueBody": {
													"id": 894,
													"nodeType": "Block",
													"src": "2133:899:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 802,
																	"name": "stakingConverter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "2150:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2178:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2170:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 803,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2170:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2170:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2150:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 837,
															"nodeType": "IfStatement",
															"src": "2147:320:4",
															"trueBody": {
																"id": 836,
																"nodeType": "Block",
																"src": "2181:286:4",
																"statements": [
																	{
																		"expression": {
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 808,
																				"name": "stakingAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 783,
																				"src": "2199:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 811,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 809,
																						"name": "balance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 778,
																						"src": "2215:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 810,
																						"name": "converterFee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 659,
																						"src": "2225:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2215:22:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 812,
																					"name": "PRECISION",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "2240:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2215:34:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2199:50:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 815,
																		"nodeType": "ExpressionStatement",
																		"src": "2199:50:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 820,
																					"name": "stakingConverter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 665,
																					"src": "2289:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 821,
																					"name": "stakingAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 783,
																					"src": "2307:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 817,
																							"name": "wbnb",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 663,
																							"src": "2274:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 816,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1128,
																						"src": "2267:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1128_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2267:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1128",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1065,
																				"src": "2267:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2267:54:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 823,
																		"nodeType": "ExpressionStatement",
																		"src": "2267:54:4"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 825,
																							"name": "stakingConverter",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 665,
																							"src": "2360:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 824,
																						"name": "IStakingNFTConverter",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 647,
																						"src": "2339:20:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IStakingNFTConverter_$647_$",
																							"typeString": "type(contract IStakingNFTConverter)"
																						}
																					},
																					"id": 826,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2339:38:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IStakingNFTConverter_$647",
																						"typeString": "contract IStakingNFTConverter"
																					}
																				},
																				"id": 827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "claimFees",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 643,
																				"src": "2339:48:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
																					"typeString": "function () external"
																				}
																			},
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2339:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 829,
																		"nodeType": "ExpressionStatement",
																		"src": "2339:50:4"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"arguments": [
																						{
																							"id": 831,
																							"name": "stakingConverter",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 665,
																							"src": "2428:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 830,
																						"name": "IStakingNFTConverter",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 647,
																						"src": "2407:20:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IStakingNFTConverter_$647_$",
																							"typeString": "type(contract IStakingNFTConverter)"
																						}
																					},
																					"id": 832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2407:38:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IStakingNFTConverter_$647",
																						"typeString": "contract IStakingNFTConverter"
																					}
																				},
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "swap",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 646,
																				"src": "2407:43:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
																					"typeString": "function () external"
																				}
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2407:45:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 835,
																		"nodeType": "ExpressionStatement",
																		"src": "2407:45:4"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 838,
																	"name": "royalties",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "2484:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2505:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2497:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 839,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2497:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2497:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2484:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 887,
															"nodeType": "IfStatement",
															"src": "2481:471:4",
															"trueBody": {
																"id": 886,
																"nodeType": "Block",
																"src": "2508:444:4",
																"statements": [
																	{
																		"expression": {
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 844,
																				"name": "royaltiesAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 787,
																				"src": "2526:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 847,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 845,
																						"name": "balance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 778,
																						"src": "2544:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 846,
																						"name": "royaltiesFee",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 661,
																						"src": "2554:12:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2544:22:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 848,
																					"name": "PRECISION",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 652,
																					"src": "2569:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2544:34:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2526:52:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 851,
																		"nodeType": "ExpressionStatement",
																		"src": "2526:52:4"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 852,
																					"name": "balanceOf",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 920,
																					"src": "2656:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 853,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2656:11:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 854,
																				"name": "royaltiesAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 787,
																				"src": "2670:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2656:29:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 862,
																		"nodeType": "IfStatement",
																		"src": "2653:103:4",
																		"trueBody": {
																			"id": 861,
																			"nodeType": "Block",
																			"src": "2686:70:4",
																			"statements": [
																				{
																					"expression": {
																						"id": 859,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 856,
																							"name": "royaltiesAmount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 787,
																							"src": "2708:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 857,
																								"name": "balanceOf",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 920,
																								"src": "2726:9:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 858,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "2726:11:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "2708:29:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 860,
																					"nodeType": "ExpressionStatement",
																					"src": "2708:29:4"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 867,
																					"name": "royalties",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "2794:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2805:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 864,
																							"name": "wbnb",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 663,
																							"src": "2780:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 863,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1128,
																						"src": "2773:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1128_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 865,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2773:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1128",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1111,
																				"src": "2773:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2773:34:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 870,
																		"nodeType": "ExpressionStatement",
																		"src": "2773:34:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 875,
																					"name": "royalties",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "2846:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 876,
																					"name": "royaltiesAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "2857:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 872,
																							"name": "wbnb",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 663,
																							"src": "2832:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 871,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1128,
																						"src": "2825:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$1128_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2825:12:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1128",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 874,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1111,
																				"src": "2825:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2825:48:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 878,
																		"nodeType": "ExpressionStatement",
																		"src": "2825:48:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 883,
																					"name": "royaltiesAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "2921:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 880,
																							"name": "royalties",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 667,
																							"src": "2902:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 879,
																						"name": "IRoyalties",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 636,
																						"src": "2891:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IRoyalties_$636_$",
																							"typeString": "type(contract IRoyalties)"
																						}
																					},
																					"id": 881,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2891:21:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IRoyalties_$636",
																						"typeString": "contract IRoyalties"
																					}
																				},
																				"id": 882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "deposit",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 635,
																				"src": "2891:29:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) external"
																				}
																			},
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2891:46:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 885,
																		"nodeType": "ExpressionStatement",
																		"src": "2891:46:4"
																	}
																]
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 889,
																		"name": "timestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "2979:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 890,
																		"name": "stakingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "2990:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 891,
																		"name": "royaltiesAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "3005:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 888,
																	"name": "Split",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "2973:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2973:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 893,
															"nodeType": "EmitStatement",
															"src": "2968:53:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "f7654176",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 772,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 771,
												"name": "onlyAllowed",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 696,
												"src": "1838:11:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1838:11:4"
										}
									],
									"name": "split",
									"nameLocation": "1823:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1828:2:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:0:4"
									},
									"scope": 1049,
									"src": "1814:1287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "3153:61:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 915,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3201:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTSalesSplitter_$1049",
																		"typeString": "contract NFTSalesSplitter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTSalesSplitter_$1049",
																		"typeString": "contract NFTSalesSplitter"
																	}
																],
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3193:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 913,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3193:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3193:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 910,
																	"name": "wbnb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "3177:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 909,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "3170:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1128_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3170:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1128",
																"typeString": "contract IERC20"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1082,
														"src": "3170:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3170:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 908,
												"id": 918,
												"nodeType": "Return",
												"src": "3163:44:4"
											}
										]
									},
									"functionSelector": "722713f7",
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3116:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3125:2:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "3148:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3148:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:6:4"
									},
									"scope": 1049,
									"src": "3107:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "3281:89:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "_converter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "3299:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3321:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3313:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3313:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3313:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3299:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3291:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3291:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "3291:33:4"
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 936,
														"name": "stakingConverter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "3334:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "_converter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "3353:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3334:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "3334:29:4"
											}
										]
									},
									"functionSelector": "b19337a4",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 925,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 924,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "3271:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3271:9:4"
										}
									],
									"name": "setConverter",
									"nameLocation": "3229:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "_converter",
												"nameLocation": "3250:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3242:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:20:4"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3281:0:4"
									},
									"scope": 1049,
									"src": "3220:150:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "3433:74:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "_royal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "3451:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3469:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3461:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 950,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3461:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3461:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3451:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3443:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3443:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "3443:29:4"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 957,
														"name": "royalties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "3482:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 958,
														"name": "_royal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3494:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3482:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "3482:18:4"
											}
										]
									},
									"functionSelector": "2a9e63c6",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 946,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 945,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "3423:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3423:9:4"
										}
									],
									"name": "setRoyalties",
									"nameLocation": "3385:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "_royal",
												"nameLocation": "3406:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "3398:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3397:16:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3433:0:4"
									},
									"scope": 1049,
									"src": "3376:131:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "3584:44:4",
										"statements": [
											{
												"expression": {
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 971,
															"name": "splitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "3594:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 973,
														"indexExpression": {
															"id": 972,
															"name": "_splitter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "3603:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3594:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 974,
														"name": "_what",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "3616:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3594:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "3594:27:4"
											}
										]
									},
									"functionSelector": "d3ce9ab3",
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 968,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "3574:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3574:9:4"
										}
									],
									"name": "setSplitter",
									"nameLocation": "3522:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "_splitter",
												"nameLocation": "3542:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3534:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "_what",
												"nameLocation": "3558:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "3553:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3553:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3533:31:4"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3584:0:4"
									},
									"scope": 1049,
									"src": "3513:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "3737:169:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 987,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "3755:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3773:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3765:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 988,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3765:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3765:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3755:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3747:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3747:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "3747:29:4"
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "_balance",
														"nameLocation": "3794:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1016,
														"src": "3786:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3786:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1003,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3838:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTSalesSplitter_$1049",
																		"typeString": "contract NFTSalesSplitter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTSalesSplitter_$1049",
																		"typeString": "contract NFTSalesSplitter"
																	}
																],
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3830:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1001,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3830:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3830:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 998,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "3812:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 997,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "3805:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1128_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3805:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1128",
																"typeString": "contract IERC20"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1082,
														"src": "3805:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3805:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3786:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1011,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3878:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3878:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3890:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1008,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "3861:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1007,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "3854:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1128_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3854:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1128",
																"typeString": "contract IERC20"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "3854:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3854:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "3854:45:4"
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "3639:35:4",
										"text": "@notice in case token get stuck."
									},
									"functionSelector": "f4f3b200",
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 984,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 983,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "3727:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3727:9:4"
										}
									],
									"name": "withdrawERC20",
									"nameLocation": "3688:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3710:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "3702:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3702:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3701:16:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3737:0:4"
									},
									"scope": 1049,
									"src": "3679:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "4003:162:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1027,
																	"name": "converterFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "4021:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1028,
																	"name": "royaltiesFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 661,
																	"src": "4036:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4021:27:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1030,
																"name": "PRECISION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "4052:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4021:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6f206d616e79",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4063:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619",
																"typeString": "literal_string \"too many\""
															},
															"value": "too many"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b420cae58e58596b0e29ec21498b1f49b853ae7089f0518715d10b667afe6619",
																"typeString": "literal_string \"too many\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4013:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4013:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "4013:61:4"
											},
											{
												"expression": {
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1035,
														"name": "converterFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 659,
														"src": "4084:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1036,
														"name": "_amountToStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "4099:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4084:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "4084:31:4"
											},
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1039,
														"name": "royaltiesFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "4125:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1040,
														"name": "_amountToRoyalties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "4140:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4125:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "4125:33:4"
											}
										]
									},
									"functionSelector": "0b78f9c0",
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1023,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "3993:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3993:9:4"
										}
									],
									"name": "setFees",
									"nameLocation": "3921:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "_amountToStaking",
												"nameLocation": "3937:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3929:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "_amountToRoyalties",
												"nameLocation": "3963:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3955:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3955:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:55:4"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4003:0:4"
									},
									"scope": 1049,
									"src": "3912:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "4198:2:4",
										"statements": []
									},
									"id": 1048,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4178:2:4"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:4"
									},
									"scope": 1049,
									"src": "4171:29:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1050,
							"src": "458:3745:4",
							"usedErrors": []
						}
					],
					"src": "32:4171:4"
				},
				"id": 4
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1128
						]
					},
					"id": 1129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1051,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1128,
							"linearizedBaseContracts": [
								1128
							],
							"name": "IERC20",
							"nameLocation": "67:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "89:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "100:2:5"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "126:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "125:9:5"
									},
									"scope": 1128,
									"src": "80:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "149:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "166:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "158:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "158:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "182:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "177:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:32:5"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "208:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "207:6:5"
									},
									"scope": 1128,
									"src": "140:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "228:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "236:2:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "262:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1067,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "262:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "261:7:5"
									},
									"scope": 1128,
									"src": "219:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "283:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "289:2:5"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "315:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1072,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "315:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:15:5"
									},
									"scope": 1128,
									"src": "274:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "344:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "354:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:9:5"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "386:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "386:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:6:5"
									},
									"scope": 1128,
									"src": "335:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "406:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "427:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "419:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "443:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "435:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "459:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "454:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "454:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "418:48:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "485:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "485:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:6:5"
									},
									"scope": 1128,
									"src": "397:94:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "505:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "523:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "515:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "538:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "530:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:32:5"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "570:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "570:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:6:5"
									},
									"scope": 1128,
									"src": "496:80:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "590:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "606:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "598:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "615:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "615:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:29:5"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "645:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "645:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:6:5"
									},
									"scope": 1128,
									"src": "581:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1119,
									"name": "Transfer",
									"nameLocation": "663:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "688:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "672:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "710:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "694:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "719:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "714:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "714:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:54:5"
									},
									"src": "657:69:5"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1127,
									"name": "Approval",
									"nameLocation": "737:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "762:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "746:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "785:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "769:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "799:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "794:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "794:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:60:5"
									},
									"src": "731:75:5"
								}
							],
							"scope": 1129,
							"src": "57:751:5",
							"usedErrors": []
						}
					],
					"src": "32:777:5"
				},
				"id": 5
			}
		}
	}
}